[2020-05-21T14:43:20.274Z][QUERY]: START TRANSACTION
[2020-05-21T14:43:20.312Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T14:43:20.651Z][QUERY]: COMMIT
[2020-05-21T14:50:54.891Z][QUERY]: START TRANSACTION
[2020-05-21T14:50:54.898Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T14:50:54.907Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T14:50:54.908Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T14:50:54.909Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T14:50:54.909Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T14:50:54.910Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T14:50:55.085Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T14:50:55.095Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-21T14:50:55.226Z][QUERY]: COMMIT
[2020-05-21T15:08:00.978Z][QUERY]: START TRANSACTION
[2020-05-21T15:08:00.988Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:08:01.002Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:01.003Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:01.004Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:01.005Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:01.005Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:08:01.011Z][QUERY]: START TRANSACTION
[2020-05-21T15:08:01.015Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:08:01.021Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:01.021Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:01.022Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:01.023Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:01.023Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:08:01.204Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:08:01.205Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:08:01.215Z][QUERY]: COMMIT
[2020-05-21T15:08:01.215Z][QUERY]: COMMIT
[2020-05-21T15:08:35.580Z][QUERY]: START TRANSACTION
[2020-05-21T15:08:35.587Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:08:35.591Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:35.592Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:35.593Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:35.594Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:35.594Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:08:35.868Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:08:35.880Z][QUERY]: COMMIT
[2020-05-21T15:08:36.339Z][QUERY]: START TRANSACTION
[2020-05-21T15:08:36.350Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:08:36.354Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:36.355Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:08:36.356Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:36.357Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:08:36.357Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:08:36.589Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:08:36.603Z][QUERY]: COMMIT
[2020-05-21T15:09:36.809Z][QUERY]: START TRANSACTION
[2020-05-21T15:09:36.814Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:09:36.818Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:09:36.819Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:09:36.819Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:09:36.820Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:09:36.820Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:09:36.884Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:09:36.896Z][QUERY]: COMMIT
[2020-05-21T15:15:40.820Z][QUERY]: START TRANSACTION
[2020-05-21T15:15:40.825Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:15:40.831Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:15:40.832Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:15:40.832Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:15:40.833Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:15:40.834Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:15:40.913Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:15:40.924Z][QUERY]: COMMIT
[2020-05-21T15:18:39.704Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:30:20.341Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:38:36.581Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:41:35.663Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:42:29.934Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:50:31.331Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:55:18.773Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T15:59:27.899Z][QUERY]: START TRANSACTION
[2020-05-21T15:59:27.905Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T15:59:27.913Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:59:27.914Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T15:59:27.915Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:59:27.915Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T15:59:27.916Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T15:59:28.072Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T15:59:28.084Z][QUERY]: COMMIT
[2020-05-21T16:04:19.688Z][QUERY]: START TRANSACTION
[2020-05-21T16:04:19.692Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T16:04:19.698Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T16:04:19.699Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T16:04:19.700Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T16:04:19.700Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T16:04:19.701Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T16:04:19.787Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T16:04:19.798Z][QUERY]: COMMIT
[2020-05-21T16:06:52.155Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:08:09.710Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:10:13.041Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:12:07.845Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:13:05.048Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:19:15.325Z][QUERY]: START TRANSACTION
[2020-05-21T16:19:15.330Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T16:19:15.337Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T16:19:15.338Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T16:19:15.339Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T16:19:15.340Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T16:19:15.341Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T16:19:15.490Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T16:19:15.499Z][QUERY]: COMMIT
[2020-05-21T16:25:05.446Z][QUERY]: START TRANSACTION
[2020-05-21T16:25:05.458Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T16:25:05.472Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T16:25:05.474Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T16:25:05.474Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T16:25:05.476Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T16:25:05.477Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T16:25:05.866Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T16:25:05.877Z][QUERY]: COMMIT
[2020-05-21T16:25:58.944Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:32:44.902Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:35:22.747Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:35:50.739Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:45:58.828Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:46:37.298Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:47:22.517Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:48:31.480Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:48:53.752Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:51:03.094Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T16:52:49.398Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:01:08.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:01:50.413Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:02:14.829Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:14:42.940Z][QUERY]: START TRANSACTION
[2020-05-21T17:14:42.946Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:14:42.955Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:14:42.956Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:14:42.957Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:14:42.958Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:14:42.959Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:14:43.061Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:14:43.068Z][QUERY]: COMMIT
[2020-05-21T17:15:08.804Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:15:46.802Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:18:59.821Z][QUERY]: START TRANSACTION
[2020-05-21T17:18:59.826Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:18:59.836Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:18:59.837Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:18:59.837Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:18:59.838Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:18:59.839Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:18:59.940Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:18:59.948Z][QUERY]: COMMIT
[2020-05-21T17:20:56.495Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:30:39.458Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:30:45.325Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:31:39.157Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:32:59.262Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:33:02.548Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:36:18.191Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:36:18.203Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:38:58.389Z][QUERY]: START TRANSACTION
[2020-05-21T17:38:58.395Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:38:58.407Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:38:58.408Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:38:58.415Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:38:58.419Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:38:58.422Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:38:58.588Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:38:58.602Z][QUERY]: COMMIT
[2020-05-21T17:39:20.075Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:40:14.603Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:40:15.246Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:42:06.245Z][QUERY]: START TRANSACTION
[2020-05-21T17:42:06.251Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:42:06.260Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:42:06.261Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:42:06.262Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:42:06.263Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:42:06.263Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:42:06.375Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:42:06.383Z][QUERY]: COMMIT
[2020-05-21T17:42:51.473Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:42:51.876Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:46:46.782Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:46:48.969Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:49:39.648Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:49:40.695Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:50:57.298Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:50:57.407Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:51:43.403Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:53:18.472Z][QUERY]: START TRANSACTION
[2020-05-21T17:53:18.482Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:53:18.510Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:53:18.511Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:53:18.512Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:53:18.513Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:53:18.513Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:53:18.627Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:53:18.637Z][QUERY]: COMMIT
[2020-05-21T17:54:36.875Z][QUERY]: START TRANSACTION
[2020-05-21T17:54:36.892Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:54:36.900Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:54:36.901Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:54:36.901Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:54:36.906Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:54:36.911Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:54:37.008Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:54:37.018Z][QUERY]: COMMIT
[2020-05-21T17:55:34.611Z][QUERY]: START TRANSACTION
[2020-05-21T17:55:34.615Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T17:55:34.621Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:55:34.622Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T17:55:34.623Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:55:34.624Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T17:55:34.624Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T17:55:34.693Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T17:55:34.701Z][QUERY]: COMMIT
[2020-05-21T17:55:50.795Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:58:02.490Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:58:13.702Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:58:20.831Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:58:27.610Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T17:58:41.725Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:00:39.374Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:00:39.790Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:00:54.758Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:06:40.729Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:09:36.470Z][QUERY]: START TRANSACTION
[2020-05-21T18:09:36.476Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T18:09:36.487Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:09:36.488Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:09:36.489Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:09:36.489Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:09:36.490Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T18:09:36.642Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T18:09:36.650Z][QUERY]: COMMIT
[2020-05-21T18:09:49.674Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:10:06.473Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:10:15.432Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:10:56.966Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:11:09.857Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:12:19.270Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:12:34.256Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:12:40.536Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:14:27.570Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:14:28.963Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:19:51.610Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:20:09.101Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:25:33.535Z][QUERY]: START TRANSACTION
[2020-05-21T18:25:33.542Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T18:25:33.552Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:25:33.553Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:25:33.553Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:25:33.554Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:25:33.554Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T18:25:33.739Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T18:25:33.749Z][QUERY]: COMMIT
[2020-05-21T18:26:43.320Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:30:46.762Z][QUERY]: START TRANSACTION
[2020-05-21T18:30:46.768Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T18:30:46.780Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:30:46.781Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:30:46.782Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:30:46.782Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:30:46.783Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T18:30:46.891Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T18:30:46.900Z][QUERY]: COMMIT
[2020-05-21T18:31:16.378Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:31:25.650Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:31:34.503Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:34:54.620Z][QUERY]: START TRANSACTION
[2020-05-21T18:34:54.627Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T18:34:54.636Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:34:54.637Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:34:54.638Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:34:54.638Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:34:54.639Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T18:34:54.738Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T18:34:54.747Z][QUERY]: COMMIT
[2020-05-21T18:35:08.415Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:39:12.423Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:39:19.724Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:39:24.845Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:39:28.029Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:40:10.953Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:40:20.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-21T18:42:59.965Z][QUERY]: START TRANSACTION
[2020-05-21T18:42:59.972Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T18:42:59.980Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:42:59.981Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:42:59.982Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:42:59.982Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:42:59.983Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T18:43:00.154Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T18:43:00.162Z][QUERY]: COMMIT
[2020-05-21T18:44:43.619Z][QUERY]: START TRANSACTION
[2020-05-21T18:44:43.627Z][QUERY]: SELECT * FROM current_schema()
[2020-05-21T18:44:43.653Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:44:43.654Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-21T18:44:43.655Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:44:43.656Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-21T18:44:43.656Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-21T18:44:43.761Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-21T18:44:43.771Z][QUERY]: COMMIT
[2020-05-21T18:45:06.576Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:30:40.051Z][QUERY]: START TRANSACTION
[2020-05-22T10:30:40.058Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T10:30:40.077Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:30:40.078Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:30:40.079Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:30:40.079Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:30:40.080Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T10:30:40.216Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T10:30:40.226Z][QUERY]: COMMIT
[2020-05-22T10:32:08.974Z][QUERY]: START TRANSACTION
[2020-05-22T10:32:08.979Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T10:32:08.987Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:32:08.988Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:32:09.001Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:32:09.002Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:32:09.002Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T10:32:09.082Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T10:32:09.091Z][QUERY]: COMMIT
[2020-05-22T10:32:30.619Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:33:16.904Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:34:10.847Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:36:23.181Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:36:37.396Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:41:24.052Z][QUERY]: START TRANSACTION
[2020-05-22T10:41:24.060Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T10:41:24.071Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:41:24.073Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:41:24.073Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:41:24.074Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:41:24.074Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T10:41:26.680Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T10:41:26.698Z][QUERY]: COMMIT
[2020-05-22T10:42:28.244Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T10:43:55.602Z][QUERY]: START TRANSACTION
[2020-05-22T10:43:55.610Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T10:43:55.618Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:43:55.619Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T10:43:55.619Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:43:55.620Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T10:43:55.621Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T10:43:55.759Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T10:43:55.771Z][QUERY]: COMMIT
[2020-05-22T11:36:22.335Z][QUERY]: START TRANSACTION
[2020-05-22T11:36:22.342Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T11:36:22.362Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:36:22.363Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:36:22.363Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:36:22.364Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:36:22.365Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T11:36:22.480Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T11:36:22.494Z][QUERY]: COMMIT
[2020-05-22T11:39:37.284Z][QUERY]: START TRANSACTION
[2020-05-22T11:39:37.290Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T11:39:37.298Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:39:37.299Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:39:37.299Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:39:37.300Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:39:37.301Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T11:39:37.402Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T11:39:37.411Z][QUERY]: COMMIT
[2020-05-22T11:41:21.192Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:41:22.445Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:42:11.980Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:44:50.407Z][QUERY]: START TRANSACTION
[2020-05-22T11:44:50.415Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T11:44:50.421Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:44:50.422Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:44:50.423Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:44:50.424Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:44:50.426Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T11:44:50.566Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T11:44:50.579Z][QUERY]: COMMIT
[2020-05-22T11:45:55.572Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:46:16.784Z][QUERY]: START TRANSACTION
[2020-05-22T11:46:16.795Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Kek","cheburek"]
[2020-05-22T11:46:16.810Z][QUERY]: COMMIT
[2020-05-22T11:49:28.756Z][QUERY]: START TRANSACTION
[2020-05-22T11:49:28.762Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T11:49:28.767Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:49:28.768Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:49:28.769Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:49:28.770Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:49:28.771Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T11:49:28.865Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T11:49:28.873Z][QUERY]: COMMIT
[2020-05-22T11:49:57.343Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:50:30.606Z][QUERY]: START TRANSACTION
[2020-05-22T11:50:30.617Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T11:50:30.638Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:50:30.639Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T11:50:30.640Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:50:30.640Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T11:50:30.641Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T11:50:30.756Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T11:50:30.765Z][QUERY]: COMMIT
[2020-05-22T11:50:41.726Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:56:11.807Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T11:57:59.924Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:00:23.338Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users" WHERE "Users"."id" IN ($1) -- PARAMETERS: [3]
[2020-05-22T12:00:32.355Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:00:33.460Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:01:53.786Z][QUERY]: START TRANSACTION
[2020-05-22T12:01:53.817Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:01:53.844Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:01:53.845Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:01:53.845Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:01:53.846Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:01:53.847Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:01:53.979Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:01:53.992Z][QUERY]: COMMIT
[2020-05-22T12:02:03.400Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users" WHERE "Users"."id" IN ($1) -- PARAMETERS: [3]
[2020-05-22T12:03:21.339Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:03:22.125Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:03:47.927Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users" WHERE "Users"."id" IN ($1) -- PARAMETERS: [3]
[2020-05-22T12:03:48.003Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:04:14.715Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:04:59.360Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users" WHERE "Users"."id" IN ($1) -- PARAMETERS: [3]
[2020-05-22T12:04:59.380Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:05:05.477Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:06:03.188Z][QUERY]: START TRANSACTION
[2020-05-22T12:06:03.194Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:06:03.202Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:06:03.203Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:06:03.204Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:06:03.205Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:06:03.205Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:06:03.598Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:06:03.609Z][QUERY]: COMMIT
[2020-05-22T12:06:35.481Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:06:44.394Z][QUERY]: START TRANSACTION
[2020-05-22T12:06:44.406Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Serg","cheburek"]
[2020-05-22T12:06:44.417Z][QUERY]: COMMIT
[2020-05-22T12:06:44.610Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:06:53.821Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:15:49.223Z][QUERY]: START TRANSACTION
[2020-05-22T12:15:49.228Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:15:49.237Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:15:49.238Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:15:49.238Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:15:49.239Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:15:49.239Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:15:49.372Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:15:49.384Z][QUERY]: COMMIT
[2020-05-22T12:21:30.885Z][QUERY]: START TRANSACTION
[2020-05-22T12:21:30.892Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:21:30.904Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:21:30.905Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:21:30.905Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:21:30.906Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:21:30.907Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:21:31.076Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:21:31.088Z][QUERY]: COMMIT
[2020-05-22T12:21:48.707Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:21:49.060Z][QUERY]: START TRANSACTION
[2020-05-22T12:21:49.076Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES (Investor Paradigm Supervisor, https://s3.amazonaws.com/uifaces/faces/twitter/maikelk/128.jpg, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt"
[2020-05-22T12:21:49.099Z][FAILED QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES (Investor Paradigm Supervisor, https://s3.amazonaws.com/uifaces/faces/twitter/maikelk/128.jpg, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt"
[2020-05-22T12:21:49.099Z][QUERY ERROR]: error: ошибка синтаксиса (примерное положение: "Paradigm")
[2020-05-22T12:21:49.103Z][QUERY]: ROLLBACK
[2020-05-22T12:23:28.990Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:23:29.134Z][QUERY]: START TRANSACTION
[2020-05-22T12:23:29.137Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES (Legacy Paradigm Planner, https://s3.amazonaws.com/uifaces/faces/twitter/yesmeck/128.jpg, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt"
[2020-05-22T12:23:29.169Z][FAILED QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES (Legacy Paradigm Planner, https://s3.amazonaws.com/uifaces/faces/twitter/yesmeck/128.jpg, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt"
[2020-05-22T12:23:29.169Z][QUERY ERROR]: error: ошибка синтаксиса (примерное положение: "Paradigm")
[2020-05-22T12:23:29.170Z][QUERY]: ROLLBACK
[2020-05-22T12:26:16.366Z][QUERY]: START TRANSACTION
[2020-05-22T12:26:16.374Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:26:16.383Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:26:16.384Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:26:16.385Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:26:16.385Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:26:16.386Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:26:16.539Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:26:16.546Z][QUERY]: COMMIT
[2020-05-22T12:26:39.523Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:30:14.587Z][QUERY]: START TRANSACTION
[2020-05-22T12:30:14.594Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:30:14.603Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:30:14.604Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:30:14.605Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:30:14.606Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:30:14.606Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:30:14.745Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:30:14.753Z][QUERY]: COMMIT
[2020-05-22T12:31:09.423Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:32:03.117Z][QUERY]: START TRANSACTION
[2020-05-22T12:32:03.127Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:32:03.137Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:32:03.138Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:32:03.139Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:32:03.140Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:32:03.140Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:32:03.367Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:32:03.381Z][QUERY]: COMMIT
[2020-05-22T12:32:15.201Z][QUERY]: START TRANSACTION
[2020-05-22T12:32:15.211Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["International Solutions Officer","https://s3.amazonaws.com/uifaces/faces/twitter/johnsmithagency/128.jpg"]
[2020-05-22T12:32:15.219Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:32:15.233Z][QUERY]: COMMIT
[2020-05-22T12:35:41.976Z][QUERY]: START TRANSACTION
[2020-05-22T12:35:41.984Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:35:41.993Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:35:41.997Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:35:41.998Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:35:41.999Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:35:42.001Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:35:42.122Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:35:42.130Z][QUERY]: COMMIT
[2020-05-22T12:37:19.126Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:37:53.403Z][QUERY]: START TRANSACTION
[2020-05-22T12:37:53.408Z][QUERY]: SELECT * FROM current_schema()
[2020-05-22T12:37:53.415Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:37:53.416Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-22T12:37:53.417Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:37:53.417Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-22T12:37:53.418Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-22T12:37:53.498Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-22T12:37:53.506Z][QUERY]: COMMIT
[2020-05-22T12:38:01.293Z][QUERY]: START TRANSACTION
[2020-05-22T12:38:01.304Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Tomasa13","https://s3.amazonaws.com/uifaces/faces/twitter/xalionmalik/128.jpg"]
[2020-05-22T12:38:01.326Z][QUERY]: COMMIT
[2020-05-22T12:38:01.846Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:38:47.224Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:38:58.515Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:41:17.808Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:41:19.901Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:42:44.377Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T12:42:44.420Z][QUERY]: START TRANSACTION
[2020-05-22T12:42:44.446Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Jaleel28","https://s3.amazonaws.com/uifaces/faces/twitter/javorszky/128.jpg"]
[2020-05-22T12:42:44.495Z][QUERY]: COMMIT
[2020-05-22T12:42:50.259Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:33:38.969Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:33:40.249Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:36:52.899Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:36:56.178Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:37:21.545Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:37:22.333Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:42:18.482Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:42:18.526Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:44:36.511Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:44:36.519Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:46:26.301Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:46:29.820Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:47:26.997Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:47:40.162Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:47:47.982Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:47:54.840Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:48:22.865Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:48:26.155Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:48:41.431Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T14:48:45.169Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:15:20.655Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:15:48.952Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:19:26.134Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:28:35.596Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:30:11.020Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:35:01.593Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:36:33.549Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:36:55.268Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:38:28.159Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:38:54.269Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:43:33.102Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:44:24.848Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:45:42.622Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:48:40.301Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T16:52:22.008Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:00:53.160Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:04:16.673Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:05:00.901Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:05:00.933Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:05:18.211Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:06:03.392Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:10:06.417Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:10:41.850Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:12:58.257Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:15:13.242Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:15:50.151Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:18:18.959Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:19:26.200Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:20:05.005Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:20:27.120Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:21:43.313Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:22:49.388Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:23:04.298Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:25:08.330Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:25:51.663Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:26:25.269Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:28:05.412Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:29:12.615Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:29:29.795Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:29:47.030Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:32:17.316Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:32:38.142Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:34:20.968Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:34:53.418Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:36:54.224Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T17:38:08.967Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:10:29.562Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:11:20.693Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:13:06.664Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:13:28.799Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:14:21.559Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:15:13.289Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:16:22.331Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:17:05.421Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:18:47.913Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:20:04.020Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:20:38.183Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:22:06.345Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:22:20.544Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:24:08.515Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:31:28.211Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:34:33.926Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:35:17.439Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:40:47.545Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:41:05.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:41:41.897Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:44:07.065Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:45:08.093Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:46:52.090Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:47:13.953Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:50:07.120Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T18:53:36.722Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:02:01.893Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:03:16.433Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:04:37.084Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:05:31.933Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:06:08.176Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:07:12.899Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:08:51.818Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:11:27.946Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:13:22.393Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:14:36.485Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:15:23.753Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:15:53.576Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:16:15.035Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:16:29.645Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:16:30.163Z][QUERY]: START TRANSACTION
[2020-05-22T19:16:30.194Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Carey.Eichmann","https://s3.amazonaws.com/uifaces/faces/twitter/marciotoledo/128.jpg"]
[2020-05-22T19:16:30.269Z][QUERY]: COMMIT
[2020-05-22T19:16:40.136Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:17:55.900Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:18:04.292Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:29:01.394Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:30:44.775Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:36:42.589Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:37:38.056Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:41:56.023Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-22T19:42:46.894Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:19:20.182Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:25:09.466Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:27:32.648Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:28:58.871Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:31:01.682Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:38:21.076Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:43:06.431Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T07:46:53.122Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:04:44.511Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:06:23.641Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:07:24.741Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:07:38.843Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:09:05.874Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:11:15.210Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:14:14.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:27:54.795Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:28:54.814Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:30:01.466Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:30:31.084Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:32:54.699Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:36:03.567Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:36:44.869Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:45:54.209Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:49:14.765Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:49:58.803Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:50:16.795Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:50:52.873Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:52:56.790Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:54:47.524Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T08:55:37.165Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:02:48.744Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:08:47.494Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:10:21.186Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:12:37.632Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:14:12.595Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:18:32.069Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:25:10.221Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:28:22.572Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:29:44.486Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:31:38.434Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:32:54.343Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:34:12.467Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:39:18.553Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:40:01.590Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:41:17.718Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:46:26.381Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:49:21.376Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:51:33.535Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:51:55.585Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:56:05.419Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:56:34.517Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:57:22.530Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:57:49.513Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:58:41.648Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:59:09.157Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T09:59:55.980Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:01:03.862Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:05:23.456Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:07:07.865Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:07:58.798Z][QUERY]: START TRANSACTION
[2020-05-23T10:07:58.800Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:07:58.824Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Gerson_Brown","https://s3.amazonaws.com/uifaces/faces/twitter/jjsiii/128.jpg"]
[2020-05-23T10:07:58.841Z][QUERY]: COMMIT
[2020-05-23T10:08:00.818Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:12:29.212Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:12:30.537Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:12:34.669Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:17:34.904Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:17:37.511Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:17:39.309Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:19:11.979Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:19:12.189Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:19:18.526Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:21:03.065Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:21:03.753Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:21:08.841Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:24:21.592Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:24:23.644Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:24:51.959Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:24:55.164Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:25:17.939Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:27:03.634Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:27:04.502Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T10:27:10.620Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:49:14.234Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:49:15.000Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:49:42.860Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:49:44.942Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:50:52.213Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:50:54.487Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:51:14.463Z][QUERY]: START TRANSACTION
[2020-05-23T12:51:14.465Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:51:14.478Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Mckenzie.Eichmann","https://s3.amazonaws.com/uifaces/faces/twitter/tjrus/128.jpg"]
[2020-05-23T12:51:14.506Z][QUERY]: COMMIT
[2020-05-23T12:51:18.991Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:51:41.822Z][QUERY]: START TRANSACTION
[2020-05-23T12:51:41.825Z][QUERY]: INSERT INTO "users"("name", "avatar", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "createdAt", "updatedAt" -- PARAMETERS: ["Germaine_Kuhn","https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg"]
[2020-05-23T12:51:41.833Z][QUERY]: COMMIT
[2020-05-23T12:51:41.834Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:52:02.615Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:52:13.879Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:54:01.804Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:54:08.918Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:54:15.892Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:55:55.483Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:55:57.521Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:55:58.169Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:56:06.495Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:56:11.224Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:56:47.495Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:59:07.496Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:59:07.529Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T12:59:11.014Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:00:12.367Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:00:13.461Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:00:19.191Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:01:05.624Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:01:06.287Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:01:13.568Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:02:11.151Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:02:11.911Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:02:17.835Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:05:57.143Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:05:57.748Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:06:03.863Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:11:51.304Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:11:53.867Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:11:54.191Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:12:11.355Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:12:13.180Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:12:13.206Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:15:18.578Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:15:21.281Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:15:22.185Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:16:44.667Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:16:48.385Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:16:48.426Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:17:11.422Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:17:14.155Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:17:14.905Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:18:34.651Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:18:35.429Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:19:53.969Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:19:55.223Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:20:25.142Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:20:27.055Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:21:12.921Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:21:13.647Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:23:17.667Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:23:21.888Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:24:05.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:24:06.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:24:48.349Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:24:48.379Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:26:58.862Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:27:01.714Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:27:20.128Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:27:21.777Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:29:37.514Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:29:37.890Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:31:08.592Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:31:08.617Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:32:54.692Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:32:55.279Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:34:12.333Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:34:12.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:35:40.249Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:35:40.843Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:37:19.235Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:37:21.127Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:38:01.541Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:38:07.850Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:39:05.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:39:06.673Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:39:19.210Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:39:22.870Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:48:07.302Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:48:08.885Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:48:52.683Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:48:55.729Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:49:49.483Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:49:49.510Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:50:56.882Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:50:58.198Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:52:21.424Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:52:23.105Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:53:59.549Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:53:59.802Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:54:31.256Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:54:32.338Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:55:10.894Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:55:41.454Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:55:41.768Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:57:33.805Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:57:35.342Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:58:27.514Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:58:30.860Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:59:05.601Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:59:05.682Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:59:46.093Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T13:59:46.383Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:00:57.608Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:00:59.619Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:02:13.374Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:02:16.172Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:02:25.933Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:02:27.140Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:03:48.015Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:03:48.533Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:04:44.058Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:04:44.877Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:05:02.742Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:05:05.751Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:05:22.133Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:05:23.744Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:05:43.695Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:05:45.975Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:07:30.402Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:07:31.398Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:10:23.098Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:10:23.287Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:11:38.190Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:11:39.102Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:12:14.343Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:12:15.387Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:12:56.025Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:12:56.296Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:13:54.840Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:13:55.125Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:15:16.221Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:15:16.597Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:16:00.635Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:16:03.448Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:16:45.308Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:16:45.428Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:18:27.740Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:18:28.168Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:19:16.265Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:19:17.290Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:20:02.762Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:20:03.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:23:19.602Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:23:19.639Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:25:59.456Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:25:59.698Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:26:55.439Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:26:58.840Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:28:22.023Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:28:22.878Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:34:32.737Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:34:57.065Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:35:30.546Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:35:32.569Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:36:10.793Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:45:29.433Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:45:32.450Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:45:40.551Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:45:44.130Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:46:30.307Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:46:30.483Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:47:25.562Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:47:31.624Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:49:25.271Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:49:26.966Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:52:09.968Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:52:31.735Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:52:45.477Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:54:02.494Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:54:03.887Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:54:59.917Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:55:00.988Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:55:33.114Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:55:34.432Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:59:01.749Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T14:59:05.897Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:00:55.789Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:00:56.854Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:01:44.546Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:01:48.597Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:02:03.592Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:02:05.958Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:02:40.169Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:02:40.551Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:05:02.275Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:05:02.341Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:05:27.015Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:05:28.573Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:06:16.783Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:06:18.091Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:07:56.615Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:07:57.242Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:08:18.039Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:08:18.301Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:10:34.239Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:10:35.885Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:10:50.934Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:10:52.221Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:13:21.615Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:13:22.199Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:14:12.410Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:14:12.975Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:14:40.238Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:14:40.415Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:15:31.020Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:15:31.600Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:22:58.935Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:23:02.282Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:23:39.259Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:23:39.733Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:24:57.026Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:25:00.357Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:25:16.580Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:25:18.057Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:27:47.197Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:27:47.597Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:31:17.638Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:31:17.922Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:32:38.655Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:32:39.427Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:37:56.049Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:37:56.097Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:44:00.572Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:44:01.287Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:50:46.105Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:50:47.288Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:52:35.958Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:52:36.344Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:57:35.428Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:57:38.302Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:59:19.269Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T15:59:19.745Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:00:22.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:00:23.494Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:01:30.603Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:01:30.879Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:02:32.363Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:02:32.613Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:05:13.429Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:05:13.752Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:24:50.724Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:24:51.038Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:29:49.431Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:29:49.777Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:31:13.310Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:31:15.616Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:35:00.097Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:35:00.298Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:35:45.917Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:35:46.032Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:36:26.464Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:36:27.871Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:37:06.907Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:37:08.749Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:37:52.857Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:37:55.425Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:40:09.367Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:40:10.457Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:40:52.810Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:40:53.289Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:42:28.846Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:42:28.887Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:45:28.792Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:45:29.027Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:45:54.321Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:45:55.679Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:48:05.464Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:48:06.341Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:52:49.506Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:52:50.919Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:54:01.106Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:54:01.670Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:57:08.687Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:57:09.772Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:58:19.172Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T16:58:19.542Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:06:19.754Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:06:20.206Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:07:20.019Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:07:21.121Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:25:26.707Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:25:28.208Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:25:58.939Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:26:00.455Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:26:33.425Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:26:33.647Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:34:51.129Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:34:54.704Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:37:28.846Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:37:33.313Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:38:59.946Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:39:01.069Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:40:16.832Z][QUERY]: START TRANSACTION
[2020-05-23T17:40:16.845Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T17:40:16.873Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:40:16.874Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:40:16.877Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:40:16.878Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:40:16.879Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T17:40:17.114Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T17:40:17.128Z][QUERY]: COMMIT
[2020-05-23T17:42:37.009Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:42:38.801Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:43:23.862Z][QUERY]: START TRANSACTION
[2020-05-23T17:43:23.869Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T17:43:23.878Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:43:23.879Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:43:23.880Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:43:23.881Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:43:23.882Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T17:43:24.006Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T17:43:24.017Z][QUERY]: COMMIT
[2020-05-23T17:46:04.442Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:46:04.943Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:48:27.143Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:48:28.298Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T17:50:46.570Z][QUERY]: START TRANSACTION
[2020-05-23T17:50:46.582Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T17:50:46.604Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:50:46.605Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:50:46.606Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:50:46.607Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:50:46.607Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T17:50:46.765Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T17:50:46.775Z][QUERY]: COMMIT
[2020-05-23T17:52:35.769Z][QUERY]: START TRANSACTION
[2020-05-23T17:52:35.783Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T17:52:35.804Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:52:35.805Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:52:35.806Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:52:35.806Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:52:35.807Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T17:52:35.932Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T17:52:35.941Z][QUERY]: COMMIT
[2020-05-23T17:58:27.332Z][QUERY]: START TRANSACTION
[2020-05-23T17:58:27.337Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T17:58:27.345Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:58:27.346Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T17:58:27.347Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:58:27.347Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T17:58:27.348Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T17:58:27.449Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T17:58:27.458Z][QUERY]: COMMIT
[2020-05-23T18:01:59.799Z][QUERY]: START TRANSACTION
[2020-05-23T18:01:59.814Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T18:01:59.833Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:01:59.834Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:01:59.835Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:01:59.836Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:01:59.837Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T18:01:59.983Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T18:01:59.993Z][QUERY]: COMMIT
[2020-05-23T18:04:02.593Z][QUERY]: START TRANSACTION
[2020-05-23T18:04:02.607Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T18:04:02.639Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:04:02.641Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:04:02.642Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:04:02.642Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:04:02.643Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T18:04:02.795Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T18:04:02.810Z][QUERY]: COMMIT
[2020-05-23T18:06:48.082Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:07:50.163Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:08:26.215Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:08:26.254Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:10:54.357Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:10:56.671Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:17:07.794Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:19:12.140Z][QUERY]: START TRANSACTION
[2020-05-23T18:19:12.153Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T18:19:12.176Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:19:12.177Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:19:12.177Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:19:12.178Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:19:12.179Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T18:19:14.176Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T18:19:14.186Z][QUERY]: COMMIT
[2020-05-23T18:21:09.170Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:21:09.433Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:21:45.829Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:21:47.957Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:23:33.483Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:23:35.170Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:24:36.921Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:24:41.328Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:27:52.468Z][QUERY]: START TRANSACTION
[2020-05-23T18:27:52.479Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T18:27:52.503Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:27:52.504Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:27:52.505Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:27:52.506Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:27:52.507Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T18:27:52.731Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T18:27:52.744Z][QUERY]: COMMIT
[2020-05-23T18:31:19.307Z][QUERY]: START TRANSACTION
[2020-05-23T18:31:19.313Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T18:31:19.322Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:31:19.323Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:31:19.324Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:31:19.325Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:31:19.325Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T18:31:19.432Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T18:31:19.444Z][QUERY]: COMMIT
[2020-05-23T18:34:15.357Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:34:16.721Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:37:50.375Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:37:53.476Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:39:56.439Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:40:06.045Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:42:06.738Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:42:12.048Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:45:17.986Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:45:18.083Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:46:01.067Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:46:02.094Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:46:59.377Z][QUERY]: START TRANSACTION
[2020-05-23T18:46:59.384Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T18:46:59.405Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:46:59.406Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T18:46:59.407Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:46:59.408Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T18:46:59.409Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T18:46:59.590Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T18:46:59.598Z][QUERY]: COMMIT
[2020-05-23T18:48:07.431Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:48:07.698Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:54:12.759Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:54:14.601Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T18:56:13.796Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T19:19:19.634Z][QUERY]: START TRANSACTION
[2020-05-23T19:19:19.640Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:19:19.650Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:19:19.651Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:19:19.652Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:19:19.655Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:19:19.657Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:19:20.026Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:19:20.038Z][QUERY]: COMMIT
[2020-05-23T19:19:34.926Z][QUERY]: START TRANSACTION
[2020-05-23T19:19:34.931Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:19:34.934Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:19:34.935Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:19:34.936Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:19:34.936Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:19:34.937Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:19:35.135Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:19:35.147Z][QUERY]: COMMIT
[2020-05-23T19:19:51.163Z][QUERY]: START TRANSACTION
[2020-05-23T19:19:51.168Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:19:51.171Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:19:51.172Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:19:51.172Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:19:51.173Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:19:51.173Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:19:51.246Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:19:51.255Z][QUERY]: COMMIT
[2020-05-23T19:20:57.573Z][QUERY]: START TRANSACTION
[2020-05-23T19:20:57.581Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:20:57.604Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:20:57.605Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:20:57.605Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:20:57.606Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:20:57.607Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:20:57.724Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:20:57.739Z][QUERY]: COMMIT
[2020-05-23T19:21:13.380Z][QUERY]: START TRANSACTION
[2020-05-23T19:21:13.385Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:21:13.394Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:21:13.395Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:21:13.396Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:21:13.396Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:21:13.397Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:21:13.528Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:21:13.538Z][QUERY]: COMMIT
[2020-05-23T19:36:15.155Z][QUERY]: START TRANSACTION
[2020-05-23T19:36:15.172Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:36:15.199Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:36:15.200Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:36:15.200Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:36:15.201Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:36:15.201Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:36:15.397Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:36:15.405Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-23T19:36:15.561Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-23T19:36:15.588Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-23T19:36:15.592Z][QUERY]: COMMIT
[2020-05-23T19:38:35.255Z][QUERY]: START TRANSACTION
[2020-05-23T19:38:35.264Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:38:35.286Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:38:35.286Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:38:35.287Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:38:35.288Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:38:35.289Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:38:35.439Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:38:35.446Z][QUERY]: ALTER TABLE "message" DROP COLUMN "name"
[2020-05-23T19:38:35.468Z][QUERY]: ALTER TABLE "message" DROP COLUMN "avatar"
[2020-05-23T19:38:35.472Z][QUERY]: ALTER TABLE "message" ADD "text" character varying NOT NULL DEFAULT ''
[2020-05-23T19:38:35.479Z][QUERY]: COMMIT
[2020-05-23T19:38:59.056Z][QUERY]: START TRANSACTION
[2020-05-23T19:38:59.060Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:38:59.064Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:38:59.064Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:38:59.065Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:38:59.066Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:38:59.067Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:38:59.124Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:38:59.131Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T19:38:59.139Z][QUERY]: COMMIT
[2020-05-23T19:48:39.023Z][QUERY]: START TRANSACTION
[2020-05-23T19:48:39.112Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:48:39.352Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:48:39.353Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:48:39.354Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:48:39.361Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:48:39.361Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:48:39.623Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:48:39.634Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T19:48:39.654Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T19:48:39.674Z][QUERY]: COMMIT
[2020-05-23T19:48:46.476Z][QUERY]: START TRANSACTION
[2020-05-23T19:48:46.490Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T19:48:46.494Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:48:46.496Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T19:48:46.497Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:48:46.498Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T19:48:46.498Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T19:48:46.680Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T19:48:46.693Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T19:48:46.704Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T19:48:46.734Z][QUERY]: COMMIT
[2020-05-23T20:07:35.409Z][QUERY]: START TRANSACTION
[2020-05-23T20:07:35.416Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T20:07:35.427Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:07:35.427Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:07:35.428Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:07:35.428Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:07:35.429Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T20:07:35.578Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T20:07:35.585Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T20:07:35.598Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T20:07:35.608Z][QUERY]: COMMIT
[2020-05-23T20:10:53.247Z][QUERY]: START TRANSACTION
[2020-05-23T20:10:53.252Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T20:10:53.265Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:10:53.266Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:10:53.267Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:10:53.267Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:10:53.268Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T20:10:53.413Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T20:10:53.420Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T20:10:53.436Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T20:10:53.446Z][QUERY]: COMMIT
[2020-05-23T20:12:51.982Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:23:16.937Z][QUERY]: START TRANSACTION
[2020-05-23T20:23:16.943Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T20:23:16.949Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:23:16.950Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:23:16.951Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:23:16.951Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:23:16.953Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T20:23:17.077Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T20:23:17.084Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T20:23:17.105Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T20:23:17.117Z][QUERY]: COMMIT
[2020-05-23T20:24:41.105Z][QUERY]: START TRANSACTION
[2020-05-23T20:24:41.111Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T20:24:41.118Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:24:41.119Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:24:41.119Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:24:41.120Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:24:41.121Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T20:24:41.247Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T20:24:41.258Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T20:24:41.272Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T20:24:41.290Z][QUERY]: COMMIT
[2020-05-23T20:26:09.343Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) -- PARAMETERS: [6,11]
[2020-05-23T20:27:14.270Z][QUERY]: START TRANSACTION
[2020-05-23T20:27:14.276Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T20:27:14.284Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:27:14.285Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:27:14.285Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:27:14.286Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:27:14.287Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T20:27:14.434Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T20:27:14.441Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T20:27:14.462Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T20:27:14.473Z][QUERY]: COMMIT
[2020-05-23T20:28:24.768Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: [6,11,6,11]
[2020-05-23T20:34:38.100Z][QUERY]: START TRANSACTION
[2020-05-23T20:34:38.113Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T20:34:38.121Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:34:38.122Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T20:34:38.123Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:34:38.123Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T20:34:38.124Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T20:34:38.350Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T20:34:38.361Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T20:34:38.384Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T20:34:38.399Z][QUERY]: COMMIT
[2020-05-23T20:36:21.537Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T20:36:36.787Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","","6",""]
[2020-05-23T20:36:36.805Z][FAILED QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","","6",""]
[2020-05-23T20:36:36.805Z][QUERY ERROR]: error: неверное значение для целого числа: ""
[2020-05-23T20:36:44.293Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T20:44:39.280Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:44:41.732Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:46:22.211Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:48:52.581Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:48:52.887Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:51:13.280Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:51:13.288Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:52:04.521Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:55:46.807Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:55:47.022Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:56:01.027Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T20:56:21.751Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId" FROM "message" "Message" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:02:58.144Z][QUERY]: START TRANSACTION
[2020-05-23T21:02:58.151Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:02:58.161Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:02:58.162Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:02:58.163Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:02:58.164Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:02:58.165Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:02:58.414Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:02:58.422Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:02:58.447Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:02:58.456Z][QUERY]: COMMIT
[2020-05-23T21:03:26.445Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:08:37.346Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:08:37.593Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:08:46.885Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","6","6","6"]
[2020-05-23T21:08:53.763Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:08:59.675Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","6","6","6"]
[2020-05-23T21:09:02.669Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:17:24.030Z][QUERY]: START TRANSACTION
[2020-05-23T21:17:24.037Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:17:24.047Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:17:24.048Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:17:24.049Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:17:24.050Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:17:24.050Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:17:24.227Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:17:24.235Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:17:24.253Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:17:24.262Z][QUERY]: COMMIT
[2020-05-23T21:19:11.859Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:19:15.555Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) ORDER BY "Message"."createdAt" ASC -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:20:29.764Z][QUERY]: START TRANSACTION
[2020-05-23T21:20:29.769Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:20:29.777Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:20:29.778Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:20:29.779Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:20:29.780Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:20:29.780Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:20:29.996Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:20:30.008Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:20:30.025Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:20:30.048Z][QUERY]: COMMIT
[2020-05-23T21:21:07.135Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) ORDER BY "Message"."createdAt" DESC -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:21:14.885Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:21:17.241Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) ORDER BY "Message"."createdAt" DESC -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:21:42.444Z][QUERY]: START TRANSACTION
[2020-05-23T21:21:42.450Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:21:42.455Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:21:42.456Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:21:42.456Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:21:42.457Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:21:42.462Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:21:42.621Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:21:42.629Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:21:42.646Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:21:42.656Z][QUERY]: COMMIT
[2020-05-23T21:21:51.667Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:21:55.920Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) ORDER BY "Message"."id" DESC -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:22:14.589Z][QUERY]: START TRANSACTION
[2020-05-23T21:22:14.595Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:22:14.604Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:22:14.605Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:22:14.607Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:22:14.609Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:22:14.609Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:22:14.846Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:22:14.856Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:22:14.882Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:22:14.892Z][QUERY]: COMMIT
[2020-05-23T21:22:36.080Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","6","6","6"]
[2020-05-23T21:22:37.076Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:41:35.060Z][QUERY]: START TRANSACTION
[2020-05-23T21:41:35.065Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:41:35.074Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:41:35.074Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:41:35.075Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:41:35.076Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:41:35.077Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:41:35.223Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:41:35.231Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:41:35.253Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:41:35.270Z][QUERY]: COMMIT
[2020-05-23T21:42:35.620Z][QUERY]: START TRANSACTION
[2020-05-23T21:42:35.625Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:42:35.633Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:42:35.634Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:42:35.635Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:42:35.635Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:42:35.636Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:42:35.760Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:42:35.770Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:42:35.788Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:42:35.797Z][QUERY]: COMMIT
[2020-05-23T21:47:07.292Z][QUERY]: START TRANSACTION
[2020-05-23T21:47:07.298Z][QUERY]: SELECT * FROM current_schema()
[2020-05-23T21:47:07.307Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:47:07.308Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-23T21:47:07.310Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:47:07.310Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-23T21:47:07.311Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-23T21:47:07.515Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-23T21:47:07.527Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-23T21:47:07.549Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-23T21:47:07.563Z][QUERY]: COMMIT
[2020-05-23T21:47:35.976Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:49:11.072Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:49:11.148Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:49:23.568Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:50:08.524Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:50:10.003Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:51:05.535Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:51:24.017Z][QUERY]: START TRANSACTION
[2020-05-23T21:51:24.053Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Nu che",11,6]
[2020-05-23T21:51:24.077Z][QUERY]: COMMIT
[2020-05-23T21:51:52.127Z][QUERY]: START TRANSACTION
[2020-05-23T21:51:52.143Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Пятушара",11,6]
[2020-05-23T21:51:52.152Z][QUERY]: COMMIT
[2020-05-23T21:53:12.335Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","6","6","6"]
[2020-05-23T21:53:16.481Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T21:53:23.482Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T21:53:57.690Z][QUERY]: START TRANSACTION
[2020-05-23T21:53:57.693Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ну ё, опять ты ",6,11]
[2020-05-23T21:53:57.719Z][QUERY]: COMMIT
[2020-05-23T21:58:15.822Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:58:25.498Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:58:46.242Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:58:54.589Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T21:59:01.101Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T22:06:02.322Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:06:03.508Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:06:11.525Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T22:06:45.407Z][QUERY]: START TRANSACTION
[2020-05-23T22:06:45.447Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["А шо ты не рад чел",11,6]
[2020-05-23T22:06:45.485Z][QUERY]: COMMIT
[2020-05-23T22:07:08.932Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:07:19.228Z][QUERY]: START TRANSACTION
[2020-05-23T22:07:19.231Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["А чему тут радоваться ",6,11]
[2020-05-23T22:07:19.239Z][QUERY]: COMMIT
[2020-05-23T22:07:48.733Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","11","11","11"]
[2020-05-23T22:07:58.875Z][QUERY]: START TRANSACTION
[2020-05-23T22:07:58.877Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Самому себе ",11,11]
[2020-05-23T22:07:58.884Z][QUERY]: COMMIT
[2020-05-23T22:08:05.851Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:08:09.946Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","11","11","11"]
[2020-05-23T22:08:11.960Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:08:16.212Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","11","11","11"]
[2020-05-23T22:08:40.340Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:08:45.461Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","11","11","11"]
[2020-05-23T22:08:46.534Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:08:50.605Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:08:52.359Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:10:27.745Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","7","11","7"]
[2020-05-23T22:10:33.171Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:10:35.884Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:10:38.921Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","7","11","7"]
[2020-05-23T22:11:26.602Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:11:36.958Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:12:30.918Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:12:38.607Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-23T22:14:53.663Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-23T22:14:55.598Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-23T22:14:58.163Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","11","11","11"]
[2020-05-23T22:14:59.336Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T07:55:18.784Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T07:58:30.263Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:00:33.966Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:00:35.212Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:01:10.955Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T08:01:28.376Z][QUERY]: START TRANSACTION
[2020-05-24T08:01:28.384Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Привет опять",11,6]
[2020-05-24T08:01:28.399Z][QUERY]: COMMIT
[2020-05-24T08:02:55.053Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:02:56.638Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:03:06.142Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:03:15.770Z][QUERY]: START TRANSACTION
[2020-05-24T08:03:15.779Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Привет",6,11]
[2020-05-24T08:03:15.799Z][QUERY]: COMMIT
[2020-05-24T08:04:17.401Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","6","6","6"]
[2020-05-24T08:04:24.286Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T08:04:33.770Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:04:38.049Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:04:44.362Z][QUERY]: START TRANSACTION
[2020-05-24T08:04:44.371Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Да",11,6]
[2020-05-24T08:04:44.408Z][QUERY]: COMMIT
[2020-05-24T08:05:24.955Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:05:26.332Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:05:52.208Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T08:05:59.196Z][QUERY]: START TRANSACTION
[2020-05-24T08:05:59.206Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Как дела",11,6]
[2020-05-24T08:05:59.224Z][QUERY]: COMMIT
[2020-05-24T08:16:28.522Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:16:29.356Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:16:51.587Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:18:55.403Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:18:58.822Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:19:16.184Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:19:59.733Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:20:00.704Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:21:24.476Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:21:25.080Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:21:54.910Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:21:55.722Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:23:17.093Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:23:18.186Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:25:37.706Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:25:38.053Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:25:57.659Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:27:35.488Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:27:42.224Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:29:25.066Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:29:37.696Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:29:46.533Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T08:29:55.639Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:29:56.573Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:30:01.730Z][QUERY]: START TRANSACTION
[2020-05-24T08:30:01.744Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ok",6,11]
[2020-05-24T08:30:01.781Z][QUERY]: COMMIT
[2020-05-24T08:31:23.027Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:31:24.761Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:31:44.829Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:31:45.708Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:31:53.718Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:31:54.750Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:32:05.455Z][QUERY]: START TRANSACTION
[2020-05-24T08:32:05.467Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["And you",6,11]
[2020-05-24T08:32:05.482Z][QUERY]: COMMIT
[2020-05-24T08:32:10.677Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T08:33:17.838Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:33:20.788Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:33:33.925Z][QUERY]: START TRANSACTION
[2020-05-24T08:33:33.927Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Stranno",11,6]
[2020-05-24T08:33:33.938Z][QUERY]: COMMIT
[2020-05-24T08:33:52.436Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","2","11","2"]
[2020-05-24T08:33:53.436Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["11","6","11","6"]
[2020-05-24T08:33:56.694Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T08:34:01.446Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","11","6","11"]
[2020-05-24T08:43:47.553Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:43:48.594Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:56:38.599Z][QUERY]: START TRANSACTION
[2020-05-24T08:56:38.609Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T08:56:38.626Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T08:56:38.628Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T08:56:38.629Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T08:56:38.631Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T08:56:38.632Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T08:56:39.061Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T08:56:39.076Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T08:56:39.103Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T08:56:39.118Z][QUERY]: COMMIT
[2020-05-24T08:56:40.660Z][QUERY]: START TRANSACTION
[2020-05-24T08:56:40.692Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Heidi.Deckow","https://s3.amazonaws.com/uifaces/faces/twitter/AlbertoCococi/128.jpg"]
[2020-05-24T08:56:40.750Z][QUERY]: COMMIT
[2020-05-24T08:56:44.844Z][QUERY]: START TRANSACTION
[2020-05-24T08:56:44.846Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Loyal51","https://s3.amazonaws.com/uifaces/faces/twitter/vikashpathak18/128.jpg"]
[2020-05-24T08:56:44.851Z][QUERY]: COMMIT
[2020-05-24T08:56:59.066Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:56:59.464Z][QUERY]: START TRANSACTION
[2020-05-24T08:56:59.468Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Keely.Turcotte32","https://s3.amazonaws.com/uifaces/faces/twitter/thedjpetersen/128.jpg"]
[2020-05-24T08:56:59.485Z][QUERY]: COMMIT
[2020-05-24T08:57:35.149Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:57:35.339Z][QUERY]: START TRANSACTION
[2020-05-24T08:57:35.342Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Dan_Wisoky93","https://s3.amazonaws.com/uifaces/faces/twitter/gavr1l0/128.jpg"]
[2020-05-24T08:57:35.346Z][QUERY]: COMMIT
[2020-05-24T08:59:37.603Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T08:59:37.875Z][QUERY]: START TRANSACTION
[2020-05-24T08:59:37.880Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Felix.McCullough40","https://s3.amazonaws.com/uifaces/faces/twitter/nicolasfolliot/128.jpg"]
[2020-05-24T08:59:37.893Z][QUERY]: COMMIT
[2020-05-24T09:00:57.766Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:00:58.512Z][QUERY]: START TRANSACTION
[2020-05-24T09:00:58.516Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Carmelo_Hettinger64","https://s3.amazonaws.com/uifaces/faces/twitter/maxlinderman/128.jpg"]
[2020-05-24T09:00:58.520Z][QUERY]: COMMIT
[2020-05-24T09:01:38.829Z][QUERY]: START TRANSACTION
[2020-05-24T09:01:38.831Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Nova38","https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg"]
[2020-05-24T09:01:38.837Z][QUERY]: COMMIT
[2020-05-24T09:04:28.045Z][QUERY]: START TRANSACTION
[2020-05-24T09:04:28.051Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:04:28.059Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:04:28.060Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:04:28.061Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:04:28.061Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:04:28.062Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:04:28.262Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:04:28.272Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:04:28.293Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:04:28.304Z][QUERY]: COMMIT
[2020-05-24T09:04:29.118Z][QUERY]: START TRANSACTION
[2020-05-24T09:04:29.142Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jovanny_Wiegand","https://s3.amazonaws.com/uifaces/faces/twitter/albertaugustin/128.jpg"]
[2020-05-24T09:04:29.178Z][QUERY]: COMMIT
[2020-05-24T09:04:29.331Z][QUERY]: START TRANSACTION
[2020-05-24T09:04:29.333Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Rae.Block19","https://s3.amazonaws.com/uifaces/faces/twitter/fluidbrush/128.jpg"]
[2020-05-24T09:04:29.338Z][QUERY]: COMMIT
[2020-05-24T09:05:15.086Z][QUERY]: START TRANSACTION
[2020-05-24T09:05:15.090Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:05:15.099Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:05:15.100Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:05:15.101Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:05:15.101Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:05:15.102Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:05:15.247Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:05:15.256Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:05:15.273Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:05:15.296Z][QUERY]: COMMIT
[2020-05-24T09:05:15.710Z][QUERY]: START TRANSACTION
[2020-05-24T09:05:15.721Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Keagan_Dare","https://s3.amazonaws.com/uifaces/faces/twitter/rtgibbons/128.jpg"]
[2020-05-24T09:05:15.791Z][QUERY]: COMMIT
[2020-05-24T09:05:15.852Z][QUERY]: START TRANSACTION
[2020-05-24T09:05:15.854Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Liza.Dibbert25","https://s3.amazonaws.com/uifaces/faces/twitter/chaensel/128.jpg"]
[2020-05-24T09:05:15.858Z][QUERY]: COMMIT
[2020-05-24T09:05:41.774Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:05:43.601Z][QUERY]: START TRANSACTION
[2020-05-24T09:05:43.606Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reynold21","https://s3.amazonaws.com/uifaces/faces/twitter/manekenthe/128.jpg"]
[2020-05-24T09:05:43.625Z][QUERY]: COMMIT
[2020-05-24T09:07:03.553Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:07:04.503Z][QUERY]: START TRANSACTION
[2020-05-24T09:07:04.505Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Carmelo_Volkman38","https://s3.amazonaws.com/uifaces/faces/twitter/jitachi/128.jpg"]
[2020-05-24T09:07:04.512Z][QUERY]: COMMIT
[2020-05-24T09:08:21.200Z][QUERY]: START TRANSACTION
[2020-05-24T09:08:21.206Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:08:21.211Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:08:21.212Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:08:21.213Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:08:21.214Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:08:21.214Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:08:21.351Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:08:21.361Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:08:21.379Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:08:21.392Z][QUERY]: COMMIT
[2020-05-24T09:10:12.879Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:12:58.829Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:13:12.420Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:13:13.891Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:13:46.130Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:16:48.338Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:16:49.695Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:18:50.027Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:18:58.043Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:20:59.254Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:21:00.276Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:21:57.631Z][QUERY]: START TRANSACTION
[2020-05-24T09:21:57.636Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:21:57.648Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:21:57.649Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:21:57.649Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:21:57.650Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:21:57.651Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:21:58.364Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:21:58.377Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:21:58.403Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:21:58.419Z][QUERY]: COMMIT
[2020-05-24T09:22:52.049Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:24:19.548Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:24:20.571Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:27:39.890Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:27:41.977Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:29:03.469Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:29:03.712Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:31:59.617Z][QUERY]: START TRANSACTION
[2020-05-24T09:31:59.622Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:31:59.633Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:31:59.634Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:31:59.634Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:31:59.635Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:31:59.636Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:31:59.870Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:31:59.879Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:31:59.906Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:31:59.919Z][QUERY]: COMMIT
[2020-05-24T09:33:26.264Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:33:26.394Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:34:14.829Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:35:37.563Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:35:39.143Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:37:14.041Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:37:14.807Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:38:01.956Z][QUERY]: START TRANSACTION
[2020-05-24T09:38:01.961Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:38:01.971Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:38:01.972Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:38:01.972Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:38:01.973Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:38:01.974Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:38:02.194Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:38:02.201Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:38:02.221Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:38:02.233Z][QUERY]: COMMIT
[2020-05-24T09:38:28.899Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:38:29.285Z][QUERY]: START TRANSACTION
[2020-05-24T09:38:29.294Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Vidal.Lang","https://s3.amazonaws.com/uifaces/faces/twitter/conspirator/128.jpg"]
[2020-05-24T09:38:29.311Z][QUERY]: COMMIT
[2020-05-24T09:39:19.597Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:39:19.880Z][QUERY]: START TRANSACTION
[2020-05-24T09:39:19.888Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Domingo_Fadel20","https://s3.amazonaws.com/uifaces/faces/twitter/kojourin/128.jpg"]
[2020-05-24T09:39:19.900Z][QUERY]: COMMIT
[2020-05-24T09:39:20.399Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:39:40.276Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:40:10.794Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:40:10.988Z][QUERY]: START TRANSACTION
[2020-05-24T09:40:10.991Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Sage.Mueller","https://s3.amazonaws.com/uifaces/faces/twitter/davidhemphill/128.jpg"]
[2020-05-24T09:40:11.000Z][QUERY]: COMMIT
[2020-05-24T09:40:49.982Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:41:20.988Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:42:47.477Z][QUERY]: START TRANSACTION
[2020-05-24T09:42:47.485Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:42:47.499Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:42:47.500Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:42:47.501Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:42:47.502Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:42:47.502Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:42:47.725Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:42:47.736Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:42:47.765Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:42:47.775Z][QUERY]: COMMIT
[2020-05-24T09:44:24.790Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:44:25.067Z][QUERY]: START TRANSACTION
[2020-05-24T09:44:25.090Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jonatan69","https://s3.amazonaws.com/uifaces/faces/twitter/adityasutomo/128.jpg"]
[2020-05-24T09:44:25.105Z][QUERY]: COMMIT
[2020-05-24T09:46:12.691Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:46:17.311Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:46:42.585Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T09:46:42.783Z][QUERY]: START TRANSACTION
[2020-05-24T09:46:42.792Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Alena3","https://s3.amazonaws.com/uifaces/faces/twitter/nicollerich/128.jpg"]
[2020-05-24T09:46:42.802Z][QUERY]: COMMIT
[2020-05-24T09:50:22.855Z][QUERY]: START TRANSACTION
[2020-05-24T09:50:22.861Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T09:50:22.872Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:50:22.873Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T09:50:22.873Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:50:22.874Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T09:50:22.875Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T09:50:23.079Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T09:50:23.089Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T09:50:23.113Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T09:50:23.128Z][QUERY]: COMMIT
[2020-05-24T09:58:51.605Z][QUERY]: START TRANSACTION
[2020-05-24T09:58:51.647Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Maritza94","https://s3.amazonaws.com/uifaces/faces/twitter/shinze/128.jpg"]
[2020-05-24T09:58:51.681Z][QUERY]: COMMIT
[2020-05-24T09:58:51.692Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:02:02.001Z][QUERY]: START TRANSACTION
[2020-05-24T10:02:02.012Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:02:02.029Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:02:02.030Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:02:02.031Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:02:02.031Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:02:02.033Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:02:02.263Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:02:02.270Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:02:02.292Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:02:02.304Z][QUERY]: COMMIT
[2020-05-24T10:02:20.248Z][QUERY]: START TRANSACTION
[2020-05-24T10:02:20.259Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Loma41","https://s3.amazonaws.com/uifaces/faces/twitter/traneblow/128.jpg"]
[2020-05-24T10:02:20.270Z][QUERY]: COMMIT
[2020-05-24T10:02:20.276Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:04:04.418Z][QUERY]: START TRANSACTION
[2020-05-24T10:04:04.424Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:04:04.434Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:04:04.436Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:04:04.436Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:04:04.437Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:04:04.440Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:04:04.649Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:04:04.661Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:04:04.684Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:04:04.698Z][QUERY]: COMMIT
[2020-05-24T10:05:22.795Z][QUERY]: START TRANSACTION
[2020-05-24T10:05:22.809Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kariane_Kunde","https://s3.amazonaws.com/uifaces/faces/twitter/jayphen/128.jpg"]
[2020-05-24T10:05:22.834Z][QUERY]: COMMIT
[2020-05-24T10:05:22.841Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:07:56.037Z][QUERY]: START TRANSACTION
[2020-05-24T10:07:56.051Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Domingo.Boyer","https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg"]
[2020-05-24T10:07:56.077Z][QUERY]: COMMIT
[2020-05-24T10:07:56.081Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:10:36.979Z][QUERY]: START TRANSACTION
[2020-05-24T10:10:36.984Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:10:36.993Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:10:36.994Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:10:36.995Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:10:36.996Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:10:36.996Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:10:37.125Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:10:37.133Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:10:37.147Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:10:37.157Z][QUERY]: COMMIT
[2020-05-24T10:10:54.106Z][QUERY]: START TRANSACTION
[2020-05-24T10:10:54.120Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Erica_Schinner76","https://s3.amazonaws.com/uifaces/faces/twitter/ratbus/128.jpg"]
[2020-05-24T10:10:54.152Z][QUERY]: COMMIT
[2020-05-24T10:10:54.162Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:13:24.327Z][QUERY]: START TRANSACTION
[2020-05-24T10:13:24.345Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:13:24.379Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:13:24.380Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:13:24.382Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:13:24.383Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:13:24.384Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:13:24.644Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:13:24.662Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:13:24.691Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:13:24.712Z][QUERY]: COMMIT
[2020-05-24T10:15:18.726Z][QUERY]: START TRANSACTION
[2020-05-24T10:15:18.739Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:15:18.761Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:15:18.762Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:15:18.763Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:15:18.764Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:15:18.764Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:15:19.131Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:15:19.145Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:15:19.169Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:15:19.187Z][QUERY]: COMMIT
[2020-05-24T10:15:20.332Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:15:23.550Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:17:45.475Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:17:48.942Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:18:37.371Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:21:50.090Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:21:52.316Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:23:32.439Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:25:29.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:25:32.530Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:26:02.949Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:26:03.324Z][QUERY]: START TRANSACTION
[2020-05-24T10:26:03.362Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ward_Emmerich46","https://s3.amazonaws.com/uifaces/faces/twitter/hfalucas/128.jpg"]
[2020-05-24T10:26:03.386Z][QUERY]: COMMIT
[2020-05-24T10:26:03.394Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:40:18.469Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","35","6","35"]
[2020-05-24T10:40:25.534Z][QUERY]: START TRANSACTION
[2020-05-24T10:40:25.570Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Opa",35,6]
[2020-05-24T10:40:25.592Z][QUERY]: COMMIT
[2020-05-24T10:43:15.094Z][QUERY]: START TRANSACTION
[2020-05-24T10:43:15.101Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:43:15.113Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:43:15.114Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:43:15.115Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:43:15.116Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:43:15.117Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:43:15.311Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:43:15.319Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:43:15.340Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:43:15.351Z][QUERY]: COMMIT
[2020-05-24T10:43:15.773Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:43:15.975Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:43:30.753Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:44:05.053Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:44:05.437Z][QUERY]: START TRANSACTION
[2020-05-24T10:44:05.449Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Pearlie_Goodwin89","https://s3.amazonaws.com/uifaces/faces/twitter/tom_even/128.jpg"]
[2020-05-24T10:44:05.465Z][QUERY]: COMMIT
[2020-05-24T10:44:05.477Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:44:45.474Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:47:35.478Z][QUERY]: START TRANSACTION
[2020-05-24T10:47:35.486Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:47:35.498Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:47:35.499Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:47:35.500Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:47:35.501Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:47:35.501Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:47:35.797Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:47:35.809Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:47:35.838Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:47:35.894Z][QUERY]: COMMIT
[2020-05-24T10:47:37.778Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:47:38.806Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:47:43.343Z][QUERY]: START TRANSACTION
[2020-05-24T10:47:43.348Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:47:43.352Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:47:43.353Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:47:43.354Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:47:43.355Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:47:43.356Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:47:43.454Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:47:43.467Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:47:43.483Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:47:43.491Z][QUERY]: COMMIT
[2020-05-24T10:47:44.205Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:47:45.282Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:49:13.513Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:49:13.531Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:50:01.260Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:50:01.970Z][QUERY]: START TRANSACTION
[2020-05-24T10:50:01.998Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Leonor.West93","https://s3.amazonaws.com/uifaces/faces/twitter/the_purplebunny/128.jpg"]
[2020-05-24T10:50:02.025Z][QUERY]: COMMIT
[2020-05-24T10:50:02.031Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:59:17.139Z][QUERY]: START TRANSACTION
[2020-05-24T10:59:17.146Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T10:59:17.158Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:59:17.159Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T10:59:17.159Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:59:17.160Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T10:59:17.161Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T10:59:17.507Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T10:59:17.517Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T10:59:17.549Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T10:59:17.574Z][QUERY]: COMMIT
[2020-05-24T10:59:19.242Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T10:59:19.868Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:00:01.892Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:00:30.135Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:00:30.444Z][QUERY]: START TRANSACTION
[2020-05-24T11:00:30.467Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Frieda68","https://s3.amazonaws.com/uifaces/faces/twitter/chris_witko/128.jpg"]
[2020-05-24T11:00:30.483Z][QUERY]: COMMIT
[2020-05-24T11:00:30.513Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:01:46.487Z][QUERY]: START TRANSACTION
[2020-05-24T11:01:46.492Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T11:01:46.502Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T11:01:46.503Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T11:01:46.503Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T11:01:46.504Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T11:01:46.505Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T11:01:46.690Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T11:01:46.717Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T11:01:46.739Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T11:01:46.752Z][QUERY]: COMMIT
[2020-05-24T11:01:47.078Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:01:47.212Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:02:09.693Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:02:09.846Z][QUERY]: START TRANSACTION
[2020-05-24T11:02:09.855Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Callie.Hermann","https://s3.amazonaws.com/uifaces/faces/twitter/cbracco/128.jpg"]
[2020-05-24T11:02:09.869Z][QUERY]: COMMIT
[2020-05-24T11:02:09.943Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:03:48.246Z][QUERY]: START TRANSACTION
[2020-05-24T11:03:48.257Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T11:03:48.266Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T11:03:48.267Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T11:03:48.268Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T11:03:48.269Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T11:03:48.270Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T11:03:48.487Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T11:03:48.499Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T11:03:48.514Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T11:03:48.526Z][QUERY]: COMMIT
[2020-05-24T11:03:49.364Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:03:49.432Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:03:49.708Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:03:49.906Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:09:02.310Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:09:02.398Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:09:05.954Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:09:09.378Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:10:08.965Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:10:11.843Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:10:11.907Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:10:56.667Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:11:09.816Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:13:22.723Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:13:27.370Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:13:28.404Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:15:08.870Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:15:56.356Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:16:00.268Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:16:03.398Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:16:03.851Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:16:03.853Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:17:44.245Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:17:44.255Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:17:49.727Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:17:50.715Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:21:53.370Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:22:28.486Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:22:29.654Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:22:29.780Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:22:30.654Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:22:30.655Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:26:34.042Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:26:34.839Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:26:39.994Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:26:39.996Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:26:40.054Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:26:41.110Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:27:26.129Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:27:26.801Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:27:27.812Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:27:27.813Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:27:28.321Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:27:28.322Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:28:13.630Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:28:14.862Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:28:16.016Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:30:30.248Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:30:32.057Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:30:32.472Z][QUERY]: START TRANSACTION
[2020-05-24T11:30:32.585Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Marietta37","https://s3.amazonaws.com/uifaces/faces/twitter/madcampos/128.jpg"]
[2020-05-24T11:30:32.625Z][QUERY]: COMMIT
[2020-05-24T11:30:32.631Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:30:32.917Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:22.066Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:22.076Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:25.134Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:25.136Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:25.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:25.672Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:32:40.249Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","40","6","40"]
[2020-05-24T11:32:54.413Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["40","6","40","6"]
[2020-05-24T11:32:54.433Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["40","6","40","6"]
[2020-05-24T11:33:11.369Z][QUERY]: START TRANSACTION
[2020-05-24T11:33:11.379Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["You man",40,6]
[2020-05-24T11:33:11.400Z][QUERY]: COMMIT
[2020-05-24T11:33:24.718Z][QUERY]: START TRANSACTION
[2020-05-24T11:33:24.721Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["A",40,6]
[2020-05-24T11:33:24.729Z][QUERY]: COMMIT
[2020-05-24T11:34:36.903Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:34:38.405Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:34:39.167Z][QUERY]: START TRANSACTION
[2020-05-24T11:34:39.184Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Dulce.Gorczany16","https://s3.amazonaws.com/uifaces/faces/twitter/timgthomas/128.jpg"]
[2020-05-24T11:34:39.200Z][QUERY]: COMMIT
[2020-05-24T11:34:39.235Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:34:39.297Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:34:52.396Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["41","6","41","6"]
[2020-05-24T11:34:55.993Z][QUERY]: START TRANSACTION
[2020-05-24T11:34:56.001Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["1",6,41]
[2020-05-24T11:34:56.021Z][QUERY]: COMMIT
[2020-05-24T11:35:16.287Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","41","6","41"]
[2020-05-24T11:35:26.024Z][QUERY]: START TRANSACTION
[2020-05-24T11:35:26.031Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["2",6,41]
[2020-05-24T11:35:26.045Z][QUERY]: COMMIT
[2020-05-24T11:35:34.011Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","40","6","40"]
[2020-05-24T11:35:38.290Z][QUERY]: START TRANSACTION
[2020-05-24T11:35:38.293Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["3",6,41]
[2020-05-24T11:35:38.301Z][QUERY]: COMMIT
[2020-05-24T11:36:13.955Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","41","6","41"]
[2020-05-24T11:36:23.370Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","41","6","41"]
[2020-05-24T11:36:38.702Z][QUERY]: START TRANSACTION
[2020-05-24T11:36:38.704Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["4",6,41]
[2020-05-24T11:36:38.713Z][QUERY]: COMMIT
[2020-05-24T11:36:59.809Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:37:02.546Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:37:02.780Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:37:03.587Z][QUERY]: START TRANSACTION
[2020-05-24T11:37:03.589Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Nickolas28","https://s3.amazonaws.com/uifaces/faces/twitter/kimcool/128.jpg"]
[2020-05-24T11:37:03.593Z][QUERY]: COMMIT
[2020-05-24T11:37:03.609Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:27.602Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:29.432Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:30.871Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:31.364Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:36.184Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:36.185Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:49:47.874Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T11:49:52.820Z][QUERY]: START TRANSACTION
[2020-05-24T11:49:52.831Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hey",6,42]
[2020-05-24T11:49:52.864Z][QUERY]: COMMIT
[2020-05-24T11:49:55.805Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T11:50:04.009Z][QUERY]: START TRANSACTION
[2020-05-24T11:50:04.266Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hey",42,6]
[2020-05-24T11:50:04.379Z][QUERY]: COMMIT
[2020-05-24T11:50:13.419Z][QUERY]: START TRANSACTION
[2020-05-24T11:50:13.421Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["How are ypu",6,42]
[2020-05-24T11:50:13.424Z][QUERY]: COMMIT
[2020-05-24T11:50:18.917Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T11:50:21.647Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T11:50:25.001Z][QUERY]: START TRANSACTION
[2020-05-24T11:50:25.006Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ok",42,6]
[2020-05-24T11:50:25.012Z][QUERY]: COMMIT
[2020-05-24T11:50:38.116Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:50:39.566Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:50:39.695Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:50:43.542Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T11:51:35.981Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:51:36.087Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:51:42.291Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:51:42.294Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:51:44.064Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:51:44.065Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:52:13.083Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T11:52:18.740Z][QUERY]: START TRANSACTION
[2020-05-24T11:52:18.745Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["H",42,6]
[2020-05-24T11:52:18.765Z][QUERY]: COMMIT
[2020-05-24T11:52:31.435Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T11:52:40.088Z][QUERY]: START TRANSACTION
[2020-05-24T11:52:40.092Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hi",6,42]
[2020-05-24T11:52:40.099Z][QUERY]: COMMIT
[2020-05-24T11:52:43.704Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T11:52:46.119Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T11:52:49.796Z][QUERY]: START TRANSACTION
[2020-05-24T11:52:49.801Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hi",42,6]
[2020-05-24T11:52:49.808Z][QUERY]: COMMIT
[2020-05-24T11:58:06.969Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:07.003Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:15.105Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:15.106Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:16.520Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:16.522Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:41.171Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:41.203Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:42.171Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:42.172Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:43.186Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:58:43.187Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T11:59:34.228Z][QUERY]: START TRANSACTION
[2020-05-24T11:59:34.252Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["h",42,6]
[2020-05-24T11:59:34.290Z][QUERY]: COMMIT
[2020-05-24T12:03:20.323Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:03:20.343Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:03:25.838Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:03:25.839Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:03:26.682Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:03:26.683Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:03:33.976Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:03:39.098Z][QUERY]: START TRANSACTION
[2020-05-24T12:03:39.228Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["1",6,42]
[2020-05-24T12:03:39.768Z][QUERY]: COMMIT
[2020-05-24T12:03:43.824Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","8","42","8"]
[2020-05-24T12:03:47.236Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:03:52.198Z][QUERY]: START TRANSACTION
[2020-05-24T12:03:52.205Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["2",6,42]
[2020-05-24T12:03:52.212Z][QUERY]: COMMIT
[2020-05-24T12:05:46.083Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:05:46.096Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:05:47.967Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:05:47.970Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:05:48.225Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:05:48.227Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:05:54.576Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:06:01.156Z][QUERY]: START TRANSACTION
[2020-05-24T12:06:01.163Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["3",6,42]
[2020-05-24T12:06:01.180Z][QUERY]: COMMIT
[2020-05-24T12:06:09.841Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","2","42","2"]
[2020-05-24T12:06:10.586Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:06:15.681Z][QUERY]: START TRANSACTION
[2020-05-24T12:06:15.683Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["4",6,42]
[2020-05-24T12:06:15.687Z][QUERY]: COMMIT
[2020-05-24T12:07:34.210Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:07:34.390Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:07:40.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:07:40.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:07:41.185Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:07:41.186Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:07:45.821Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:07:49.701Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","7","42","7"]
[2020-05-24T12:07:51.681Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:07:54.520Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","7","42","7"]
[2020-05-24T12:07:55.605Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:09:09.136Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:09:16.351Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:09:17.426Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:09:19.615Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:09:32.502Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:09:32.555Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:11:06.108Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:11:08.922Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:11:10.091Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:11:13.762Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T12:11:18.223Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:11:19.519Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:11:19.981Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:27.309Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:29.937Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:34.259Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:34.261Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:34.666Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:34.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:13:39.420Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T12:14:05.293Z][QUERY]: START TRANSACTION
[2020-05-24T12:14:05.312Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["5",42,6]
[2020-05-24T12:14:05.336Z][QUERY]: COMMIT
[2020-05-24T12:16:39.707Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:16:39.716Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:16:41.883Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:16:41.885Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:16:42.005Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:16:42.006Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:16:47.214Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T12:16:56.599Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:17:02.795Z][QUERY]: START TRANSACTION
[2020-05-24T12:17:03.030Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["6",6,42]
[2020-05-24T12:17:03.154Z][QUERY]: COMMIT
[2020-05-24T12:17:14.182Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T12:17:17.253Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","42","6","42"]
[2020-05-24T12:17:24.836Z][QUERY]: START TRANSACTION
[2020-05-24T12:17:24.838Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["7",42,6]
[2020-05-24T12:17:24.844Z][QUERY]: COMMIT
[2020-05-24T12:20:02.453Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:02.751Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:06.581Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:06.583Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:07.451Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:07.452Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:24.327Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["42","6","42","6"]
[2020-05-24T12:20:32.056Z][QUERY]: START TRANSACTION
[2020-05-24T12:20:32.065Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["8",6,42]
[2020-05-24T12:20:32.078Z][QUERY]: COMMIT
[2020-05-24T12:20:54.159Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:54.215Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:56.258Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:56.259Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:56.426Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:20:56.427Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:25:12.559Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:25:13.725Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:25:14.032Z][QUERY]: START TRANSACTION
[2020-05-24T12:25:14.038Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Alexis.Feest15","https://s3.amazonaws.com/uifaces/faces/twitter/ssbb_me/128.jpg"]
[2020-05-24T12:25:14.048Z][QUERY]: COMMIT
[2020-05-24T12:25:14.094Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:25:14.311Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T12:25:21.727Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["43","6","43","6"]
[2020-05-24T12:25:27.058Z][QUERY]: START TRANSACTION
[2020-05-24T12:25:27.062Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hi",6,43]
[2020-05-24T12:25:27.072Z][QUERY]: COMMIT
[2020-05-24T12:25:31.367Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","43","6","43"]
[2020-05-24T12:25:36.445Z][QUERY]: START TRANSACTION
[2020-05-24T12:25:36.451Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hi",43,6]
[2020-05-24T12:25:36.461Z][QUERY]: COMMIT
[2020-05-24T14:03:28.022Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:03:28.030Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:03:28.775Z][QUERY]: START TRANSACTION
[2020-05-24T14:03:28.789Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Forest.Jakubowski54","https://s3.amazonaws.com/uifaces/faces/twitter/croakx/128.jpg"]
[2020-05-24T14:03:28.821Z][QUERY]: COMMIT
[2020-05-24T14:03:28.854Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:04:01.508Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:04:29.848Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:04:30.106Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:05:01.415Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:05:03.921Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:05:04.382Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:05:23.004Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","6","44","6"]
[2020-05-24T14:05:29.605Z][QUERY]: START TRANSACTION
[2020-05-24T14:05:29.610Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hi",6,44]
[2020-05-24T14:05:29.630Z][QUERY]: COMMIT
[2020-05-24T14:05:36.286Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["43","44","43","44"]
[2020-05-24T14:05:49.391Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","44","6","44"]
[2020-05-24T14:05:51.125Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","43","6","43"]
[2020-05-24T14:05:54.129Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","44","6","44"]
[2020-05-24T14:06:24.703Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","43","6","43"]
[2020-05-24T14:06:31.814Z][QUERY]: START TRANSACTION
[2020-05-24T14:06:31.822Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ey",43,6]
[2020-05-24T14:06:31.838Z][QUERY]: COMMIT
[2020-05-24T14:12:31.932Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","43","44","43"]
[2020-05-24T14:13:22.094Z][QUERY]: START TRANSACTION
[2020-05-24T14:13:22.096Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["from forest to alex",43,44]
[2020-05-24T14:13:22.113Z][QUERY]: COMMIT
[2020-05-24T14:14:48.052Z][QUERY]: START TRANSACTION
[2020-05-24T14:14:48.055Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["from alex to forest",44,43]
[2020-05-24T14:14:48.068Z][QUERY]: COMMIT
[2020-05-24T14:16:45.783Z][QUERY]: START TRANSACTION
[2020-05-24T14:16:45.785Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["From Tom to alex",43,6]
[2020-05-24T14:16:45.794Z][QUERY]: COMMIT
[2020-05-24T14:24:55.882Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:24:55.894Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:24:57.316Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:24:57.317Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:02.282Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:02.283Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:10.191Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:26.534Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:26.665Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:26.697Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:26.891Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:26.892Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:28.645Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:40.291Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:40.304Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:25:45.263Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","44","6","44"]
[2020-05-24T14:25:56.976Z][QUERY]: START TRANSACTION
[2020-05-24T14:25:57.000Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["from tom to forest",44,6]
[2020-05-24T14:25:57.055Z][QUERY]: COMMIT
[2020-05-24T14:26:17.052Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","6","44","6"]
[2020-05-24T14:26:30.602Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["43","6","43","6"]
[2020-05-24T14:26:30.668Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["43","6","43","6"]
[2020-05-24T14:26:34.403Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["43","44","43","44"]
[2020-05-24T14:26:48.640Z][QUERY]: START TRANSACTION
[2020-05-24T14:26:48.642Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["from alex to forest 2",44,43]
[2020-05-24T14:26:48.654Z][QUERY]: COMMIT
[2020-05-24T14:26:54.250Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","43","44","43"]
[2020-05-24T14:27:06.953Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","6","44","6"]
[2020-05-24T14:27:08.287Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","6","44","6"]
[2020-05-24T14:27:09.170Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","43","44","43"]
[2020-05-24T14:28:26.367Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:26.538Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:26.787Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:33.665Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:33.666Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:33.894Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:33.895Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:34.227Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:28:34.228Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:29:08.576Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:29:10.445Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:29:10.763Z][QUERY]: START TRANSACTION
[2020-05-24T14:29:10.773Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ashlee.Hoppe83","https://s3.amazonaws.com/uifaces/faces/twitter/souperphly/128.jpg"]
[2020-05-24T14:29:10.790Z][QUERY]: COMMIT
[2020-05-24T14:29:10.858Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:29:11.585Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:29:23.814Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","6","45","6"]
[2020-05-24T14:29:27.507Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","44","6","44"]
[2020-05-24T14:29:28.542Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T14:29:40.699Z][QUERY]: START TRANSACTION
[2020-05-24T14:29:40.701Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ash ash",45,6]
[2020-05-24T14:29:40.710Z][QUERY]: COMMIT
[2020-05-24T14:29:47.362Z][QUERY]: START TRANSACTION
[2020-05-24T14:29:47.364Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["wat",6,45]
[2020-05-24T14:29:47.375Z][QUERY]: COMMIT
[2020-05-24T14:32:38.478Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","45","44","45"]
[2020-05-24T14:32:39.378Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","6","44","6"]
[2020-05-24T14:41:05.842Z][QUERY]: START TRANSACTION
[2020-05-24T14:41:05.848Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T14:41:05.859Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T14:41:05.860Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T14:41:05.861Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T14:41:05.862Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T14:41:05.862Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T14:41:06.139Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T14:41:06.149Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T14:41:06.180Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T14:41:06.191Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T14:41:06.198Z][QUERY]: COMMIT
[2020-05-24T14:41:07.061Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:41:07.241Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:41:09.670Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:41:09.671Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:41:10.979Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:41:10.981Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:56:18.776Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:56:25.709Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:56:26.582Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:56:48.947Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:56:56.216Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:02.815Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:03.796Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:04.735Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:05.703Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:05.704Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:13.520Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:57:13.543Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:29.945Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:30.168Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:32.382Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:35.412Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:36.325Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:36.453Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:36.455Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:37.339Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:37.345Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T14:58:50.958Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T14:58:51.973Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T14:58:52.938Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T14:58:53.888Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T14:58:55.652Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T14:58:58.474Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T14:59:00.109Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T14:59:01.214Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","44","6","44"]
[2020-05-24T14:59:02.837Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T15:02:09.050Z][QUERY]: START TRANSACTION
[2020-05-24T15:02:09.058Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:02:09.067Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:02:09.068Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:02:09.068Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:02:09.069Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:02:09.069Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:02:09.669Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:02:09.683Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:02:09.709Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:02:09.714Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:02:09.748Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:02:09.755Z][QUERY]: COMMIT
[2020-05-24T15:02:11.330Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:02:11.743Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:02:11.926Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:02:11.927Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:02:13.780Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:02:13.781Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:25:19.496Z][QUERY]: START TRANSACTION
[2020-05-24T15:25:19.502Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:25:19.513Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:25:19.514Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:25:19.515Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:25:19.516Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:25:19.517Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:25:19.710Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:25:19.720Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:25:19.742Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:25:19.746Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:25:19.760Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:25:19.765Z][QUERY]: COMMIT
[2020-05-24T15:25:20.109Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:25:20.533Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:25:20.541Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:25:20.794Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:25:22.671Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:25:22.672Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:29:29.898Z][QUERY]: START TRANSACTION
[2020-05-24T15:29:29.905Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:29:29.914Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:29:29.915Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:29:29.916Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:29:29.916Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:29:29.917Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:29:30.125Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:29:30.135Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:29:30.153Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:29:30.157Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:29:30.166Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:29:30.171Z][QUERY]: COMMIT
[2020-05-24T15:29:30.792Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:29:30.835Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:29:31.166Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:29:31.237Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:29:31.679Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:29:31.681Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:39:50.061Z][QUERY]: START TRANSACTION
[2020-05-24T15:39:50.070Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:39:50.079Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:39:50.080Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:39:50.081Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:39:50.081Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:39:50.084Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:39:50.370Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:39:50.381Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:39:50.412Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:39:50.416Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:39:50.429Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:39:50.434Z][QUERY]: COMMIT
[2020-05-24T15:39:51.667Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:39:51.765Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:39:53.153Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:39:53.154Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:39:53.662Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:39:53.663Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:20.173Z][QUERY]: START TRANSACTION
[2020-05-24T15:41:20.178Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:41:20.186Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:41:20.187Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:41:20.188Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:41:20.189Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:41:20.189Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:41:20.312Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:41:20.323Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:41:20.345Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:41:20.349Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:41:20.374Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:41:20.382Z][QUERY]: COMMIT
[2020-05-24T15:41:20.946Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:21.268Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:21.518Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:21.520Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:21.589Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:21.590Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:41:39.939Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T15:44:15.875Z][QUERY]: START TRANSACTION
[2020-05-24T15:44:15.881Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:44:15.891Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:44:15.892Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:44:15.892Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:44:15.893Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:44:15.894Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:44:16.055Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:44:16.067Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:44:16.085Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:44:16.089Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:44:16.096Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:44:16.101Z][QUERY]: COMMIT
[2020-05-24T15:44:16.490Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:44:16.553Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:44:16.986Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:44:17.158Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:44:17.321Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:44:17.591Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:31.186Z][QUERY]: START TRANSACTION
[2020-05-24T15:45:31.192Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:45:31.204Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:45:31.205Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:45:31.207Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:45:31.207Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:45:31.208Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:45:31.409Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:45:31.421Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:45:31.440Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:45:31.443Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:45:31.450Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:45:31.457Z][QUERY]: COMMIT
[2020-05-24T15:45:31.923Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:32.075Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:32.211Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:32.212Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:32.693Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:32.694Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:45:42.248Z][QUERY]: START TRANSACTION
[2020-05-24T15:45:42.256Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, $2) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["g",6]
[2020-05-24T15:45:42.270Z][QUERY]: COMMIT
[2020-05-24T15:46:32.193Z][QUERY]: START TRANSACTION
[2020-05-24T15:46:32.199Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:46:32.208Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:46:32.209Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:46:32.210Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:46:32.211Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:46:32.213Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:46:32.480Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:46:32.491Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:46:33.024Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:46:33.029Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:46:33.051Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:46:33.061Z][QUERY]: COMMIT
[2020-05-24T15:46:33.666Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:46:33.807Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:46:35.425Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:46:35.429Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:46:35.543Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:46:35.544Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:46:39.499Z][QUERY]: START TRANSACTION
[2020-05-24T15:46:39.585Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, $2) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",6]
[2020-05-24T15:46:40.196Z][QUERY]: COMMIT
[2020-05-24T15:49:02.645Z][QUERY]: START TRANSACTION
[2020-05-24T15:49:02.654Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, $2) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["s",6]
[2020-05-24T15:49:02.686Z][QUERY]: COMMIT
[2020-05-24T15:49:14.989Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:49:19.373Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:49:19.583Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:49:26.618Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T15:49:31.168Z][QUERY]: START TRANSACTION
[2020-05-24T15:49:31.171Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, $2) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["s",6]
[2020-05-24T15:49:31.186Z][QUERY]: COMMIT
[2020-05-24T15:54:04.034Z][QUERY]: START TRANSACTION
[2020-05-24T15:54:04.040Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T15:54:04.048Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:54:04.049Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T15:54:04.050Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:54:04.050Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T15:54:04.051Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T15:54:04.334Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T15:54:04.341Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T15:54:04.362Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T15:54:04.367Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T15:54:04.376Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T15:54:04.383Z][QUERY]: COMMIT
[2020-05-24T15:54:05.049Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:54:05.213Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:54:05.414Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:54:05.415Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:54:09.932Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T15:54:09.935Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:03:31.895Z][QUERY]: START TRANSACTION
[2020-05-24T16:03:31.902Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:03:31.908Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:03:31.910Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:03:31.911Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:03:31.912Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:03:31.913Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:03:32.090Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:03:32.106Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:03:32.134Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:03:32.139Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:03:32.150Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT ''
[2020-05-24T16:03:32.156Z][QUERY]: COMMIT
[2020-05-24T16:03:32.989Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:03:33.040Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:03:33.222Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:03:33.405Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:03:35.914Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:03:35.915Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:05:37.798Z][QUERY]: START TRANSACTION
[2020-05-24T16:05:37.804Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:05:37.809Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:05:37.809Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:05:37.810Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:05:37.811Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:05:37.812Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:05:37.908Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:05:37.915Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:05:37.929Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:05:37.933Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:05:37.940Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL DEFAULT 'client'
[2020-05-24T16:05:37.948Z][QUERY]: COMMIT
[2020-05-24T16:05:38.567Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:05:38.694Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:05:38.782Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:05:38.784Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:05:40.651Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:05:40.652Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:06:24.581Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:24.586Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:24.592Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:24.593Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:24.594Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:24.594Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:24.595Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:24.768Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:24.777Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:24.799Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:24.803Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:24.814Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:24.825Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:24.825Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:24.827Z][QUERY]: ROLLBACK
[2020-05-24T16:06:28.184Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:28.214Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:28.225Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:28.227Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:28.230Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:28.231Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:28.234Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:28.473Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:28.478Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:28.483Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:28.485Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:28.507Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:28.539Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:28.539Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:28.541Z][QUERY]: ROLLBACK
[2020-05-24T16:06:31.889Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:31.891Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:31.893Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:31.894Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:31.895Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:31.895Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:31.896Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:31.985Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:31.989Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:31.994Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:31.996Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:32.001Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:32.006Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:32.006Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:32.007Z][QUERY]: ROLLBACK
[2020-05-24T16:06:35.652Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:35.653Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:35.656Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:35.656Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:35.657Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:35.658Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:35.658Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:35.733Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:35.739Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:35.746Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:35.749Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:35.805Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:35.808Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:35.808Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:35.810Z][QUERY]: ROLLBACK
[2020-05-24T16:06:39.281Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:39.285Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:39.292Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:39.294Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:39.296Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:39.298Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:39.300Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:39.609Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:39.615Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:39.629Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:39.631Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:39.659Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:39.664Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:39.664Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:39.666Z][QUERY]: ROLLBACK
[2020-05-24T16:06:42.814Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:42.815Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:42.817Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:42.818Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:42.819Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:42.820Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:42.820Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:42.890Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:42.894Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:42.900Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:42.902Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:42.914Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:42.918Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:42.918Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:42.919Z][QUERY]: ROLLBACK
[2020-05-24T16:06:46.049Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:46.051Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:46.053Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:46.054Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:46.054Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:46.055Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:46.055Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:46.194Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:46.201Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:46.216Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:46.218Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:46.229Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:46.234Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:46.234Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:46.236Z][QUERY]: ROLLBACK
[2020-05-24T16:06:49.503Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:49.505Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:49.507Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:49.507Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:49.508Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:49.509Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:49.509Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:49.574Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:49.578Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:49.582Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:49.584Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:49.588Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:49.591Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:49.591Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:49.592Z][QUERY]: ROLLBACK
[2020-05-24T16:06:52.913Z][QUERY]: START TRANSACTION
[2020-05-24T16:06:52.914Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:06:52.917Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:52.918Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:06:52.918Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:52.919Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:06:52.919Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:06:53.325Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:06:53.330Z][QUERY]: ALTER TABLE "users" DROP COLUMN "description"
[2020-05-24T16:06:53.359Z][QUERY]: ALTER TABLE "users" DROP COLUMN "type"
[2020-05-24T16:06:53.361Z][QUERY]: ALTER TABLE "users" ADD "description" character varying NOT NULL DEFAULT ''
[2020-05-24T16:06:53.395Z][QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:53.427Z][FAILED QUERY]: ALTER TABLE "users" ADD "type" character varying NOT NULL
[2020-05-24T16:06:53.427Z][QUERY ERROR]: error: столбец "type" содержит значения NULL
[2020-05-24T16:06:53.429Z][QUERY]: ROLLBACK
[2020-05-24T16:08:09.302Z][QUERY]: START TRANSACTION
[2020-05-24T16:08:09.308Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:08:09.315Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:08:09.316Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:08:09.317Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:08:09.318Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:08:09.319Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:08:09.486Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:08:09.499Z][QUERY]: ALTER TABLE "users" ALTER COLUMN "type" DROP DEFAULT
[2020-05-24T16:08:09.509Z][QUERY]: COMMIT
[2020-05-24T16:08:12.459Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:08:12.620Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:08:13.705Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:08:13.706Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:08:20.431Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:08:20.435Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:09:39.257Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:09:43.128Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:09:43.614Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:09:53.760Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T16:09:57.377Z][QUERY]: START TRANSACTION
[2020-05-24T16:09:57.392Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["echo",1]
[2020-05-24T16:09:57.419Z][QUERY]: COMMIT
[2020-05-24T16:11:06.672Z][QUERY]: START TRANSACTION
[2020-05-24T16:11:06.678Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:11:06.687Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:11:06.688Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:11:06.689Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:11:06.690Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:11:06.691Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:11:06.887Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:11:06.898Z][QUERY]: COMMIT
[2020-05-24T16:11:07.774Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:07.960Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:08.018Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:08.020Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:08.551Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:08.552Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:40.876Z][QUERY]: START TRANSACTION
[2020-05-24T16:11:40.885Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:11:40.894Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:11:40.895Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:11:40.896Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:11:40.897Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:11:40.898Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:11:41.235Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:11:41.252Z][QUERY]: COMMIT
[2020-05-24T16:11:41.766Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T16:11:42.032Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:42.106Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:42.108Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T16:11:42.179Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:42.180Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:46.810Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:11:46.812Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:12:36.044Z][QUERY]: START TRANSACTION
[2020-05-24T16:12:36.052Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:12:36.064Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:12:36.067Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:12:36.068Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:12:36.071Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:12:36.072Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:12:36.198Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:12:36.207Z][QUERY]: COMMIT
[2020-05-24T16:12:37.050Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:12:37.099Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:12:37.881Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:12:38.442Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:12:38.446Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:12:38.447Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:14:29.756Z][QUERY]: START TRANSACTION
[2020-05-24T16:14:29.762Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:14:29.771Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:14:29.772Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:14:29.773Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:14:29.774Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:14:29.775Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:14:29.973Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:14:29.987Z][QUERY]: COMMIT
[2020-05-24T16:14:30.832Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:14:31.653Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:14:31.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:14:31.939Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:14:32.926Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:14:32.927Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:15:11.165Z][QUERY]: START TRANSACTION
[2020-05-24T16:15:11.171Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:15:11.185Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:15:11.186Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:15:11.187Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:15:11.188Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:15:11.188Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:15:11.418Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:15:11.428Z][QUERY]: COMMIT
[2020-05-24T16:15:11.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:15:13.295Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:15:13.684Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:15:13.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:15:13.920Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:15:16.175Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:16:10.907Z][QUERY]: START TRANSACTION
[2020-05-24T16:16:10.915Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:16:10.932Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:16:10.932Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:16:10.933Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:16:10.934Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:16:10.934Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:16:11.126Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:16:11.138Z][QUERY]: COMMIT
[2020-05-24T16:16:11.448Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:16:11.531Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:16:11.671Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:16:11.851Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:16:11.868Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:16:11.869Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:17.169Z][QUERY]: START TRANSACTION
[2020-05-24T16:17:17.177Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:17:17.189Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:17:17.190Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:17:17.191Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:17:17.193Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:17:17.195Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:17:17.373Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:17:17.385Z][QUERY]: COMMIT
[2020-05-24T16:17:17.757Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:17.877Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:18.110Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:18.182Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:18.184Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:18.307Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:17:23.193Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T16:18:16.973Z][QUERY]: START TRANSACTION
[2020-05-24T16:18:16.978Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:18:16.987Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:18:16.988Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:18:16.989Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:18:16.989Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:18:16.990Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:18:17.111Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:18:17.123Z][QUERY]: COMMIT
[2020-05-24T16:18:17.382Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:18:17.508Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:18:17.535Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:18:17.536Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:18:17.615Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:18:17.617Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:19:27.879Z][QUERY]: START TRANSACTION
[2020-05-24T16:19:27.887Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:19:27.907Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:19:27.908Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:19:27.909Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:19:27.910Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:19:27.910Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:19:28.083Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:19:28.094Z][QUERY]: COMMIT
[2020-05-24T16:19:28.560Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:19:28.660Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:19:29.594Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:19:29.595Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:19:29.678Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:19:29.679Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:20:55.247Z][QUERY]: START TRANSACTION
[2020-05-24T16:20:55.252Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:20:55.262Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:20:55.263Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:20:55.264Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:20:55.265Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:20:55.266Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:20:55.391Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:20:55.406Z][QUERY]: COMMIT
[2020-05-24T16:20:55.693Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:20:55.745Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:20:55.987Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:20:56.019Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:20:56.201Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:20:56.202Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:21:07.706Z][QUERY]: START TRANSACTION
[2020-05-24T16:21:07.714Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",1]
[2020-05-24T16:21:07.731Z][QUERY]: COMMIT
[2020-05-24T16:23:16.748Z][QUERY]: START TRANSACTION
[2020-05-24T16:23:16.753Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:23:16.763Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:23:16.764Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:23:16.764Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:23:16.765Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:23:16.765Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:23:16.999Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:23:17.015Z][QUERY]: COMMIT
[2020-05-24T16:23:17.712Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:23:17.820Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:23:17.886Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:23:17.973Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:23:18.028Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:23:18.029Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:23:44.010Z][QUERY]: START TRANSACTION
[2020-05-24T16:23:44.023Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",1]
[2020-05-24T16:23:44.100Z][QUERY]: COMMIT
[2020-05-24T16:24:39.733Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:24:44.451Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:24:44.923Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.215Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.229Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.231Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.251Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.253Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.261Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:25:31.273Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:26:31.309Z][QUERY]: START TRANSACTION
[2020-05-24T16:26:31.315Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:26:31.329Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:26:31.330Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:26:31.330Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:26:31.331Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:26:31.332Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:26:31.535Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:26:31.547Z][QUERY]: COMMIT
[2020-05-24T16:26:31.920Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:26:31.976Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:26:32.189Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:26:32.396Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:26:48.036Z][QUERY]: START TRANSACTION
[2020-05-24T16:26:48.043Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",1,6]
[2020-05-24T16:26:48.055Z][QUERY]: COMMIT
[2020-05-24T16:27:37.869Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T16:27:45.347Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:27:48.300Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:27:49.381Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:27:54.619Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T16:27:59.486Z][QUERY]: START TRANSACTION
[2020-05-24T16:27:59.508Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["2",1,6]
[2020-05-24T16:27:59.536Z][QUERY]: COMMIT
[2020-05-24T16:33:20.123Z][QUERY]: START TRANSACTION
[2020-05-24T16:33:20.130Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:33:20.142Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:33:20.143Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:33:20.144Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:33:20.145Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:33:20.146Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:33:20.383Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:33:20.399Z][QUERY]: COMMIT
[2020-05-24T16:33:22.218Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:22.975Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:22.976Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:22.989Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:33.546Z][QUERY]: START TRANSACTION
[2020-05-24T16:33:33.554Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:33:33.564Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:33:33.565Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:33:33.565Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:33:33.566Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:33:33.567Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:33:33.835Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:33:33.852Z][QUERY]: COMMIT
[2020-05-24T16:33:34.383Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:34.861Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:35.152Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:33:35.184Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:34:10.595Z][QUERY]: START TRANSACTION
[2020-05-24T16:34:10.604Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["3",1,6]
[2020-05-24T16:34:10.626Z][QUERY]: COMMIT
[2020-05-24T16:34:10.633Z][QUERY]: START TRANSACTION
[2020-05-24T16:34:10.635Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["3",6,1]
[2020-05-24T16:34:10.638Z][QUERY]: COMMIT
[2020-05-24T16:34:23.799Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:34:29.888Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:34:30.166Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:34:34.307Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T16:35:51.621Z][QUERY]: START TRANSACTION
[2020-05-24T16:35:51.627Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:35:51.636Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:35:51.637Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:35:51.637Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:35:51.640Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:35:51.641Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:35:51.845Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:35:51.858Z][QUERY]: COMMIT
[2020-05-24T16:35:52.180Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:35:52.311Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:35:54.102Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:35:54.103Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:36:04.248Z][QUERY]: START TRANSACTION
[2020-05-24T16:36:04.255Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["4",1,6]
[2020-05-24T16:36:04.269Z][QUERY]: COMMIT
[2020-05-24T16:36:04.274Z][QUERY]: START TRANSACTION
[2020-05-24T16:36:04.276Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["4",6,1]
[2020-05-24T16:36:04.280Z][QUERY]: COMMIT
[2020-05-24T16:37:33.477Z][QUERY]: START TRANSACTION
[2020-05-24T16:37:33.483Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:37:33.492Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:37:33.492Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:37:33.493Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:37:33.494Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:37:33.495Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:37:33.649Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:37:33.661Z][QUERY]: COMMIT
[2020-05-24T16:37:34.068Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:37:34.420Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:37:34.443Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:37:34.466Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:37:46.784Z][QUERY]: START TRANSACTION
[2020-05-24T16:37:46.793Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["5",1,6]
[2020-05-24T16:37:46.808Z][QUERY]: COMMIT
[2020-05-24T16:37:46.816Z][QUERY]: START TRANSACTION
[2020-05-24T16:37:46.819Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["5",6,1]
[2020-05-24T16:37:46.822Z][QUERY]: COMMIT
[2020-05-24T16:37:51.912Z][QUERY]: START TRANSACTION
[2020-05-24T16:37:51.925Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["6",1,6]
[2020-05-24T16:37:51.941Z][QUERY]: COMMIT
[2020-05-24T16:37:51.977Z][QUERY]: START TRANSACTION
[2020-05-24T16:37:51.979Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["6",6,1]
[2020-05-24T16:37:51.983Z][QUERY]: COMMIT
[2020-05-24T16:47:26.446Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T16:49:30.315Z][QUERY]: START TRANSACTION
[2020-05-24T16:49:30.331Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:49:30.456Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:49:30.459Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:49:30.462Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:49:30.465Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:49:30.468Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:49:30.646Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:49:30.654Z][QUERY]: COMMIT
[2020-05-24T16:49:31.086Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:49:31.525Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:49:31.562Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:49:31.760Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:49:44.091Z][QUERY]: START TRANSACTION
[2020-05-24T16:49:44.099Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ignore",8,6]
[2020-05-24T16:49:44.111Z][QUERY]: COMMIT
[2020-05-24T16:50:41.411Z][QUERY]: START TRANSACTION
[2020-05-24T16:50:41.418Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:50:41.431Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:50:41.432Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:50:41.433Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:50:41.433Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:50:41.434Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:50:42.322Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:50:42.342Z][QUERY]: COMMIT
[2020-05-24T16:50:42.934Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:50:43.397Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:50:43.401Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:50:43.481Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:50:50.560Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T16:50:55.219Z][QUERY]: START TRANSACTION
[2020-05-24T16:50:55.231Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,6]
[2020-05-24T16:50:55.244Z][QUERY]: COMMIT
[2020-05-24T16:50:58.269Z][QUERY]: START TRANSACTION
[2020-05-24T16:50:58.276Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ver",6,2]
[2020-05-24T16:50:58.285Z][QUERY]: COMMIT
[2020-05-24T16:58:47.398Z][QUERY]: START TRANSACTION
[2020-05-24T16:58:47.414Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T16:58:47.444Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:58:47.445Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T16:58:47.446Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:58:47.447Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T16:58:47.448Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T16:58:47.601Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T16:58:47.610Z][QUERY]: COMMIT
[2020-05-24T16:58:48.756Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:58:48.867Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:58:51.346Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:58:51.350Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T16:59:51.084Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T17:00:06.171Z][QUERY]: START TRANSACTION
[2020-05-24T17:00:06.184Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["agan",2,6]
[2020-05-24T17:00:06.217Z][QUERY]: COMMIT
[2020-05-24T17:02:06.954Z][QUERY]: START TRANSACTION
[2020-05-24T17:02:06.959Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:02:06.967Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:02:06.968Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:02:06.969Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:02:06.970Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:02:06.971Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:02:07.101Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:02:07.110Z][QUERY]: COMMIT
[2020-05-24T17:02:07.430Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:07.456Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:07.806Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:08.040Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:17.507Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T17:02:19.443Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T17:02:30.706Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:32.761Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:33.193Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:02:40.110Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T17:02:47.541Z][QUERY]: START TRANSACTION
[2020-05-24T17:02:47.562Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,6]
[2020-05-24T17:02:47.581Z][QUERY]: COMMIT
[2020-05-24T17:04:06.685Z][QUERY]: START TRANSACTION
[2020-05-24T17:04:06.689Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:04:06.697Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:04:06.698Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:04:06.699Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:04:06.699Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:04:06.700Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:04:06.844Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:04:06.854Z][QUERY]: COMMIT
[2020-05-24T17:04:08.351Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:04:08.468Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:04:08.623Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:04:08.624Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:04:15.442Z][QUERY]: START TRANSACTION
[2020-05-24T17:04:15.455Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,6]
[2020-05-24T17:04:15.472Z][QUERY]: COMMIT
[2020-05-24T17:04:15.476Z][QUERY]: START TRANSACTION
[2020-05-24T17:04:15.478Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ver",6,2]
[2020-05-24T17:04:15.481Z][QUERY]: COMMIT
[2020-05-24T17:08:02.550Z][QUERY]: START TRANSACTION
[2020-05-24T17:08:02.556Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:08:02.565Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:08:02.566Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:08:02.567Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:08:02.568Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:08:02.568Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:08:02.725Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:08:02.734Z][QUERY]: COMMIT
[2020-05-24T17:08:03.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:03.464Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:03.536Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:03.578Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:32.363Z][QUERY]: START TRANSACTION
[2020-05-24T17:08:32.373Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,6]
[2020-05-24T17:08:32.402Z][QUERY]: COMMIT
[2020-05-24T17:08:32.407Z][QUERY]: START TRANSACTION
[2020-05-24T17:08:32.410Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ver",6,2]
[2020-05-24T17:08:32.413Z][QUERY]: COMMIT
[2020-05-24T17:08:53.559Z][QUERY]: START TRANSACTION
[2020-05-24T17:08:53.563Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:08:53.567Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:08:53.568Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:08:53.569Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:08:53.570Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:08:53.571Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:08:53.718Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:08:53.727Z][QUERY]: COMMIT
[2020-05-24T17:08:54.006Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:54.106Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:54.320Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:08:54.520Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:09:35.638Z][QUERY]: START TRANSACTION
[2020-05-24T17:09:35.650Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:09:35.661Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:09:35.663Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:09:35.663Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:09:35.664Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:09:35.665Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:09:35.781Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:09:35.790Z][QUERY]: COMMIT
[2020-05-24T17:09:36.179Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:09:36.706Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:09:36.747Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:09:36.762Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:10:04.068Z][QUERY]: START TRANSACTION
[2020-05-24T17:10:04.121Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Lorem tebe v rilo",2,6]
[2020-05-24T17:10:04.503Z][QUERY]: COMMIT
[2020-05-24T17:10:04.606Z][QUERY]: START TRANSACTION
[2020-05-24T17:10:04.618Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["olir v ebet meroL",6,2]
[2020-05-24T17:10:04.633Z][QUERY]: COMMIT
[2020-05-24T17:12:46.738Z][QUERY]: START TRANSACTION
[2020-05-24T17:12:46.743Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:12:46.752Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:12:46.752Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:12:46.753Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:12:46.754Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:12:46.755Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:12:46.919Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:12:46.927Z][QUERY]: COMMIT
[2020-05-24T17:12:49.334Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:12:49.524Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:12:49.634Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:12:49.635Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:13:17.195Z][QUERY]: START TRANSACTION
[2020-05-24T17:13:17.210Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["povtorim",2,6]
[2020-05-24T17:13:17.298Z][QUERY]: COMMIT
[2020-05-24T17:13:17.303Z][QUERY]: START TRANSACTION
[2020-05-24T17:13:17.305Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["mirotvop",6,2]
[2020-05-24T17:13:17.308Z][QUERY]: COMMIT
[2020-05-24T17:13:23.994Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T17:13:28.128Z][QUERY]: START TRANSACTION
[2020-05-24T17:13:28.137Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["7",1,6]
[2020-05-24T17:13:28.153Z][QUERY]: COMMIT
[2020-05-24T17:14:03.343Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","2","45","2"]
[2020-05-24T17:14:14.060Z][QUERY]: START TRANSACTION
[2020-05-24T17:14:14.062Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hello",2,45]
[2020-05-24T17:14:14.069Z][QUERY]: COMMIT
[2020-05-24T17:14:14.073Z][QUERY]: START TRANSACTION
[2020-05-24T17:14:14.075Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["olleH",45,2]
[2020-05-24T17:14:14.079Z][QUERY]: COMMIT
[2020-05-24T17:14:16.892Z][QUERY]: START TRANSACTION
[2020-05-24T17:14:16.900Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["8",1,6]
[2020-05-24T17:14:16.916Z][QUERY]: COMMIT
[2020-05-24T17:14:44.083Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:14:47.258Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:14:48.003Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:14:54.282Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T17:15:07.794Z][QUERY]: START TRANSACTION
[2020-05-24T17:15:07.796Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["9",1,6]
[2020-05-24T17:15:07.807Z][QUERY]: COMMIT
[2020-05-24T17:17:29.086Z][QUERY]: START TRANSACTION
[2020-05-24T17:17:29.092Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:17:29.100Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:17:29.100Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:17:29.101Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:17:29.102Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:17:29.102Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:17:29.250Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:17:29.259Z][QUERY]: COMMIT
[2020-05-24T17:17:29.969Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:17:30.019Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:17:30.166Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:17:30.277Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:17:44.541Z][QUERY]: START TRANSACTION
[2020-05-24T17:17:44.549Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["10",1,6]
[2020-05-24T17:17:44.560Z][QUERY]: COMMIT
[2020-05-24T17:19:23.590Z][QUERY]: START TRANSACTION
[2020-05-24T17:19:23.596Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:19:23.605Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:19:23.606Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:19:23.606Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:19:23.607Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:19:23.608Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:19:23.815Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:19:23.825Z][QUERY]: COMMIT
[2020-05-24T17:19:24.184Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:19:24.281Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:19:24.504Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:19:24.630Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:19:32.120Z][QUERY]: START TRANSACTION
[2020-05-24T17:19:32.131Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["10",1,6]
[2020-05-24T17:19:32.149Z][QUERY]: COMMIT
[2020-05-24T17:20:58.289Z][QUERY]: START TRANSACTION
[2020-05-24T17:20:58.299Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T17:20:58.312Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:20:58.314Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T17:20:58.315Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:20:58.316Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T17:20:58.317Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T17:20:58.506Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T17:20:58.519Z][QUERY]: COMMIT
[2020-05-24T17:20:58.913Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:20:59.138Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:21:00.663Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:21:00.664Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:21:10.411Z][QUERY]: START TRANSACTION
[2020-05-24T17:21:10.421Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["9",1,6]
[2020-05-24T17:21:10.606Z][QUERY]: COMMIT
[2020-05-24T17:22:32.099Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:22:38.572Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:22:38.866Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T17:22:47.350Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T17:22:53.006Z][QUERY]: START TRANSACTION
[2020-05-24T17:22:53.015Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["11",1,6]
[2020-05-24T17:22:53.032Z][QUERY]: COMMIT
[2020-05-24T17:22:53.127Z][QUERY]: START TRANSACTION
[2020-05-24T17:22:53.131Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["11",6,1]
[2020-05-24T17:22:53.135Z][QUERY]: COMMIT
[2020-05-24T17:23:11.642Z][QUERY]: START TRANSACTION
[2020-05-24T17:23:11.645Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,45]
[2020-05-24T17:23:11.661Z][QUERY]: COMMIT
[2020-05-24T17:23:11.712Z][QUERY]: START TRANSACTION
[2020-05-24T17:23:11.715Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ver",45,2]
[2020-05-24T17:23:11.719Z][QUERY]: COMMIT
[2020-05-24T17:23:12.855Z][QUERY]: START TRANSACTION
[2020-05-24T17:23:12.857Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["12",1,6]
[2020-05-24T17:23:12.860Z][QUERY]: COMMIT
[2020-05-24T17:23:12.922Z][QUERY]: START TRANSACTION
[2020-05-24T17:23:12.937Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["12",6,1]
[2020-05-24T17:23:12.943Z][QUERY]: COMMIT
[2020-05-24T18:01:16.319Z][QUERY]: START TRANSACTION
[2020-05-24T18:01:16.327Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:01:16.336Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:01:16.337Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:01:16.338Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:01:16.339Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:01:16.340Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:01:16.508Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:01:16.517Z][QUERY]: COMMIT
[2020-05-24T18:01:16.989Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:01:17.099Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:01:18.682Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:01:18.683Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:02:27.801Z][QUERY]: START TRANSACTION
[2020-05-24T18:02:27.805Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:02:27.813Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:02:27.814Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:02:27.815Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:02:27.815Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:02:27.816Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:02:27.993Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:02:28.004Z][QUERY]: COMMIT
[2020-05-24T18:02:28.428Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:02:28.492Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:02:28.833Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:02:28.909Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:11:57.622Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:11:57.729Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:12:03.077Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:12:03.079Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:12:09.474Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:12:09.476Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:15:32.579Z][QUERY]: START TRANSACTION
[2020-05-24T18:15:32.798Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:15:32.973Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:15:32.974Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:15:32.974Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:15:32.975Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:15:32.975Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:15:33.259Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:15:33.273Z][QUERY]: COMMIT
[2020-05-24T18:15:33.772Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:15:34.066Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:15:35.006Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:15:35.007Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:16:10.116Z][QUERY]: START TRANSACTION
[2020-05-24T18:16:10.125Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:16:10.140Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:16:10.141Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:16:10.142Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:16:10.142Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:16:10.143Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:16:10.288Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:16:10.316Z][QUERY]: COMMIT
[2020-05-24T18:16:10.609Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:16:10.676Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:16:11.052Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:16:11.123Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:23:40.212Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:23:40.304Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:23:44.766Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:23:44.772Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:23:49.140Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:23:49.142Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:24:14.299Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T18:25:19.391Z][QUERY]: START TRANSACTION
[2020-05-24T18:25:19.396Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:25:19.404Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:25:19.404Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:25:19.405Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:25:19.406Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:25:19.407Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:25:19.632Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:25:19.644Z][QUERY]: COMMIT
[2020-05-24T18:25:20.024Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:25:20.145Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:25:20.482Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:25:20.602Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:25:45.972Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T18:26:44.313Z][QUERY]: START TRANSACTION
[2020-05-24T18:26:44.321Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:26:44.346Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:26:44.348Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:26:44.350Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:26:44.352Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:26:44.353Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:26:44.537Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:26:44.547Z][QUERY]: COMMIT
[2020-05-24T18:26:45.064Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:26:45.360Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:26:46.104Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:26:46.106Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:27:01.363Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T18:31:11.458Z][QUERY]: START TRANSACTION
[2020-05-24T18:31:11.465Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:31:11.475Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:31:11.476Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:31:11.477Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:31:11.477Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:31:11.478Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:31:11.642Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:31:11.655Z][QUERY]: COMMIT
[2020-05-24T18:31:12.053Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:12.338Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:12.392Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:12.394Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:44.614Z][QUERY]: START TRANSACTION
[2020-05-24T18:31:44.618Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:31:44.627Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:31:44.628Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:31:44.629Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:31:44.629Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:31:44.630Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:31:44.760Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:31:44.769Z][QUERY]: COMMIT
[2020-05-24T18:31:45.162Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:45.408Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:45.491Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:45.526Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:31:54.894Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T18:35:31.500Z][QUERY]: START TRANSACTION
[2020-05-24T18:35:31.505Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:35:31.514Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:35:31.515Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:35:31.515Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:35:31.516Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:35:31.516Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:35:31.693Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:35:31.707Z][QUERY]: COMMIT
[2020-05-24T18:35:32.208Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:35:32.637Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:35:33.949Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:35:33.951Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:36:02.453Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T18:37:15.398Z][QUERY]: START TRANSACTION
[2020-05-24T18:37:15.414Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",7,6]
[2020-05-24T18:37:15.450Z][QUERY]: COMMIT
[2020-05-24T18:37:55.217Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T18:37:58.357Z][QUERY]: START TRANSACTION
[2020-05-24T18:37:58.367Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["echo",1,45]
[2020-05-24T18:37:58.395Z][QUERY]: COMMIT
[2020-05-24T18:37:58.410Z][QUERY]: START TRANSACTION
[2020-05-24T18:37:58.414Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["echo",45,1]
[2020-05-24T18:37:58.417Z][QUERY]: COMMIT
[2020-05-24T18:39:00.057Z][QUERY]: START TRANSACTION
[2020-05-24T18:39:00.066Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:39:00.078Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:39:00.079Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:39:00.079Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:39:00.080Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:39:00.081Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:39:04.065Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:39:04.073Z][QUERY]: COMMIT
[2020-05-24T18:39:04.347Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:39:04.443Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:39:04.591Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:39:05.110Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:31.899Z][QUERY]: START TRANSACTION
[2020-05-24T18:53:31.905Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:53:31.917Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:53:31.918Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:53:31.919Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:53:31.920Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:53:31.920Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:53:32.114Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:53:32.125Z][QUERY]: COMMIT
[2020-05-24T18:53:34.119Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:34.304Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:34.461Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:34.576Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:52.481Z][QUERY]: START TRANSACTION
[2020-05-24T18:53:52.491Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:53:52.507Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:53:52.508Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:53:52.509Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:53:52.509Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:53:52.510Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:53:52.707Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:53:52.752Z][QUERY]: COMMIT
[2020-05-24T18:53:53.552Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:54.319Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:56.050Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:53:56.051Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:14.498Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:14.704Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:24.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:24.963Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:27.602Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:27.603Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:54:36.736Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T18:56:44.323Z][QUERY]: START TRANSACTION
[2020-05-24T18:56:44.333Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T18:56:44.350Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:56:44.352Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T18:56:44.352Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:56:44.353Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T18:56:44.353Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T18:56:44.890Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T18:56:44.901Z][QUERY]: COMMIT
[2020-05-24T18:56:45.385Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:56:45.855Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:56:46.010Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:56:46.017Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T18:57:33.304Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T19:00:39.028Z][QUERY]: START TRANSACTION
[2020-05-24T19:00:39.035Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:00:39.046Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:00:39.047Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:00:39.048Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:00:39.048Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:00:39.049Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:00:39.178Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:00:39.187Z][QUERY]: COMMIT
[2020-05-24T19:00:39.628Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:00:39.796Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:00:40.596Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:00:40.597Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:02:00.804Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T19:04:06.095Z][QUERY]: START TRANSACTION
[2020-05-24T19:04:06.101Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:04:06.110Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:04:06.111Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:04:06.112Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:04:06.113Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:04:06.113Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:04:06.236Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:04:06.245Z][QUERY]: COMMIT
[2020-05-24T19:04:06.788Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:04:07.218Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:04:07.257Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:04:07.472Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:14:33.494Z][QUERY]: START TRANSACTION
[2020-05-24T19:14:33.504Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:14:33.517Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:14:33.518Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:14:33.519Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:14:33.519Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:14:33.520Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:14:33.841Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:14:33.856Z][QUERY]: COMMIT
[2020-05-24T19:14:34.786Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:14:35.101Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:14:35.799Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:14:35.800Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:18:52.754Z][QUERY]: START TRANSACTION
[2020-05-24T19:18:52.762Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:18:52.778Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:18:52.779Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:18:52.784Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:18:52.785Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:18:52.788Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:18:53.130Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:18:53.144Z][QUERY]: COMMIT
[2020-05-24T19:18:53.814Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:18:54.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:18:55.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:18:55.687Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:29.121Z][QUERY]: START TRANSACTION
[2020-05-24T19:19:29.136Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:19:29.163Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:19:29.165Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:19:29.166Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:19:29.167Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:19:29.169Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:19:29.507Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:19:29.528Z][QUERY]: COMMIT
[2020-05-24T19:19:30.404Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:30.452Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:31.309Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:31.757Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:42.904Z][QUERY]: START TRANSACTION
[2020-05-24T19:19:42.911Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:19:42.924Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:19:42.926Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:19:42.926Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:19:42.927Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:19:42.928Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:19:43.104Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:19:43.119Z][QUERY]: COMMIT
[2020-05-24T19:19:43.655Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:43.826Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:43.935Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:19:44.100Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:20:09.570Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:20:34.091Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T19:30:51.212Z][QUERY]: START TRANSACTION
[2020-05-24T19:30:51.243Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:30:51.283Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:30:51.284Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:30:51.284Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:30:51.285Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:30:51.285Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:30:51.493Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:30:51.501Z][QUERY]: COMMIT
[2020-05-24T19:30:52.262Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:30:52.531Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:30:54.951Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:30:54.952Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:31:50.369Z][QUERY]: START TRANSACTION
[2020-05-24T19:31:50.382Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:31:50.405Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:31:50.406Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:31:50.407Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:31:50.409Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:31:50.410Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:31:50.631Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:31:50.645Z][QUERY]: COMMIT
[2020-05-24T19:31:51.621Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:31:51.832Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:31:52.672Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:31:52.674Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:32:09.512Z][QUERY]: START TRANSACTION
[2020-05-24T19:32:09.516Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:32:09.519Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:32:09.520Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:32:09.521Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:32:09.521Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:32:09.522Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:32:09.590Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:32:09.598Z][QUERY]: COMMIT
[2020-05-24T19:32:09.958Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:32:10.216Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:32:10.309Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:32:10.370Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:33:23.818Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T19:39:47.900Z][QUERY]: START TRANSACTION
[2020-05-24T19:39:47.905Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:39:47.914Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:39:47.914Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:39:47.916Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:39:47.917Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:39:47.918Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:39:48.098Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:39:48.106Z][QUERY]: COMMIT
[2020-05-24T19:39:51.129Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:39:51.327Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:39:51.527Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:39:51.636Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:40:00.777Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:40:42.586Z][QUERY]: START TRANSACTION
[2020-05-24T19:40:42.592Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:40:42.600Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:40:42.601Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:40:42.602Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:40:42.603Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:40:42.604Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:40:42.734Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:40:42.743Z][QUERY]: COMMIT
[2020-05-24T19:40:42.999Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:40:43.560Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:40:43.562Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:40:43.782Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:40:48.663Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:41:26.106Z][QUERY]: START TRANSACTION
[2020-05-24T19:41:26.119Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:41:26.143Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:41:26.144Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:41:26.144Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:41:26.145Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:41:26.146Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:41:26.338Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:41:26.346Z][QUERY]: COMMIT
[2020-05-24T19:41:28.598Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:41:28.777Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:41:28.816Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:41:28.970Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:41:35.761Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:45:43.336Z][QUERY]: START TRANSACTION
[2020-05-24T19:45:43.342Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:45:43.351Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:45:43.352Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:45:43.352Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:45:43.353Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:45:43.354Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:45:43.505Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:45:43.513Z][QUERY]: COMMIT
[2020-05-24T19:45:43.847Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:45:44.421Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:45:44.469Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:45:45.269Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:45:52.733Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:46:34.552Z][QUERY]: START TRANSACTION
[2020-05-24T19:46:34.558Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:46:34.568Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:46:34.569Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:46:34.569Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:46:34.570Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:46:34.571Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:46:34.709Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:46:34.720Z][QUERY]: COMMIT
[2020-05-24T19:46:35.043Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:46:35.111Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:46:35.393Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:46:35.536Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:47:03.552Z][QUERY]: START TRANSACTION
[2020-05-24T19:47:03.556Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:47:03.565Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:47:03.566Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:47:03.567Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:47:03.568Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:47:03.568Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:47:03.725Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:47:03.734Z][QUERY]: COMMIT
[2020-05-24T19:47:04.328Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:47:04.513Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:47:04.774Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:47:04.775Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:47:30.630Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:47:49.720Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T19:48:32.237Z][QUERY]: START TRANSACTION
[2020-05-24T19:48:32.242Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:48:32.252Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:48:32.253Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:48:32.254Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:48:32.255Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:48:32.255Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:48:32.398Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:48:32.407Z][QUERY]: COMMIT
[2020-05-24T19:48:32.861Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:48:33.441Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:48:33.458Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:48:33.491Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:50:15.599Z][QUERY]: START TRANSACTION
[2020-05-24T19:50:15.604Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:50:15.614Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:50:15.614Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:50:15.615Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:50:15.616Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:50:15.617Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:50:15.761Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:50:15.769Z][QUERY]: COMMIT
[2020-05-24T19:50:16.046Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:50:16.160Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:50:16.344Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:50:16.614Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:55:37.184Z][QUERY]: START TRANSACTION
[2020-05-24T19:55:37.190Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:55:37.201Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:55:37.202Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:55:37.203Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:55:37.208Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:55:37.212Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:55:37.371Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:55:37.383Z][QUERY]: COMMIT
[2020-05-24T19:55:38.586Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:55:38.976Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:55:39.181Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:55:39.243Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:56:11.164Z][QUERY]: START TRANSACTION
[2020-05-24T19:56:11.169Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:56:11.177Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:56:11.178Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:56:11.178Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:56:11.179Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:56:11.180Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:56:11.302Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:56:11.313Z][QUERY]: COMMIT
[2020-05-24T19:56:11.879Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:56:12.160Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:56:12.681Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:56:12.682Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:56:31.185Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","8","6","8"]
[2020-05-24T19:56:34.101Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:57:17.177Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T19:58:29.767Z][QUERY]: START TRANSACTION
[2020-05-24T19:58:29.772Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:58:29.780Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:58:29.782Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:58:29.782Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:58:29.784Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:58:29.786Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:58:29.914Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:58:29.927Z][QUERY]: COMMIT
[2020-05-24T19:58:30.273Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:58:30.694Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:58:30.757Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:58:30.759Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:59:21.431Z][QUERY]: START TRANSACTION
[2020-05-24T19:59:21.436Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T19:59:21.450Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:59:21.452Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T19:59:21.452Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:59:21.453Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T19:59:21.453Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T19:59:21.547Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T19:59:21.556Z][QUERY]: COMMIT
[2020-05-24T19:59:21.819Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:59:21.919Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:59:22.121Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:59:22.204Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T19:59:38.682Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T19:59:53.834Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T20:01:47.352Z][QUERY]: START TRANSACTION
[2020-05-24T20:01:47.363Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:01:47.377Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:01:47.378Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:01:47.379Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:01:47.379Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:01:47.381Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:01:47.727Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:01:47.741Z][QUERY]: COMMIT
[2020-05-24T20:01:49.479Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:01:49.666Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:01:50.022Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:01:50.024Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:02:17.174Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T20:02:19.892Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:03:03.240Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T20:03:51.893Z][QUERY]: START TRANSACTION
[2020-05-24T20:03:51.900Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:03:51.917Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:03:51.918Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:03:51.919Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:03:51.920Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:03:51.921Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:03:52.283Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:03:52.297Z][QUERY]: COMMIT
[2020-05-24T20:03:53.149Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:03:53.812Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:03:54.064Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:03:54.076Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:34.567Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:34.576Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:43.098Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:43.100Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:43.600Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:43.601Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:04:58.405Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:08:57.355Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T20:11:53.691Z][QUERY]: START TRANSACTION
[2020-05-24T20:11:53.701Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:11:53.719Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:11:53.720Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:11:53.721Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:11:53.721Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:11:53.722Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:11:53.899Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:11:53.909Z][QUERY]: COMMIT
[2020-05-24T20:11:54.550Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:11:55.550Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:11:56.665Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:11:56.666Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:12:36.951Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:14:27.721Z][QUERY]: START TRANSACTION
[2020-05-24T20:14:27.735Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:14:27.762Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:14:27.763Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:14:27.764Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:14:27.765Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:14:27.766Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:14:27.929Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:14:27.944Z][QUERY]: COMMIT
[2020-05-24T20:14:28.542Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:29.074Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:30.778Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:30.779Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:46.202Z][QUERY]: START TRANSACTION
[2020-05-24T20:14:46.213Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:14:46.234Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:14:46.235Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:14:46.236Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:14:46.236Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:14:46.237Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:14:46.392Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:14:46.401Z][QUERY]: COMMIT
[2020-05-24T20:14:47.984Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:48.188Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:48.440Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:14:48.487Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:15:14.966Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:16:08.304Z][QUERY]: START TRANSACTION
[2020-05-24T20:16:08.321Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:16:08.342Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:16:08.343Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:16:08.344Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:16:08.345Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:16:08.345Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:16:08.610Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:16:08.624Z][QUERY]: COMMIT
[2020-05-24T20:16:09.067Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:16:09.243Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:16:11.257Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:16:11.258Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:16:54.012Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:17:01.630Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:01.639Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Deserunt nam harum libero. Laborum eaque alias. Earum quis voluptates facilis repudiandae quasi. Aut repudiandae cum sit cum. Veritatis optio quis neque tenetur ex consequatur architecto non aspernatur. Distinctio harum quaerat sed aperiam officiis.\n \rQuam ut sint rerum earum ad fugiat perferendis dolorum omnis. Error consequatur voluptas facilis architecto omnis. Placeat quis laudantium qui officia dolor ab iste qui commodi. Sed impedit iusto dolor tenetur sed id. Totam nam excepturi. Consequatur deleniti debitis.\n \rQuibusdam quasi dolorum et a perferendis. Qui non aperiam distinctio excepturi vero ut omnis a est. Nemo aut consequatur mollitia. Nulla deleniti quos eius amet adipisci totam optio officia ullam.",6,7]
[2020-05-24T20:17:01.666Z][QUERY]: COMMIT
[2020-05-24T20:17:06.772Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:06.782Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Eius natus quasi veritatis molestiae qui possimus. Sit accusamus recusandae sint quae quibusdam et occaecati dicta corrupti. Sit laudantium maxime deserunt consequuntur eum facilis. Natus unde aperiam molestias voluptatem voluptas officia modi. Magnam omnis consectetur.",6,7]
[2020-05-24T20:17:06.795Z][QUERY]: COMMIT
[2020-05-24T20:17:12.116Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:12.119Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Harum qui suscipit.\nMolestiae aut sequi cupiditate laborum praesentium vitae voluptatem.",6,7]
[2020-05-24T20:17:12.126Z][QUERY]: COMMIT
[2020-05-24T20:17:19.213Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:19.222Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Cum neque occaecati sit iure dolor eius voluptatem sed aut. Velit harum praesentium autem eos quod itaque. Ex et numquam sunt doloremque quia. Distinctio officiis ullam reprehenderit. Beatae nihil esse et quae sunt.\n \rQuo quia praesentium optio alias quaerat voluptas optio et quis. Et sit voluptatem ullam sit tempore. Quas qui est a quod delectus explicabo ut modi est. Voluptatem sed praesentium distinctio numquam et eum. Mollitia culpa et debitis occaecati similique.\n \rReprehenderit quod illum eum qui. Velit quis unde dolor aut dignissimos voluptas eos. At et hic sunt dolorum velit.",6,7]
[2020-05-24T20:17:19.228Z][QUERY]: COMMIT
[2020-05-24T20:17:27.175Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:27.183Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Omnis sit enim voluptas voluptas laboriosam reiciendis accusamus earum sed.\nAssumenda et molestias asperiores.\nVoluptas sed voluptatum.",6,7]
[2020-05-24T20:17:27.191Z][QUERY]: COMMIT
[2020-05-24T20:17:32.732Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:32.735Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Praesentium unde voluptate nam.",6,7]
[2020-05-24T20:17:32.737Z][QUERY]: COMMIT
[2020-05-24T20:17:41.157Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:41.170Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Distinctio at reiciendis tempora odit error. Est id iure aperiam. Consequatur quibusdam voluptate quia aliquid voluptatem. Rerum assumenda sed nisi aut commodi voluptas.\n \rIllum assumenda exercitationem est rem sapiente eius a eveniet illo. Doloribus dolor nemo. Aut accusamus ducimus id.\n \rDebitis possimus asperiores voluptatibus quia est excepturi non reiciendis laudantium. Et aut natus. Omnis qui itaque perferendis corrupti impedit. A consectetur nam non ea. Ratione quos porro cumque aspernatur placeat. Autem consectetur sit animi exercitationem quo aperiam qui.",6,7]
[2020-05-24T20:17:41.181Z][QUERY]: COMMIT
[2020-05-24T20:17:50.355Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:50.359Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Recusandae est dolore minus dolor id rem quibusdam.",6,7]
[2020-05-24T20:17:50.363Z][QUERY]: COMMIT
[2020-05-24T20:17:56.223Z][QUERY]: START TRANSACTION
[2020-05-24T20:17:56.246Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["eligendi",6,7]
[2020-05-24T20:17:56.266Z][QUERY]: COMMIT
[2020-05-24T20:18:05.352Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:05.355Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Aut saepe blanditiis suscipit ut aut aut.",6,7]
[2020-05-24T20:18:05.357Z][QUERY]: COMMIT
[2020-05-24T20:18:11.279Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:11.282Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed consequatur nesciunt porro dicta et. Eos et aspernatur illum est voluptatem est sunt itaque ut. Accusantium aut itaque et laboriosam ut distinctio esse perferendis. Explicabo dolor blanditiis qui illo.",6,7]
[2020-05-24T20:18:11.285Z][QUERY]: COMMIT
[2020-05-24T20:18:19.573Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:19.575Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["At illum beatae delectus. Aut nostrum saepe. Ut ut ab reprehenderit et quis expedita neque voluptatem. Voluptas odit voluptatem corrupti iure natus incidunt. Voluptatem cupiditate occaecati. Recusandae et et non eaque.",6,7]
[2020-05-24T20:18:19.602Z][QUERY]: COMMIT
[2020-05-24T20:18:27.002Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:27.006Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed in neque. Quos neque sunt et ex rerum.",6,7]
[2020-05-24T20:18:27.011Z][QUERY]: COMMIT
[2020-05-24T20:18:32.772Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:32.781Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quibusdam non sint non et. Sed qui cupiditate reprehenderit possimus omnis tempore unde a. Voluptas tempora veniam et aut minima eum sed sunt dolore. Non fugit animi architecto eius dolores animi.",6,7]
[2020-05-24T20:18:32.791Z][QUERY]: COMMIT
[2020-05-24T20:18:38.531Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:38.541Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Aut fugiat consequatur ut ea commodi ratione. Sunt odio non. Labore a ut sunt sint minus architecto inventore.",6,7]
[2020-05-24T20:18:38.555Z][QUERY]: COMMIT
[2020-05-24T20:18:52.133Z][QUERY]: START TRANSACTION
[2020-05-24T20:18:52.140Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:18:52.150Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:18:52.151Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:18:52.151Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:18:52.152Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:18:52.153Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:18:52.366Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:18:52.378Z][QUERY]: COMMIT
[2020-05-24T20:18:52.698Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:18:52.758Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:18:53.050Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:18:53.336Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:19:25.096Z][QUERY]: START TRANSACTION
[2020-05-24T20:19:25.109Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:19:25.137Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:19:25.138Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:19:25.138Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:19:25.139Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:19:25.140Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:19:25.309Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:19:25.322Z][QUERY]: COMMIT
[2020-05-24T20:19:26.948Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:19:27.128Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:19:27.829Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:19:27.830Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:21:12.324Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:21:30.493Z][QUERY]: START TRANSACTION
[2020-05-24T20:21:30.500Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Placeat dolores ut. Tempore est nesciunt incidunt iste facere ut est ipsum. Distinctio odio amet voluptatibus reprehenderit ducimus nihil.",6,7]
[2020-05-24T20:21:30.513Z][QUERY]: COMMIT
[2020-05-24T20:22:37.306Z][QUERY]: START TRANSACTION
[2020-05-24T20:22:37.310Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Tenetur dolor consequatur quaerat facere placeat voluptatem neque asperiores.\nDistinctio temporibus rem molestiae aliquid a fugiat consequatur nobis.",6,7]
[2020-05-24T20:22:37.355Z][QUERY]: COMMIT
[2020-05-24T20:23:24.645Z][QUERY]: START TRANSACTION
[2020-05-24T20:23:24.648Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Rem laboriosam architecto ut id occaecati maiores. Aperiam libero esse voluptas maxime. Consequatur fuga qui consequatur autem accusamus quisquam dicta voluptates. Ullam explicabo voluptatem odit voluptas iure. Magnam aspernatur consequatur cum ut tempore voluptatem. Odio eum odit.",6,7]
[2020-05-24T20:23:24.658Z][QUERY]: COMMIT
[2020-05-24T20:24:52.875Z][QUERY]: START TRANSACTION
[2020-05-24T20:24:52.897Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Dolore totam necessitatibus quasi. Tempora quia quis deserunt itaque magni id. Sapiente praesentium esse facilis eos qui sapiente non.",6,7]
[2020-05-24T20:24:52.906Z][QUERY]: COMMIT
[2020-05-24T20:25:20.080Z][QUERY]: START TRANSACTION
[2020-05-24T20:25:20.082Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ut officia rerum temporibus quaerat ut vitae rerum.",6,7]
[2020-05-24T20:25:20.091Z][QUERY]: COMMIT
[2020-05-24T20:26:05.091Z][QUERY]: START TRANSACTION
[2020-05-24T20:26:05.139Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:26:05.163Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:26:05.164Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:26:05.164Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:26:05.165Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:26:05.166Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:26:05.411Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:26:05.424Z][QUERY]: COMMIT
[2020-05-24T20:26:06.421Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:26:06.584Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:26:06.812Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:26:06.813Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:28:06.696Z][QUERY]: START TRANSACTION
[2020-05-24T20:28:06.701Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:28:06.710Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:28:06.711Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:28:06.712Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:28:06.713Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:28:06.713Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:28:06.878Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:28:06.886Z][QUERY]: COMMIT
[2020-05-24T20:28:07.203Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:28:07.638Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:28:07.754Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:28:08.085Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:29:06.818Z][QUERY]: START TRANSACTION
[2020-05-24T20:29:06.823Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:29:06.826Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:29:06.827Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:29:06.828Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:29:06.829Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:29:06.829Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:29:06.955Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:29:06.964Z][QUERY]: COMMIT
[2020-05-24T20:29:07.219Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:29:07.616Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:29:07.809Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:29:07.810Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:32:44.821Z][QUERY]: START TRANSACTION
[2020-05-24T20:32:44.826Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:32:44.835Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:32:44.836Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:32:44.837Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:32:44.838Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:32:44.839Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:32:45.001Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:32:45.011Z][QUERY]: COMMIT
[2020-05-24T20:32:46.161Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:32:46.416Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:32:46.466Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:32:46.884Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:34:10.281Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:34:21.893Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T20:35:42.488Z][QUERY]: START TRANSACTION
[2020-05-24T20:35:42.503Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Kepos",2,6]
[2020-05-24T20:35:42.535Z][QUERY]: COMMIT
[2020-05-24T20:35:42.540Z][QUERY]: START TRANSACTION
[2020-05-24T20:35:42.542Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["sopeK",6,2]
[2020-05-24T20:35:42.545Z][QUERY]: COMMIT
[2020-05-24T20:36:14.467Z][QUERY]: START TRANSACTION
[2020-05-24T20:36:14.469Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Consequatur sed omnis aliquam est. Ad facilis est vitae qui voluptatem et vel eos atque.",45,7]
[2020-05-24T20:36:14.477Z][QUERY]: COMMIT
[2020-05-24T20:37:25.409Z][QUERY]: START TRANSACTION
[2020-05-24T20:37:25.411Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Qui assumenda sit ipsam. Minima laboriosam sit. Molestiae delectus voluptatum voluptatum quasi dolorem rem hic.\n \rConsequatur laudantium autem officiis aut. Et et amet nemo. Vel esse quam. Laudantium asperiores fugiat nihil quod sit. Adipisci et nihil est.\n \rDignissimos quaerat nihil ea fugiat iste officia sapiente excepturi. Architecto rerum in aut sapiente quia harum magni et est. Dolores quidem et aut.",45,7]
[2020-05-24T20:37:25.420Z][QUERY]: COMMIT
[2020-05-24T20:37:50.249Z][QUERY]: START TRANSACTION
[2020-05-24T20:37:50.251Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Molestias sit dolor. Sit laborum voluptas tenetur voluptate mollitia ea voluptatem. Iste ipsa quasi.",45,7]
[2020-05-24T20:37:50.258Z][QUERY]: COMMIT
[2020-05-24T20:39:12.141Z][QUERY]: START TRANSACTION
[2020-05-24T20:39:12.143Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Qui totam quo sit numquam. Omnis error delectus. Officia debitis et iste. Ea exercitationem cupiditate vel fugiat eum fuga voluptas sit non. Voluptatem vero explicabo quia cupiditate.",45,7]
[2020-05-24T20:39:12.156Z][QUERY]: COMMIT
[2020-05-24T20:39:32.308Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T20:39:35.865Z][QUERY]: START TRANSACTION
[2020-05-24T20:39:35.873Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["13",1,6]
[2020-05-24T20:39:35.899Z][QUERY]: COMMIT
[2020-05-24T20:39:35.920Z][QUERY]: START TRANSACTION
[2020-05-24T20:39:35.923Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["13",6,1]
[2020-05-24T20:39:35.927Z][QUERY]: COMMIT
[2020-05-24T20:40:10.621Z][QUERY]: START TRANSACTION
[2020-05-24T20:40:10.623Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Similique minus ab iure. Delectus dolore rerum maiores libero dolor. Corporis et qui iusto dolor suscipit est.",45,7]
[2020-05-24T20:40:10.630Z][QUERY]: COMMIT
[2020-05-24T20:41:31.209Z][QUERY]: START TRANSACTION
[2020-05-24T20:41:31.212Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Voluptatum dignissimos est aut hic quis voluptatem porro neque maiores. Ad aut error ad. Et nihil molestiae ducimus consequatur sunt dolorem quibusdam. Dolor et magnam et numquam explicabo quod nihil labore voluptatem.",45,7]
[2020-05-24T20:41:31.240Z][QUERY]: COMMIT
[2020-05-24T20:41:44.539Z][QUERY]: START TRANSACTION
[2020-05-24T20:41:44.541Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Error sunt maxime facere. Ipsum non repellat ut ut ducimus non tenetur nihil. Iure asperiores et veritatis omnis quos exercitationem vel. Velit est maiores sed perspiciatis dolor. Sunt facere rerum. Facere dolorum aut.",45,7]
[2020-05-24T20:41:44.549Z][QUERY]: COMMIT
[2020-05-24T20:42:11.860Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:42:17.522Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:42:59.856Z][QUERY]: START TRANSACTION
[2020-05-24T20:42:59.858Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["sit",6,7]
[2020-05-24T20:42:59.889Z][QUERY]: COMMIT
[2020-05-24T20:43:10.084Z][QUERY]: START TRANSACTION
[2020-05-24T20:43:10.086Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Amet quisquam magni eum quis consectetur. Aut similique ipsam et eveniet sapiente. Blanditiis deserunt possimus molestias optio. Enim quam est optio minima pariatur reiciendis sunt eos exercitationem. Similique tempora maiores in architecto veniam sed nihil qui velit.",45,7]
[2020-05-24T20:43:10.100Z][QUERY]: COMMIT
[2020-05-24T20:44:10.220Z][QUERY]: START TRANSACTION
[2020-05-24T20:44:10.226Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Nisi aut laboriosam est.\nArchitecto quaerat cupiditate eius dolor totam non officia.",6,7]
[2020-05-24T20:44:10.234Z][QUERY]: COMMIT
[2020-05-24T20:44:43.156Z][QUERY]: START TRANSACTION
[2020-05-24T20:44:43.158Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Vel nihil ea quia.",45,7]
[2020-05-24T20:44:43.167Z][QUERY]: COMMIT
[2020-05-24T20:45:08.462Z][QUERY]: START TRANSACTION
[2020-05-24T20:45:08.464Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Porro qui harum est.\nEst blanditiis error perferendis sint impedit dolores eum voluptas.\nAut sapiente aperiam qui est.\nVoluptas dolores debitis.",45,7]
[2020-05-24T20:45:08.471Z][QUERY]: COMMIT
[2020-05-24T20:45:23.498Z][QUERY]: START TRANSACTION
[2020-05-24T20:45:23.500Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Delectus odio neque nemo dolorem quia qui inventore cupiditate ab.\nMaxime expedita eum necessitatibus omnis similique est excepturi doloribus laboriosam.\nEst et laboriosam veritatis ea ipsum cumque.",45,7]
[2020-05-24T20:45:23.513Z][QUERY]: COMMIT
[2020-05-24T20:45:35.794Z][QUERY]: START TRANSACTION
[2020-05-24T20:45:35.795Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["quia",6,7]
[2020-05-24T20:45:35.807Z][QUERY]: COMMIT
[2020-05-24T20:45:40.143Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T20:46:04.334Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:04.383Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:04.536Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:04.696Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:04.785Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:04.927Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:05.104Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:05.202Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:05.351Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:05.534Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:46:12.439Z][QUERY]: START TRANSACTION
[2020-05-24T20:46:12.450Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Et voluptatem beatae deserunt quia.\nQuos voluptatem corporis rerum animi et hic aut nesciunt dolorem.\nCum et consequuntur autem sint porro et eos reprehenderit.\nDelectus quas corrupti doloribus.\nAsperiores error alias eos.",45,7]
[2020-05-24T20:46:12.469Z][QUERY]: COMMIT
[2020-05-24T20:46:17.409Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:17.529Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:17.673Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:17.793Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:17.973Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:18.957Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:19.094Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:19.295Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T20:46:29.948Z][QUERY]: START TRANSACTION
[2020-05-24T20:46:29.950Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quia est nostrum ullam est dolorem eum quis repellat eos. Est ea eveniet incidunt temporibus excepturi ex explicabo sunt. Sunt architecto commodi magni quaerat. Labore quo explicabo rerum illum eos rerum voluptatibus aperiam. Veniam est vel expedita voluptatem sint et aut. Placeat dolor repellat quae quia aliquam pariatur asperiores voluptatem.",45,7]
[2020-05-24T20:46:29.961Z][QUERY]: COMMIT
[2020-05-24T20:47:23.230Z][QUERY]: START TRANSACTION
[2020-05-24T20:47:23.232Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Asperiores illo vel perferendis. Quaerat illo ratione laudantium voluptatem sed corrupti sapiente. Earum eos alias iusto. Perferendis repellat vel est veniam qui earum labore. Ut vel perferendis.",6,7]
[2020-05-24T20:47:23.240Z][QUERY]: COMMIT
[2020-05-24T20:47:35.700Z][QUERY]: START TRANSACTION
[2020-05-24T20:47:35.702Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ad earum nihil facilis molestias. Autem et et enim consequatur aut totam soluta a ea. Temporibus minus libero excepturi nemo hic rem iusto. Qui ut molestias dicta omnis enim qui necessitatibus autem et. Animi necessitatibus exercitationem veritatis temporibus perferendis nobis quisquam similique.\n \rVel occaecati rem et nulla ad beatae. Dicta inventore nihil eos fugit sed. Iste molestiae omnis sapiente laborum. Hic voluptatem incidunt voluptates dolores. Eum nam sint eum sit asperiores. Optio sit est rem animi animi culpa.\n \rVoluptate consequatur vero illum earum iure numquam molestiae. Dignissimos explicabo eius a asperiores vel consectetur sapiente rem. Animi quidem consequuntur. Pariatur praesentium cupiditate minus et aliquam quo sequi. Exercitationem quos fugiat nostrum repellat.",45,7]
[2020-05-24T20:47:35.709Z][QUERY]: COMMIT
[2020-05-24T20:48:02.728Z][QUERY]: START TRANSACTION
[2020-05-24T20:48:02.730Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Aut similique omnis nulla est qui voluptatum.",45,7]
[2020-05-24T20:48:02.737Z][QUERY]: COMMIT
[2020-05-24T20:48:23.284Z][QUERY]: START TRANSACTION
[2020-05-24T20:48:23.286Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quia quisquam officiis quasi et dolorem.\nQui totam ut nam provident qui delectus reiciendis.\nQuas ipsa voluptate provident alias nobis quas.\nEt dolorum soluta totam ab et dignissimos eaque perferendis quisquam.\nArchitecto ut debitis.",6,7]
[2020-05-24T20:48:23.296Z][QUERY]: COMMIT
[2020-05-24T20:48:48.554Z][QUERY]: START TRANSACTION
[2020-05-24T20:48:48.555Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["doloribus",45,7]
[2020-05-24T20:48:48.564Z][QUERY]: COMMIT
[2020-05-24T20:49:17.578Z][QUERY]: START TRANSACTION
[2020-05-24T20:49:17.579Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Officia error ut dolor rerum corporis hic voluptatibus doloremque. Doloremque earum beatae quo eveniet architecto omnis consequatur autem mollitia. Sint voluptatem magni ut explicabo magni sit aut iusto.",6,7]
[2020-05-24T20:49:17.586Z][QUERY]: COMMIT
[2020-05-24T20:49:55.260Z][QUERY]: START TRANSACTION
[2020-05-24T20:49:55.262Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sint deserunt saepe aperiam eius voluptates. Esse nihil consequatur ullam assumenda voluptas ut quo ut. Quaerat est cumque nesciunt in accusamus. Et animi aperiam vero. Quia voluptas earum quia. Hic atque aut occaecati consequatur magni repudiandae ipsum repudiandae.\n \rSimilique cumque alias aspernatur. Totam pariatur aut dolores numquam aut. Saepe natus sint. Quia in suscipit et doloremque incidunt. Aspernatur minima ut adipisci in dolor aut dolorem.\n \rAut minima soluta quibusdam quos. Veniam repudiandae quos omnis facilis nobis. Omnis dolores ullam quam ut alias repellat molestiae eius.",45,7]
[2020-05-24T20:49:55.268Z][QUERY]: COMMIT
[2020-05-24T20:49:57.628Z][QUERY]: START TRANSACTION
[2020-05-24T20:49:57.635Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Similique aut aut rerum quia facere quia et amet. Praesentium consequatur eaque distinctio voluptatem et qui numquam officiis eum. Voluptatem aperiam consequatur minima rerum.",45,7]
[2020-05-24T20:49:57.648Z][QUERY]: COMMIT
[2020-05-24T20:50:08.672Z][QUERY]: START TRANSACTION
[2020-05-24T20:50:08.673Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Autem sapiente occaecati qui libero id eveniet est omnis. Velit asperiores eaque sint ut omnis et magnam nihil fugiat. Quos cumque explicabo temporibus ad doloremque alias harum dolorem nesciunt. Numquam reiciendis est cumque atque quo excepturi magnam dolor corporis. Qui culpa expedita dignissimos. Officiis distinctio iusto.",6,7]
[2020-05-24T20:50:08.680Z][QUERY]: COMMIT
[2020-05-24T20:50:18.104Z][QUERY]: START TRANSACTION
[2020-05-24T20:50:18.110Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sint vitae non rerum provident omnis tenetur et officiis.",45,7]
[2020-05-24T20:50:18.122Z][QUERY]: COMMIT
[2020-05-24T20:50:36.083Z][QUERY]: START TRANSACTION
[2020-05-24T20:50:36.085Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["autem",45,7]
[2020-05-24T20:50:36.093Z][QUERY]: COMMIT
[2020-05-24T20:50:45.509Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:50:53.417Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T20:50:54.240Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T20:50:54.432Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T20:50:54.580Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T20:50:59.390Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T20:51:03.250Z][QUERY]: START TRANSACTION
[2020-05-24T20:51:03.265Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["earum ut accusamus",45,7]
[2020-05-24T20:51:03.276Z][QUERY]: COMMIT
[2020-05-24T20:51:03.826Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:51:11.711Z][QUERY]: START TRANSACTION
[2020-05-24T20:51:11.726Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quo sunt nihil ut.\nVoluptas consequatur officia tempora facilis pariatur in consequatur aut.\nEnim ut reprehenderit nobis amet enim.\nVoluptas repellat est omnis nobis repellat.",6,7]
[2020-05-24T20:51:11.742Z][QUERY]: COMMIT
[2020-05-24T20:51:18.533Z][QUERY]: START TRANSACTION
[2020-05-24T20:51:18.536Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Architecto fugit molestiae magnam accusamus placeat. Dolorem ex distinctio recusandae sed. Vero quasi asperiores natus aut animi sit inventore tempore. Quod suscipit commodi repellendus corporis minus.\n \rEt ab consequatur sequi fuga omnis similique qui corrupti delectus. Autem consequatur facilis. Recusandae qui sunt aliquam fugit. Sint voluptate nobis deserunt.\n \rEt eligendi rerum deserunt et inventore voluptatem at. Blanditiis debitis voluptatem repellat quam earum tenetur amet nemo et. Ut repellat et hic doloribus. Et illo impedit perferendis qui est. Recusandae quam nam totam enim illo. Delectus quia optio voluptates.",6,7]
[2020-05-24T20:51:18.540Z][QUERY]: COMMIT
[2020-05-24T20:51:21.084Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:51:21.266Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","1","45","1"]
[2020-05-24T20:51:34.840Z][QUERY]: START TRANSACTION
[2020-05-24T20:51:34.842Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Rerum voluptatem quo error sunt voluptas minima commodi. Maxime nobis et quia. Ea cum amet eum omnis totam reiciendis asperiores tempore non. Reiciendis fuga quaerat in sint commodi nostrum. Quod commodi ipsa tempore atque est doloremque numquam a. Qui voluptatem minima nisi est facilis non totam.",45,7]
[2020-05-24T20:51:34.850Z][QUERY]: COMMIT
[2020-05-24T20:51:42.302Z][QUERY]: START TRANSACTION
[2020-05-24T20:51:42.307Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quod nisi natus nam est. Facilis minus dolorem iusto quidem sit sed animi totam earum.",6,7]
[2020-05-24T20:51:42.314Z][QUERY]: COMMIT
[2020-05-24T20:52:10.404Z][QUERY]: START TRANSACTION
[2020-05-24T20:52:10.406Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed voluptates neque pariatur voluptas dicta possimus est. Est voluptas libero aut aspernatur vitae cumque nobis animi. Alias et omnis qui quisquam magnam quo voluptatem. Porro harum dolores error.\n \rEa nulla et nisi et quo ut. Ut eum labore neque ut recusandae. Vel deleniti inventore itaque maiores et. Repellendus eos nisi. Suscipit eos ut omnis error iusto quia. Quis ad pariatur quis architecto voluptas magni placeat ea.\n \rAut quo quam officiis minima. Architecto et temporibus aut et autem ut pariatur nemo. Et autem et sapiente aut consequatur adipisci. Officiis atque dicta cum blanditiis est occaecati vel. Consequatur recusandae aut velit est perferendis sed iste blanditiis nihil.",6,7]
[2020-05-24T20:52:10.414Z][QUERY]: COMMIT
[2020-05-24T20:52:23.524Z][QUERY]: START TRANSACTION
[2020-05-24T20:52:23.526Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Odio voluptatem molestias ducimus nisi asperiores voluptas explicabo ipsa rem.\nDolores enim cupiditate quia in eveniet commodi ea non rem.",6,7]
[2020-05-24T20:52:23.533Z][QUERY]: COMMIT
[2020-05-24T20:52:25.059Z][QUERY]: START TRANSACTION
[2020-05-24T20:52:25.062Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["perferendis rerum maiores",45,7]
[2020-05-24T20:52:25.065Z][QUERY]: COMMIT
[2020-05-24T20:52:56.827Z][QUERY]: START TRANSACTION
[2020-05-24T20:52:56.828Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rerum qui consectetur",45,7]
[2020-05-24T20:52:56.836Z][QUERY]: COMMIT
[2020-05-24T20:52:57.326Z][QUERY]: START TRANSACTION
[2020-05-24T20:52:57.333Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Pariatur quaerat veniam aut qui aut necessitatibus non. Ab deserunt reprehenderit rerum labore unde. Perspiciatis dolore officia voluptatem repellendus quaerat. Odit quis ducimus dolorem tempore.\n \rIpsam adipisci ut et vero sequi ex. Qui voluptas sequi exercitationem eaque. Sint reiciendis sit ea deserunt iusto culpa non qui blanditiis.\n \rAut quibusdam tempora blanditiis doloremque omnis voluptatem maiores. Nisi non dolor facere vitae at quia mollitia mollitia quis. Eos vel dolores dolorem sed repudiandae voluptate. Assumenda aperiam illum architecto asperiores similique ad iste fuga.",45,7]
[2020-05-24T20:52:57.335Z][QUERY]: COMMIT
[2020-05-24T20:53:01.704Z][QUERY]: START TRANSACTION
[2020-05-24T20:53:01.710Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ex",45,7]
[2020-05-24T20:53:01.722Z][QUERY]: COMMIT
[2020-05-24T20:53:24.144Z][QUERY]: START TRANSACTION
[2020-05-24T20:53:24.146Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Animi dolor asperiores inventore maiores.",6,7]
[2020-05-24T20:53:24.154Z][QUERY]: COMMIT
[2020-05-24T20:53:24.641Z][QUERY]: START TRANSACTION
[2020-05-24T20:53:24.649Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed velit quis voluptas quis sequi suscipit quia nostrum sit. Et ex minima.",6,7]
[2020-05-24T20:53:24.660Z][QUERY]: COMMIT
[2020-05-24T20:53:43.589Z][QUERY]: START TRANSACTION
[2020-05-24T20:53:43.591Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Ut harum debitis. Fuga magni amet aspernatur facilis possimus. Omnis est soluta repudiandae. Non maiores est ut voluptatem optio dignissimos soluta sapiente. Suscipit omnis vel ad placeat. Possimus dolor quae minima.",6,7]
[2020-05-24T20:53:43.607Z][QUERY]: COMMIT
[2020-05-24T20:53:55.192Z][QUERY]: START TRANSACTION
[2020-05-24T20:53:55.194Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Consequatur neque distinctio magni. Praesentium consequatur ad suscipit adipisci. Consequuntur fugiat perferendis similique occaecati pariatur. Et suscipit similique occaecati. Et dolore non repudiandae dolorum alias. Ullam sunt sunt non natus ducimus.",6,7]
[2020-05-24T20:53:55.201Z][QUERY]: COMMIT
[2020-05-24T20:54:05.525Z][QUERY]: START TRANSACTION
[2020-05-24T20:54:05.527Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["amet temporibus est",45,7]
[2020-05-24T20:54:05.534Z][QUERY]: COMMIT
[2020-05-24T20:54:25.205Z][QUERY]: START TRANSACTION
[2020-05-24T20:54:25.207Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Nulla modi et ut qui tempora et sed. Ab rerum molestiae. Vitae error ut.\n \rEt debitis cupiditate voluptas aliquid est dolor magni. Nihil molestiae iusto consequatur corporis. Impedit deserunt quisquam itaque optio a id.\n \rDoloribus voluptatum fugiat dolorem quia. Et aut nesciunt at incidunt deserunt voluptatem doloribus voluptates. Esse tempora harum provident vel dolorum. Architecto molestiae odio sit non.",6,7]
[2020-05-24T20:54:25.215Z][QUERY]: COMMIT
[2020-05-24T20:54:29.934Z][QUERY]: START TRANSACTION
[2020-05-24T20:54:29.937Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["delectus",45,7]
[2020-05-24T20:54:29.943Z][QUERY]: COMMIT
[2020-05-24T20:54:41.266Z][QUERY]: START TRANSACTION
[2020-05-24T20:54:41.272Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["sed",45,7]
[2020-05-24T20:54:41.293Z][QUERY]: COMMIT
[2020-05-24T20:55:18.697Z][QUERY]: START TRANSACTION
[2020-05-24T20:55:18.699Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Consequatur sunt nesciunt. Rerum et beatae voluptas eius vel cum labore consectetur excepturi. Expedita aperiam exercitationem enim. Velit numquam quaerat occaecati temporibus aut. Animi corrupti praesentium inventore natus atque rem eligendi.",6,7]
[2020-05-24T20:55:18.707Z][QUERY]: COMMIT
[2020-05-24T20:56:03.027Z][QUERY]: START TRANSACTION
[2020-05-24T20:56:03.033Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["recusandae",6,7]
[2020-05-24T20:56:03.042Z][QUERY]: COMMIT
[2020-05-24T20:56:03.100Z][QUERY]: START TRANSACTION
[2020-05-24T20:56:03.102Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["libero quis voluptas",45,7]
[2020-05-24T20:56:03.109Z][QUERY]: COMMIT
[2020-05-24T20:56:25.952Z][QUERY]: START TRANSACTION
[2020-05-24T20:56:25.954Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Provident vitae at iusto deserunt et ab dolor. Molestiae laborum quibusdam provident. Omnis rerum aut optio.\n \rPlaceat odio porro neque tempore. Occaecati reiciendis fugit et. Pariatur ut aut ut.\n \rOdit enim quasi nisi. Vel voluptates ut id quis omnis ut expedita fugit. Nisi velit placeat.",45,7]
[2020-05-24T20:56:25.960Z][QUERY]: COMMIT
[2020-05-24T20:56:26.490Z][QUERY]: START TRANSACTION
[2020-05-24T20:56:26.498Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Temporibus aliquid omnis doloribus rem autem. Et consequuntur doloremque et. Autem exercitationem enim impedit aut iusto et eum reprehenderit odit. Beatae accusamus soluta ut consequuntur.",45,7]
[2020-05-24T20:56:26.507Z][QUERY]: COMMIT
[2020-05-24T20:56:30.245Z][QUERY]: START TRANSACTION
[2020-05-24T20:56:30.249Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quis laborum soluta veritatis provident ratione totam. Similique dolor amet excepturi qui nemo ea. Distinctio laboriosam sed iste error fugiat.\n \rExcepturi non maiores eum excepturi nulla. Eos officia perferendis excepturi dolorum recusandae culpa. Ut ipsa qui sit soluta sit et. Assumenda aliquam omnis velit.\n \rUt illum praesentium minus magni libero. Sequi ullam ipsam corporis ipsum aut rerum. Aliquid enim blanditiis eum voluptas. Fugiat labore unde suscipit.",6,7]
[2020-05-24T20:56:30.258Z][QUERY]: COMMIT
[2020-05-24T20:56:40.977Z][QUERY]: START TRANSACTION
[2020-05-24T20:56:40.979Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["illo iure animi",45,7]
[2020-05-24T20:56:40.986Z][QUERY]: COMMIT
[2020-05-24T20:57:10.446Z][QUERY]: START TRANSACTION
[2020-05-24T20:57:10.448Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Consequatur et omnis.",6,7]
[2020-05-24T20:57:10.457Z][QUERY]: COMMIT
[2020-05-24T20:57:13.044Z][QUERY]: START TRANSACTION
[2020-05-24T20:57:13.050Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["In ipsam numquam necessitatibus voluptas eos. Ipsa perferendis veniam ab non est fugiat quia vitae. Temporibus repellendus cupiditate excepturi vel consectetur inventore nam. Enim non architecto. Id vitae ipsa nostrum quia modi natus velit est facere.\n \rPraesentium et error nulla modi sed placeat pariatur aut eius. Et fugiat repellendus beatae a aut blanditiis. Veritatis ut distinctio iusto voluptatum. Qui vitae dolorem esse sed sit. Distinctio soluta eius nam et ea dolor sint.\n \rDeserunt ea tempora. Aut architecto ut dolores provident excepturi. Reprehenderit quis unde qui quis doloremque aut. Asperiores odio libero enim voluptates rerum aspernatur enim laboriosam suscipit.",45,7]
[2020-05-24T20:57:13.063Z][QUERY]: COMMIT
[2020-05-24T20:57:19.002Z][QUERY]: START TRANSACTION
[2020-05-24T20:57:19.004Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Corporis molestias sed pariatur asperiores recusandae fugit perferendis id.",45,7]
[2020-05-24T20:57:19.006Z][QUERY]: COMMIT
[2020-05-24T20:57:29.387Z][QUERY]: START TRANSACTION
[2020-05-24T20:57:29.389Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Incidunt eos praesentium est quia et velit eum saepe.",45,7]
[2020-05-24T20:57:29.396Z][QUERY]: COMMIT
[2020-05-24T20:57:42.626Z][QUERY]: START TRANSACTION
[2020-05-24T20:57:42.627Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["exercitationem debitis dignissimos",6,7]
[2020-05-24T20:57:42.634Z][QUERY]: COMMIT
[2020-05-24T20:58:06.696Z][QUERY]: START TRANSACTION
[2020-05-24T20:58:06.697Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["laborum expedita ad",6,7]
[2020-05-24T20:58:06.704Z][QUERY]: COMMIT
[2020-05-24T20:58:07.627Z][QUERY]: START TRANSACTION
[2020-05-24T20:58:07.629Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Voluptatem occaecati recusandae voluptas omnis. Non nulla temporibus harum ab est. Itaque sit nemo a esse cum eaque expedita enim ut. Officia consequatur et et et error dolores voluptas laboriosam iste. Et quod illum corporis consectetur eum voluptatem consequatur.",6,7]
[2020-05-24T20:58:07.632Z][QUERY]: COMMIT
[2020-05-24T20:58:35.634Z][QUERY]: START TRANSACTION
[2020-05-24T20:58:35.636Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed explicabo id possimus nesciunt eos vel autem eaque alias. Quae error facilis. Vitae assumenda possimus nulla autem delectus ab quia aut ea.",45,7]
[2020-05-24T20:58:35.669Z][QUERY]: COMMIT
[2020-05-24T20:58:38.187Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T20:58:53.485Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:59:08.091Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T20:59:10.358Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:10.374Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Incidunt cumque eveniet corrupti vel voluptatem debitis repudiandae unde.\nSint voluptate nemo consequatur quia in saepe quas corporis facere.\nUt et dignissimos consequatur.\nSimilique sed voluptatibus voluptas voluptatem ut.",45,7]
[2020-05-24T20:59:10.395Z][QUERY]: COMMIT
[2020-05-24T20:59:12.710Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:12.716Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["eum",45,7]
[2020-05-24T20:59:12.727Z][QUERY]: COMMIT
[2020-05-24T20:59:15.391Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","6","45","6"]
[2020-05-24T20:59:16.651Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:16.654Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Numquam modi perferendis.\nAliquam neque minus rem cupiditate.\nDolores iste deserunt neque recusandae.",6,7]
[2020-05-24T20:59:16.657Z][QUERY]: COMMIT
[2020-05-24T20:59:17.664Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","7","45","7"]
[2020-05-24T20:59:22.746Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:22.749Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quo eum vel placeat dolorum.\nQuo quod nam deserunt voluptas ea ducimus quia.",6,7]
[2020-05-24T20:59:22.754Z][QUERY]: COMMIT
[2020-05-24T20:59:23.825Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:23.831Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hare",7,45]
[2020-05-24T20:59:23.841Z][QUERY]: COMMIT
[2020-05-24T20:59:30.887Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T20:59:35.045Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T20:59:37.636Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","6","45","6"]
[2020-05-24T20:59:43.271Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:43.283Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["enim",45,7]
[2020-05-24T20:59:43.299Z][QUERY]: COMMIT
[2020-05-24T20:59:50.129Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:50.133Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["qui fuga quidem",45,7]
[2020-05-24T20:59:50.136Z][QUERY]: COMMIT
[2020-05-24T20:59:55.925Z][QUERY]: START TRANSACTION
[2020-05-24T20:59:55.929Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T20:59:55.936Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:59:55.937Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T20:59:55.938Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:59:55.939Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T20:59:55.940Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T20:59:56.064Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T20:59:56.073Z][QUERY]: COMMIT
[2020-05-24T20:59:56.563Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:59:56.597Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:59:57.075Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T20:59:57.482Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:02:02.108Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:02:04.649Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:02:05.141Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:02:10.258Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","6","45","6"]
[2020-05-24T21:02:47.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:02:47.958Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:03:01.863Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["44","6","44","6"]
[2020-05-24T21:03:08.125Z][QUERY]: START TRANSACTION
[2020-05-24T21:03:08.160Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hi",6,44]
[2020-05-24T21:03:08.182Z][QUERY]: COMMIT
[2020-05-24T21:03:10.949Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","44","45","44"]
[2020-05-24T21:03:15.385Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","6","45","6"]
[2020-05-24T21:03:18.899Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","44","6","44"]
[2020-05-24T21:03:25.104Z][QUERY]: START TRANSACTION
[2020-05-24T21:03:25.108Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Idi von",44,6]
[2020-05-24T21:03:25.114Z][QUERY]: COMMIT
[2020-05-24T21:03:35.506Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","44","45","44"]
[2020-05-24T21:03:36.322Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["45","6","45","6"]
[2020-05-24T21:03:43.493Z][QUERY]: START TRANSACTION
[2020-05-24T21:03:43.504Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Privet",6,45]
[2020-05-24T21:03:43.529Z][QUERY]: COMMIT
[2020-05-24T21:03:55.082Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","45","6","45"]
[2020-05-24T21:04:01.486Z][QUERY]: START TRANSACTION
[2020-05-24T21:04:01.501Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["da",45,6]
[2020-05-24T21:04:01.522Z][QUERY]: COMMIT
[2020-05-24T21:05:42.602Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:05:42.965Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:05:43.573Z][QUERY]: START TRANSACTION
[2020-05-24T21:05:43.577Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Cheyanne_McKenzie42","https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg"]
[2020-05-24T21:05:43.606Z][FAILED QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Cheyanne_McKenzie42","https://s3.amazonaws.com/uifaces/faces/twitter/denisepires/128.jpg"]
[2020-05-24T21:05:43.606Z][QUERY ERROR]: error: нулевое значение в столбце "type" нарушает ограничение NOT NULL
[2020-05-24T21:05:43.614Z][QUERY]: ROLLBACK
[2020-05-24T21:06:07.130Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:06:08.907Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:06:09.387Z][QUERY]: START TRANSACTION
[2020-05-24T21:06:09.392Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Elliot_Tremblay","https://s3.amazonaws.com/uifaces/faces/twitter/buddhasource/128.jpg"]
[2020-05-24T21:06:09.603Z][FAILED QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Elliot_Tremblay","https://s3.amazonaws.com/uifaces/faces/twitter/buddhasource/128.jpg"]
[2020-05-24T21:06:09.603Z][QUERY ERROR]: error: нулевое значение в столбце "type" нарушает ограничение NOT NULL
[2020-05-24T21:06:09.604Z][QUERY]: ROLLBACK
[2020-05-24T21:06:11.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:06:21.174Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:06:46.638Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:06:47.876Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:06:48.115Z][QUERY]: START TRANSACTION
[2020-05-24T21:06:48.117Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Mary_Steuber44","https://s3.amazonaws.com/uifaces/faces/twitter/necodymiconer/128.jpg"]
[2020-05-24T21:06:48.136Z][FAILED QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Mary_Steuber44","https://s3.amazonaws.com/uifaces/faces/twitter/necodymiconer/128.jpg"]
[2020-05-24T21:06:48.136Z][QUERY ERROR]: error: нулевое значение в столбце "type" нарушает ограничение NOT NULL
[2020-05-24T21:06:48.137Z][QUERY]: ROLLBACK
[2020-05-24T21:06:48.269Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:07:50.691Z][QUERY]: START TRANSACTION
[2020-05-24T21:07:50.702Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T21:07:50.716Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:07:50.717Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:07:50.718Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:07:50.719Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:07:50.719Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T21:07:50.914Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T21:07:50.930Z][QUERY]: COMMIT
[2020-05-24T21:07:51.438Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:07:51.865Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:07:52.141Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:07:52.144Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:07:52.544Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:07:52.545Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:08:10.598Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:08:13.237Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:08:13.712Z][QUERY]: START TRANSACTION
[2020-05-24T21:08:13.722Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Bret_Trantow90","https://s3.amazonaws.com/uifaces/faces/twitter/terpimost/128.jpg","client"]
[2020-05-24T21:08:13.742Z][QUERY]: COMMIT
[2020-05-24T21:08:13.747Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:08:14.019Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:29:50.288Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:29:57.902Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:29:58.507Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:30:37.170Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:30:46.610Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:30:47.617Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:30:56.468Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:30:58.294Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:31:36.069Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:31:36.075Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:32:28.238Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:32:30.392Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:32:32.404Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:32:34.534Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:32:42.231Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:32:42.232Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:07.583Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:08.104Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:16.008Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:18.429Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:19.378Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:19.380Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:21.087Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:34:21.088Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:21.482Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:21.502Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:21.505Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:26.145Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:26.190Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:30.691Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:35:30.693Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:36:18.565Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:36:18.569Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:36:57.189Z][QUERY]: START TRANSACTION
[2020-05-24T21:36:57.204Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T21:36:57.233Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:36:57.234Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:36:57.235Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:36:57.237Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:36:57.238Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T21:36:57.642Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T21:36:57.664Z][QUERY]: COMMIT
[2020-05-24T21:37:01.618Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:01.846Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:02.484Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:02.486Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:25.692Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:25.707Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:50.326Z][QUERY]: START TRANSACTION
[2020-05-24T21:37:50.360Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T21:37:50.373Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:37:50.374Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:37:50.375Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:37:50.377Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:37:50.378Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T21:37:50.929Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T21:37:50.953Z][QUERY]: COMMIT
[2020-05-24T21:37:52.101Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:53.108Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:53.249Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:37:53.544Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:38:10.390Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:38:10.400Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:41:00.542Z][QUERY]: START TRANSACTION
[2020-05-24T21:41:00.547Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T21:41:00.555Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:41:00.556Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:41:00.556Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:41:00.557Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:41:00.558Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T21:41:00.739Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T21:41:00.755Z][QUERY]: COMMIT
[2020-05-24T21:41:01.200Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:41:01.339Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:41:01.808Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:41:01.809Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:41:07.299Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:41:07.300Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:42:32.726Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:42:33.679Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:42:34.474Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:52:24.969Z][QUERY]: START TRANSACTION
[2020-05-24T21:52:25.411Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T21:52:25.856Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:52:25.864Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T21:52:25.865Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:52:25.865Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T21:52:25.874Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T21:52:30.027Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T21:52:30.044Z][QUERY]: COMMIT
[2020-05-24T21:52:31.622Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:52:32.148Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:52:32.280Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:52:32.306Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T21:53:01.685Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:04:33.008Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:33.136Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:04:33.338Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:04:33.339Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:04:33.340Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:04:33.341Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:04:33.342Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:04:35.081Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:04:35.153Z][QUERY]: COMMIT
[2020-05-24T22:04:35.160Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:35.162Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T22:04:35.380Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T22:04:35.689Z][QUERY]: DROP TABLE IF EXISTS "public"."User" CASCADE;
[2020-05-24T22:04:35.692Z][QUERY]: DROP TABLE IF EXISTS "public"."_AudioToEpisode" CASCADE;
[2020-05-24T22:04:35.695Z][QUERY]: DROP TABLE IF EXISTS "public"."_EpisodeToSubtitle" CASCADE;
[2020-05-24T22:04:35.698Z][QUERY]: DROP TABLE IF EXISTS "public"."Show" CASCADE;
[2020-05-24T22:04:35.699Z][QUERY]: DROP TABLE IF EXISTS "public"."Audio" CASCADE;
[2020-05-24T22:04:35.700Z][QUERY]: DROP TABLE IF EXISTS "public"."_EpisodeToVideo" CASCADE;
[2020-05-24T22:04:35.701Z][QUERY]: DROP TABLE IF EXISTS "public"."Subtitle" CASCADE;
[2020-05-24T22:04:35.702Z][QUERY]: DROP TABLE IF EXISTS "public"."_EpisodeToShow" CASCADE;
[2020-05-24T22:04:35.703Z][QUERY]: DROP TABLE IF EXISTS "public"."Video" CASCADE;
[2020-05-24T22:04:35.704Z][QUERY]: DROP TABLE IF EXISTS "public"."Episode" CASCADE;
[2020-05-24T22:04:35.705Z][QUERY]: DROP TABLE IF EXISTS "public"."feedback" CASCADE;
[2020-05-24T22:04:35.706Z][QUERY]: DROP TABLE IF EXISTS "public"."contract" CASCADE;
[2020-05-24T22:04:35.707Z][QUERY]: DROP TABLE IF EXISTS "public"."appendix" CASCADE;
[2020-05-24T22:04:35.708Z][QUERY]: DROP TABLE IF EXISTS "public"."person" CASCADE;
[2020-05-24T22:04:35.709Z][QUERY]: DROP TABLE IF EXISTS "public"."contact" CASCADE;
[2020-05-24T22:04:35.709Z][QUERY]: DROP TABLE IF EXISTS "public"."customer" CASCADE;
[2020-05-24T22:04:35.710Z][QUERY]: DROP TABLE IF EXISTS "public"."country" CASCADE;
[2020-05-24T22:04:35.711Z][QUERY]: DROP TABLE IF EXISTS "public"."city" CASCADE;
[2020-05-24T22:04:35.712Z][QUERY]: DROP TABLE IF EXISTS "public"."address" CASCADE;
[2020-05-24T22:04:35.712Z][QUERY]: DROP TABLE IF EXISTS "public"."contract_template" CASCADE;
[2020-05-24T22:04:35.713Z][QUERY]: DROP TABLE IF EXISTS "public"."project_type" CASCADE;
[2020-05-24T22:04:35.714Z][QUERY]: DROP TABLE IF EXISTS "public"."contract_info" CASCADE;
[2020-05-24T22:04:35.715Z][QUERY]: DROP TABLE IF EXISTS "public"."user" CASCADE;
[2020-05-24T22:04:35.716Z][QUERY]: DROP TABLE IF EXISTS "public"."file" CASCADE;
[2020-05-24T22:04:35.716Z][QUERY]: DROP TABLE IF EXISTS "public"."team" CASCADE;
[2020-05-24T22:04:35.717Z][QUERY]: DROP TABLE IF EXISTS "public"."project" CASCADE;
[2020-05-24T22:04:35.718Z][QUERY]: DROP TABLE IF EXISTS "public"."streak_stage" CASCADE;
[2020-05-24T22:04:35.718Z][QUERY]: DROP TABLE IF EXISTS "public"."permission" CASCADE;
[2020-05-24T22:04:35.719Z][QUERY]: DROP TABLE IF EXISTS "public"."permission_roles_role" CASCADE;
[2020-05-24T22:04:35.720Z][QUERY]: DROP TABLE IF EXISTS "public"."role" CASCADE;
[2020-05-24T22:04:35.721Z][QUERY]: DROP TABLE IF EXISTS "public"."role_users_user" CASCADE;
[2020-05-24T22:04:35.722Z][QUERY]: DROP TABLE IF EXISTS "public"."appendix_pages_page" CASCADE;
[2020-05-24T22:04:35.723Z][QUERY]: DROP TABLE IF EXISTS "public"."page" CASCADE;
[2020-05-24T22:04:35.724Z][QUERY]: DROP TABLE IF EXISTS "public"."person_emails_email" CASCADE;
[2020-05-24T22:04:35.724Z][QUERY]: DROP TABLE IF EXISTS "public"."email" CASCADE;
[2020-05-24T22:04:35.725Z][QUERY]: DROP TABLE IF EXISTS "public"."customer_emails_email" CASCADE;
[2020-05-24T22:04:35.725Z][QUERY]: DROP TABLE IF EXISTS "public"."contract_template_appendixes_appendix" CASCADE;
[2020-05-24T22:04:35.726Z][QUERY]: DROP TABLE IF EXISTS "public"."project_type_projects_project" CASCADE;
[2020-05-24T22:04:35.726Z][QUERY]: DROP TABLE IF EXISTS "public"."contract_info_emails_email" CASCADE;
[2020-05-24T22:04:35.727Z][QUERY]: DROP TABLE IF EXISTS "public"."contract_projects_project" CASCADE;
[2020-05-24T22:04:35.727Z][QUERY]: DROP TABLE IF EXISTS "public"."team_users_user" CASCADE;
[2020-05-24T22:04:35.728Z][QUERY]: DROP TABLE IF EXISTS "public"."project_customers_customer" CASCADE;
[2020-05-24T22:04:35.728Z][QUERY]: DROP TABLE IF EXISTS "public"."project_persons_person" CASCADE;
[2020-05-24T22:04:35.728Z][QUERY]: DROP TABLE IF EXISTS "public"."project_employees_user" CASCADE;
[2020-05-24T22:04:35.729Z][QUERY]: DROP TABLE IF EXISTS "public"."project_representatives_user" CASCADE;
[2020-05-24T22:04:35.729Z][QUERY]: DROP TABLE IF EXISTS "public"."project_project_types_project_type" CASCADE;
[2020-05-24T22:04:35.730Z][QUERY]: DROP TABLE IF EXISTS "public"."user_emails_email" CASCADE;
[2020-05-24T22:04:35.730Z][QUERY]: DROP TABLE IF EXISTS "public"."pipeline_info_entity" CASCADE;
[2020-05-24T22:04:35.732Z][QUERY]: DROP TABLE IF EXISTS "public"."pipeline_info_entity_fields_pipeline_field_alias" CASCADE;
[2020-05-24T22:04:35.732Z][QUERY]: DROP TABLE IF EXISTS "public"."pipeline_field_alias" CASCADE;
[2020-05-24T22:04:35.733Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T22:04:35.733Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T22:04:36.142Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T22:04:36.151Z][QUERY]: COMMIT
[2020-05-24T22:04:36.591Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:36.594Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:04:36.597Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:04:36.598Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:04:36.598Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:04:36.599Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:04:36.600Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:04:36.641Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:04:36.646Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T22:04:36.743Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T22:04:36.811Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:04:36.837Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:04:36.839Z][QUERY]: COMMIT
[2020-05-24T22:04:36.860Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:36.868Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Stanton.Legros46","https://s3.amazonaws.com/uifaces/faces/twitter/sangdth/128.jpg","bot.echo"]
[2020-05-24T22:04:36.879Z][QUERY]: COMMIT
[2020-05-24T22:04:36.881Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:36.882Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kacie_Rutherford10","https://s3.amazonaws.com/uifaces/faces/twitter/muringa/128.jpg","bot.reverse"]
[2020-05-24T22:04:36.884Z][QUERY]: COMMIT
[2020-05-24T22:04:36.887Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:36.888Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Keely_Robel","https://s3.amazonaws.com/uifaces/faces/twitter/umurgdk/128.jpg","bot.ignor"]
[2020-05-24T22:04:36.890Z][QUERY]: COMMIT
[2020-05-24T22:04:36.893Z][QUERY]: START TRANSACTION
[2020-05-24T22:04:36.894Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Tamara.Russel","https://s3.amazonaws.com/uifaces/faces/twitter/vladyn/128.jpg","bot.spam"]
[2020-05-24T22:04:36.897Z][QUERY]: COMMIT
[2020-05-24T22:10:11.548Z][QUERY]: START TRANSACTION
[2020-05-24T22:10:11.554Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:10:11.564Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:10:11.567Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:10:11.568Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:10:11.570Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:10:11.571Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:10:11.651Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:10:11.664Z][QUERY]: COMMIT
[2020-05-24T22:10:12.055Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:10:12.164Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:11:15.539Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","4","6","4"]
[2020-05-24T22:12:10.392Z][QUERY]: START TRANSACTION
[2020-05-24T22:12:10.398Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Voluptatem delectus maxime et facilis. Excepturi explicabo excepturi ipsa consequatur cumque laudantium non.",6,4]
[2020-05-24T22:12:10.412Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Voluptatem delectus maxime et facilis. Excepturi explicabo excepturi ipsa consequatur cumque laudantium non.",6,4]
[2020-05-24T22:12:10.412Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:12:10.415Z][QUERY]: ROLLBACK
[2020-05-24T22:13:51.045Z][QUERY]: START TRANSACTION
[2020-05-24T22:13:51.050Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:13:51.054Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:13:51.055Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:13:51.055Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:13:51.056Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:13:51.057Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:13:51.168Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:13:51.193Z][QUERY]: COMMIT
[2020-05-24T22:13:51.595Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:13:51.726Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:14:21.309Z][QUERY]: START TRANSACTION
[2020-05-24T22:14:21.320Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",4,6]
[2020-05-24T22:14:21.336Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",4,6]
[2020-05-24T22:14:21.336Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_bc096b4e18b1f9508197cd98066"
[2020-05-24T22:14:21.338Z][QUERY]: ROLLBACK
[2020-05-24T22:15:34.146Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:15:34.906Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:15:35.004Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:15:35.111Z][QUERY]: START TRANSACTION
[2020-05-24T22:15:35.113Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Eric_Harber","https://s3.amazonaws.com/uifaces/faces/twitter/thedjpetersen/128.jpg","client"]
[2020-05-24T22:15:35.120Z][QUERY]: COMMIT
[2020-05-24T22:15:35.170Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:19:56.308Z][QUERY]: START TRANSACTION
[2020-05-24T22:19:56.313Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:19:56.316Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:19:56.317Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:19:56.318Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:19:56.318Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:19:56.319Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:19:56.418Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:19:56.430Z][QUERY]: COMMIT
[2020-05-24T22:19:56.764Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:19:56.870Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:20:05.226Z][QUERY]: START TRANSACTION
[2020-05-24T22:20:05.231Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:20:05.234Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:20:05.235Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:20:05.236Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:20:05.236Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:20:05.237Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:20:05.300Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:20:05.314Z][QUERY]: COMMIT
[2020-05-24T22:20:05.694Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:20:05.792Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:21:44.364Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.370Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:21:44.374Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:21:44.375Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:21:44.375Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:21:44.376Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:21:44.377Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:21:44.445Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:21:44.453Z][QUERY]: COMMIT
[2020-05-24T22:21:44.456Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.457Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T22:21:44.460Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T22:21:44.465Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T22:21:44.466Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T22:21:44.494Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T22:21:44.502Z][QUERY]: COMMIT
[2020-05-24T22:21:44.520Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.521Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:21:44.523Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:21:44.524Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:21:44.524Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:21:44.525Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:21:44.525Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:21:44.543Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:21:44.549Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T22:21:44.611Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T22:21:44.662Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:21:44.678Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:21:44.680Z][QUERY]: COMMIT
[2020-05-24T22:21:44.700Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.708Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/bpartridge/128.jpg","bot.echo"]
[2020-05-24T22:21:44.725Z][QUERY]: COMMIT
[2020-05-24T22:21:44.728Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.729Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/bungiwan/128.jpg","bot.reverse"]
[2020-05-24T22:21:44.731Z][QUERY]: COMMIT
[2020-05-24T22:21:44.733Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.734Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/jlsolerdeltoro/128.jpg","bot.ignor"]
[2020-05-24T22:21:44.736Z][QUERY]: COMMIT
[2020-05-24T22:21:44.738Z][QUERY]: START TRANSACTION
[2020-05-24T22:21:44.740Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/snowwrite/128.jpg","bot.spam"]
[2020-05-24T22:21:44.742Z][QUERY]: COMMIT
[2020-05-24T22:23:05.354Z][QUERY]: START TRANSACTION
[2020-05-24T22:23:05.359Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:23:05.362Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:23:05.363Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:23:05.363Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:23:05.364Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:23:05.365Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:23:05.448Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:23:05.458Z][QUERY]: COMMIT
[2020-05-24T22:23:05.729Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:23:05.823Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:23:14.110Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:23:19.182Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:23:19.290Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:23:41.234Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","4","5","4"]
[2020-05-24T22:25:33.621Z][QUERY]: START TRANSACTION
[2020-05-24T22:25:33.632Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["perspiciatis quia et",5,4]
[2020-05-24T22:25:33.647Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["perspiciatis quia et",5,4]
[2020-05-24T22:25:33.647Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:25:33.649Z][QUERY]: ROLLBACK
[2020-05-24T22:25:39.637Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","1","5","1"]
[2020-05-24T22:25:44.656Z][QUERY]: START TRANSACTION
[2020-05-24T22:25:44.679Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["allo",1,5]
[2020-05-24T22:25:44.688Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["allo",1,5]
[2020-05-24T22:25:44.688Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_bc096b4e18b1f9508197cd98066"
[2020-05-24T22:25:44.689Z][QUERY]: ROLLBACK
[2020-05-24T22:25:46.444Z][QUERY]: START TRANSACTION
[2020-05-24T22:25:46.452Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Minima qui dicta reiciendis repudiandae nobis. Ab dicta aliquam eius est eos repellendus accusantium autem nisi. Occaecati et quibusdam asperiores praesentium libero sunt sequi. Quo occaecati perspiciatis veniam. Qui ut illum officia harum temporibus dolor. Tempore est hic ex.",5,4]
[2020-05-24T22:25:46.457Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Minima qui dicta reiciendis repudiandae nobis. Ab dicta aliquam eius est eos repellendus accusantium autem nisi. Occaecati et quibusdam asperiores praesentium libero sunt sequi. Quo occaecati perspiciatis veniam. Qui ut illum officia harum temporibus dolor. Tempore est hic ex.",5,4]
[2020-05-24T22:25:46.457Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:25:46.458Z][QUERY]: ROLLBACK
[2020-05-24T22:26:05.242Z][QUERY]: START TRANSACTION
[2020-05-24T22:26:05.244Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["consequatur tempore doloribus",5,4]
[2020-05-24T22:26:05.251Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["consequatur tempore doloribus",5,4]
[2020-05-24T22:26:05.251Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:26:05.252Z][QUERY]: ROLLBACK
[2020-05-24T22:26:37.850Z][QUERY]: START TRANSACTION
[2020-05-24T22:26:37.852Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Beatae aut natus tempore molestias qui occaecati qui earum. Et ipsa ut ipsum ad est qui. Harum quibusdam in cupiditate id. Illo sit aliquid. Tenetur aut et quis sit aspernatur sed. Inventore quia sint dolorem est hic occaecati voluptatem magni in.",5,4]
[2020-05-24T22:26:37.860Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Beatae aut natus tempore molestias qui occaecati qui earum. Et ipsa ut ipsum ad est qui. Harum quibusdam in cupiditate id. Illo sit aliquid. Tenetur aut et quis sit aspernatur sed. Inventore quia sint dolorem est hic occaecati voluptatem magni in.",5,4]
[2020-05-24T22:26:37.860Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:26:37.861Z][QUERY]: ROLLBACK
[2020-05-24T22:27:18.059Z][QUERY]: START TRANSACTION
[2020-05-24T22:27:18.068Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["delectus",5,4]
[2020-05-24T22:27:18.083Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["delectus",5,4]
[2020-05-24T22:27:18.083Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:27:18.084Z][QUERY]: ROLLBACK
[2020-05-24T22:27:30.938Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:27:30.949Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:27:31.171Z][QUERY]: START TRANSACTION
[2020-05-24T22:27:31.174Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Andy.Walsh99","https://s3.amazonaws.com/uifaces/faces/twitter/herrhaase/128.jpg","client"]
[2020-05-24T22:27:31.183Z][QUERY]: COMMIT
[2020-05-24T22:27:31.215Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:27:56.265Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:27:57.110Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:27:57.313Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:28:14.075Z][QUERY]: START TRANSACTION
[2020-05-24T22:28:14.077Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["in",5,4]
[2020-05-24T22:28:14.086Z][QUERY]: COMMIT
[2020-05-24T22:28:54.016Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:28:55.802Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:28:56.293Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:29:07.081Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:29:08.252Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:29:08.687Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:29:13.616Z][QUERY]: START TRANSACTION
[2020-05-24T22:29:13.618Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sequi molestias ut voluptas impedit ratione accusantium nobis qui. Omnis corrupti aspernatur eum. Odit autem modi numquam eaque porro. Possimus non ut. Soluta in itaque aspernatur officiis. Eaque quas velit ipsa est quam omnis sed dicta et.\n \rIpsum officia odit ea et deleniti. Tenetur corporis harum minima alias. Ut reiciendis iste vitae dolore et culpa velit praesentium. Commodi ipsum consequatur distinctio. Aut pariatur sint aliquid illum sed exercitationem error. Non suscipit eum esse iste eos debitis.\n \rIllum vero quam sit. Ut et non minus in quas odio. Id porro porro sed assumenda sit velit facilis blanditiis odit.",5,4]
[2020-05-24T22:29:13.626Z][QUERY]: COMMIT
[2020-05-24T22:29:55.688Z][QUERY]: START TRANSACTION
[2020-05-24T22:29:55.690Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Totam sunt minima qui alias et ratione quas. Illo et vel distinctio occaecati ut architecto. Rerum est vero ad qui at quis voluptatem occaecati. Omnis dolore voluptatem sit.",5,4]
[2020-05-24T22:29:55.699Z][QUERY]: COMMIT
[2020-05-24T22:31:22.403Z][QUERY]: START TRANSACTION
[2020-05-24T22:31:22.406Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Delectus iste et possimus. Rerum enim cumque consectetur illo labore quia repellat quisquam. Ratione perspiciatis id.\n \rAliquam veritatis dolorem cumque vero ipsa. Aut omnis dolorem ipsam pariatur a. Et fugiat ipsum veritatis aperiam est suscipit. Porro facere dolores consectetur quam.\n \rEst beatae atque in ea unde et et veniam necessitatibus. Dolores aut minus maxime non et. Rerum quia alias nulla id blanditiis at. Non voluptatem voluptatem ut aut impedit natus iste dolores.",5,4]
[2020-05-24T22:31:22.414Z][QUERY]: COMMIT
[2020-05-24T22:32:44.789Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:32:45.821Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:32:46.025Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:32:50.354Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","1","5","1"]
[2020-05-24T22:32:52.806Z][QUERY]: START TRANSACTION
[2020-05-24T22:32:52.811Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["d",1,5]
[2020-05-24T22:32:52.820Z][QUERY]: COMMIT
[2020-05-24T22:32:52.834Z][QUERY]: START TRANSACTION
[2020-05-24T22:32:52.836Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["d",5,1]
[2020-05-24T22:32:52.839Z][QUERY]: COMMIT
[2020-05-24T22:33:01.100Z][QUERY]: START TRANSACTION
[2020-05-24T22:33:01.107Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["quos",5,4]
[2020-05-24T22:33:01.118Z][QUERY]: COMMIT
[2020-05-24T22:33:04.921Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","4","5","4"]
[2020-05-24T22:33:19.809Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:33:19.898Z][QUERY]: START TRANSACTION
[2020-05-24T22:33:19.903Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["voluptas",5,4]
[2020-05-24T22:33:19.913Z][QUERY]: COMMIT
[2020-05-24T22:33:20.736Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:33:20.909Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:34:22.446Z][QUERY]: START TRANSACTION
[2020-05-24T22:34:22.450Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Eos voluptate temporibus rerum omnis. Enim deserunt quaerat sint. Laudantium optio dolorum expedita tempora sunt. Rerum harum minus consequatur ad cum nesciunt. Quia ducimus velit aut ratione omnis est quibusdam.\n \rOmnis quasi nihil minus reiciendis labore. Reprehenderit esse inventore. Qui hic optio. Quibusdam quia veniam ea provident sint aut. Quod vitae ut voluptatum itaque quo dolore eligendi. Iste ut dolor.\n \rIncidunt qui et. Eum omnis quia consequatur. Nostrum ducimus et fugiat non ipsum rerum impedit.",5,4]
[2020-05-24T22:34:22.460Z][QUERY]: COMMIT
[2020-05-24T22:34:31.603Z][QUERY]: START TRANSACTION
[2020-05-24T22:34:31.605Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Tenetur sed illum perferendis facere alias neque eos voluptas aut. Cum assumenda aperiam sint sapiente id eos assumenda hic. Deleniti itaque iste officiis occaecati aut doloribus. Fugiat officia aut exercitationem atque earum.",5,4]
[2020-05-24T22:34:31.622Z][QUERY]: COMMIT
[2020-05-24T22:34:49.485Z][QUERY]: START TRANSACTION
[2020-05-24T22:34:49.486Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Repudiandae officiis similique. Et consectetur unde deserunt necessitatibus voluptatem ut omnis quidem. Voluptas hic vel fuga quidem aliquam. Beatae esse veniam dolorem ea minima neque est aut ad. Eveniet sint amet tempore.\n \rQuo maxime voluptas qui. Enim ut ea consequatur rerum libero sunt. Excepturi maxime ut temporibus. Consequatur nam quia autem a quia. Fugiat sed officia quia ab dolor eos. Rem voluptates debitis.\n \rDeserunt quis asperiores quo quia. Ut ipsa labore ut ut sint saepe odit accusamus fugiat. In eligendi et mollitia. Itaque nulla repudiandae quos voluptatem et ea. Dolores vitae consectetur tempore dolorum odio repellat vero laborum. Perspiciatis quia autem fugit fugit debitis sint dolor delectus corrupti.",5,4]
[2020-05-24T22:34:49.493Z][QUERY]: COMMIT
[2020-05-24T22:35:41.889Z][QUERY]: START TRANSACTION
[2020-05-24T22:35:41.891Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quia et rerum alias sit rerum porro dolores qui. Ipsam accusantium laborum omnis fugiat. Sit non et qui accusamus ut modi asperiores. Ex repellendus debitis perferendis et rerum consequatur recusandae. Asperiores illo harum beatae ea non molestias repudiandae illo. Consequatur perferendis deleniti ipsum similique.\n \rAperiam omnis dolorem repellat voluptatibus illo. Dolores nihil nam maxime non cupiditate omnis debitis a. Suscipit in delectus iure eos qui reiciendis nemo modi.\n \rQuasi distinctio eligendi aut. Ab ea doloribus id officiis temporibus sapiente. Veritatis reprehenderit sit cum quibusdam explicabo aut deserunt nulla sunt. Labore sed culpa omnis explicabo neque eveniet officiis omnis. Doloremque provident delectus porro officiis.",5,4]
[2020-05-24T22:35:41.905Z][QUERY]: COMMIT
[2020-05-24T22:36:19.534Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:19.540Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:36:19.547Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:36:19.548Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:36:19.549Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:36:19.549Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:36:19.550Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:36:20.066Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:36:20.076Z][QUERY]: COMMIT
[2020-05-24T22:36:20.535Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:36:20.635Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:36:41.572Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.576Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:36:41.580Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:36:41.580Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:36:41.581Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:36:41.586Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:36:41.587Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:36:41.650Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:36:41.658Z][QUERY]: COMMIT
[2020-05-24T22:36:41.660Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.661Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T22:36:41.665Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T22:36:41.670Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T22:36:41.671Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T22:36:41.690Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T22:36:41.696Z][QUERY]: COMMIT
[2020-05-24T22:36:41.710Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.712Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:36:41.713Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:36:41.714Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:36:41.714Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:36:41.715Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:36:41.715Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:36:41.730Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:36:41.734Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T22:36:41.807Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T22:36:41.856Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:36:41.866Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:36:41.869Z][QUERY]: COMMIT
[2020-05-24T22:36:41.895Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.904Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["test"]
[2020-05-24T22:36:41.915Z][QUERY]: COMMIT
[2020-05-24T22:36:41.919Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.921Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/martinansty/128.jpg","bot.echo"]
[2020-05-24T22:36:41.924Z][QUERY]: COMMIT
[2020-05-24T22:36:41.927Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.929Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/koridhandy/128.jpg","bot.reverse"]
[2020-05-24T22:36:41.931Z][QUERY]: COMMIT
[2020-05-24T22:36:41.933Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.934Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/cdharrison/128.jpg","bot.ignor"]
[2020-05-24T22:36:41.937Z][QUERY]: COMMIT
[2020-05-24T22:36:41.940Z][QUERY]: START TRANSACTION
[2020-05-24T22:36:41.942Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/stefooo/128.jpg","bot.spam"]
[2020-05-24T22:36:41.944Z][QUERY]: COMMIT
[2020-05-24T22:37:46.153Z][QUERY]: START TRANSACTION
[2020-05-24T22:37:46.158Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:37:46.162Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:37:46.163Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:37:46.163Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:37:46.164Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:37:46.164Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:37:46.301Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:37:46.316Z][QUERY]: COMMIT
[2020-05-24T22:37:47.683Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:37:47.809Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:37:52.697Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:37:52.699Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:15.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:18.896Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:19.402Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:20.529Z][QUERY]: START TRANSACTION
[2020-05-24T22:38:20.539Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jamar.Kling","https://s3.amazonaws.com/uifaces/faces/twitter/silv3rgvn/128.jpg","client"]
[2020-05-24T22:38:20.552Z][QUERY]: COMMIT
[2020-05-24T22:38:20.557Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:52.004Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:53.423Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:53.798Z][QUERY]: START TRANSACTION
[2020-05-24T22:38:53.801Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Makayla.Kuvalis","https://s3.amazonaws.com/uifaces/faces/twitter/dhilipsiva/128.jpg","client"]
[2020-05-24T22:38:53.806Z][QUERY]: COMMIT
[2020-05-24T22:38:53.811Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:38:54.123Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:39:02.039Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","4","6","4"]
[2020-05-24T22:39:16.435Z][QUERY]: START TRANSACTION
[2020-05-24T22:39:16.441Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Quasi doloribus laborum doloremque ratione nulla ut. Repellat velit repudiandae vel omnis officiis rem quo consectetur eligendi. Nulla eum natus modi ullam. Porro voluptas voluptatibus dolorem. Consectetur sint ipsam sed fuga vel velit quibusdam. Facere accusamus enim.",6,4]
[2020-05-24T22:39:16.448Z][QUERY]: COMMIT
[2020-05-24T22:39:21.856Z][QUERY]: START TRANSACTION
[2020-05-24T22:39:21.864Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["pa",4,6]
[2020-05-24T22:39:21.894Z][QUERY]: COMMIT
[2020-05-24T22:39:55.087Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","6","5","6"]
[2020-05-24T22:39:59.296Z][QUERY]: START TRANSACTION
[2020-05-24T22:39:59.298Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Hey",6]
[2020-05-24T22:39:59.314Z][QUERY]: UPDATE "message" SET "updatedAt" = CURRENT_TIMESTAMP WHERE "id" IN ($1) RETURNING "updatedAt" -- PARAMETERS: [4]
[2020-05-24T22:39:59.319Z][QUERY]: COMMIT
[2020-05-24T22:40:12.921Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:40:13.845Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:40:14.086Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:40:22.010Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:40:23.603Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:40:23.604Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:40:37.687Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","6","5","6"]
[2020-05-24T22:40:47.828Z][QUERY]: START TRANSACTION
[2020-05-24T22:40:47.830Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hi",6,5]
[2020-05-24T22:40:47.837Z][QUERY]: COMMIT
[2020-05-24T22:40:51.240Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","5","6","5"]
[2020-05-24T22:40:56.534Z][QUERY]: START TRANSACTION
[2020-05-24T22:40:56.542Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hello",5,6]
[2020-05-24T22:40:56.567Z][QUERY]: COMMIT
[2020-05-24T22:41:29.447Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:41:31.380Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:42:05.999Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.003Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:42:06.006Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:42:06.007Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:42:06.008Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:42:06.008Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:42:06.009Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:42:06.093Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:42:06.102Z][QUERY]: COMMIT
[2020-05-24T22:42:06.104Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.105Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T22:42:06.108Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T22:42:06.112Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T22:42:06.113Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T22:42:06.129Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T22:42:06.133Z][QUERY]: COMMIT
[2020-05-24T22:42:06.143Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.144Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:42:06.145Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:42:06.146Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:42:06.147Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:42:06.147Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:42:06.148Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:42:06.162Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:42:06.166Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T22:42:06.227Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T22:42:06.285Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:42:06.296Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:42:06.299Z][QUERY]: COMMIT
[2020-05-24T22:42:06.328Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.336Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["test"]
[2020-05-24T22:42:06.346Z][QUERY]: COMMIT
[2020-05-24T22:42:06.349Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.351Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/yigitpinarbasi/128.jpg","bot.echo"]
[2020-05-24T22:42:06.354Z][QUERY]: COMMIT
[2020-05-24T22:42:06.356Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.358Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/russoedu/128.jpg","bot.reverse"]
[2020-05-24T22:42:06.360Z][QUERY]: COMMIT
[2020-05-24T22:42:06.362Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.363Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/kinday/128.jpg","bot.ignor"]
[2020-05-24T22:42:06.365Z][QUERY]: COMMIT
[2020-05-24T22:42:06.367Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:06.368Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/rpeezy/128.jpg","bot.spam"]
[2020-05-24T22:42:06.370Z][QUERY]: COMMIT
[2020-05-24T22:42:43.906Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:43.911Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:42:43.916Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:42:43.917Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:42:43.918Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:42:43.918Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:42:43.919Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:42:44.033Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:42:44.042Z][QUERY]: COMMIT
[2020-05-24T22:42:55.886Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:42:55.888Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:42:55.995Z][QUERY]: START TRANSACTION
[2020-05-24T22:42:56.016Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kristian_Fisher","https://s3.amazonaws.com/uifaces/faces/twitter/okcoker/128.jpg","client"]
[2020-05-24T22:42:56.030Z][QUERY]: COMMIT
[2020-05-24T22:42:56.044Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:43:37.317Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:43:37.334Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:43:37.733Z][QUERY]: START TRANSACTION
[2020-05-24T22:43:37.735Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Marianna_Kozey80","https://s3.amazonaws.com/uifaces/faces/twitter/andrewabogado/128.jpg","client"]
[2020-05-24T22:43:37.740Z][QUERY]: COMMIT
[2020-05-24T22:43:37.808Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:43:57.388Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:43:58.577Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:43:58.757Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:44:39.080Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:44:39.985Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:44:40.201Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:44:48.429Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","6","5","6"]
[2020-05-24T22:44:59.929Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","4","5","4"]
[2020-05-24T22:45:00.538Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","6","5","6"]
[2020-05-24T22:45:06.262Z][QUERY]: START TRANSACTION
[2020-05-24T22:45:06.278Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hi",6]
[2020-05-24T22:45:06.308Z][QUERY]: UPDATE "message" SET "updatedAt" = CURRENT_TIMESTAMP WHERE "id" IN ($1) RETURNING "updatedAt" -- PARAMETERS: [2]
[2020-05-24T22:45:06.314Z][QUERY]: COMMIT
[2020-05-24T22:45:11.057Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","4","6","4"]
[2020-05-24T22:45:11.709Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","5","6","5"]
[2020-05-24T22:45:14.698Z][QUERY]: START TRANSACTION
[2020-05-24T22:45:14.701Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, $2) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hi",6]
[2020-05-24T22:45:14.705Z][QUERY]: COMMIT
[2020-05-24T22:45:47.531Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:45:48.749Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:45:48.950Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:45:49.003Z][QUERY]: START TRANSACTION
[2020-05-24T22:45:49.007Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Candace5","https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg","client"]
[2020-05-24T22:45:49.011Z][QUERY]: COMMIT
[2020-05-24T22:45:49.045Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:46:07.975Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T22:46:13.035Z][QUERY]: START TRANSACTION
[2020-05-24T22:46:13.037Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",7,6]
[2020-05-24T22:46:13.049Z][QUERY]: COMMIT
[2020-05-24T22:46:21.409Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:46:22.635Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:46:22.877Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:46:30.330Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["7","6","7","6"]
[2020-05-24T22:46:33.751Z][QUERY]: START TRANSACTION
[2020-05-24T22:46:33.753Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["b",6,7]
[2020-05-24T22:46:33.756Z][QUERY]: COMMIT
[2020-05-24T22:47:12.328Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["7","3","7","3"]
[2020-05-24T22:47:18.140Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","4","6","4"]
[2020-05-24T22:47:21.646Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["7","4","7","4"]
[2020-05-24T22:48:09.794Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","2","6","2"]
[2020-05-24T22:48:13.287Z][QUERY]: START TRANSACTION
[2020-05-24T22:48:13.294Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,6]
[2020-05-24T22:48:13.302Z][QUERY]: COMMIT
[2020-05-24T22:48:13.310Z][QUERY]: START TRANSACTION
[2020-05-24T22:48:13.313Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ver",6,2]
[2020-05-24T22:48:13.316Z][QUERY]: COMMIT
[2020-05-24T22:48:18.879Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","4","6","4"]
[2020-05-24T22:48:55.376Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T22:48:57.544Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","4","6","4"]
[2020-05-24T22:48:58.994Z][QUERY]: START TRANSACTION
[2020-05-24T22:48:59.002Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Consectetur voluptas quidem accusamus et dolores atque deleniti aut laborum.",7,4]
[2020-05-24T22:48:59.025Z][QUERY]: COMMIT
[2020-05-24T22:49:00.726Z][QUERY]: START TRANSACTION
[2020-05-24T22:49:00.750Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["quis distinctio quasi",6,4]
[2020-05-24T22:49:00.757Z][QUERY]: COMMIT
[2020-05-24T22:49:11.624Z][QUERY]: START TRANSACTION
[2020-05-24T22:49:11.626Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["dolore",6,4]
[2020-05-24T22:49:11.633Z][QUERY]: COMMIT
[2020-05-24T22:49:14.587Z][QUERY]: START TRANSACTION
[2020-05-24T22:49:14.592Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Tempore omnis ut molestiae enim.",6,4]
[2020-05-24T22:49:14.599Z][QUERY]: COMMIT
[2020-05-24T22:49:31.314Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","1","6","1"]
[2020-05-24T22:49:34.520Z][QUERY]: START TRANSACTION
[2020-05-24T22:49:34.528Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",1,6]
[2020-05-24T22:49:34.543Z][QUERY]: COMMIT
[2020-05-24T22:49:34.572Z][QUERY]: START TRANSACTION
[2020-05-24T22:49:34.577Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",6,1]
[2020-05-24T22:49:34.581Z][QUERY]: COMMIT
[2020-05-24T22:49:39.090Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","7","6","7"]
[2020-05-24T22:50:09.247Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:50:11.717Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:11.722Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Aut ut debitis ut ullam nam suscipit fugiat consequuntur ut. Reiciendis ullam sint dolores velit fuga pariatur quis iusto non. Rerum dicta necessitatibus qui sapiente error consequatur sint dolor. Eum voluptatem excepturi tempora dolorem id aperiam enim.",6,4]
[2020-05-24T22:50:11.738Z][QUERY]: COMMIT
[2020-05-24T22:50:12.920Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:50:32.141Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.146Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:50:32.150Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:50:32.151Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:50:32.152Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:50:32.153Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:50:32.153Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:50:32.260Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:50:32.269Z][QUERY]: COMMIT
[2020-05-24T22:50:32.272Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.273Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T22:50:32.277Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T22:50:32.282Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T22:50:32.284Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T22:50:32.297Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T22:50:32.302Z][QUERY]: COMMIT
[2020-05-24T22:50:32.312Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.314Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:50:32.315Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:50:32.315Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T22:50:32.316Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:50:32.316Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T22:50:32.317Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:50:32.333Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:50:32.338Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T22:50:32.377Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T22:50:32.402Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:50:32.415Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T22:50:32.421Z][QUERY]: COMMIT
[2020-05-24T22:50:32.479Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.489Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["test"]
[2020-05-24T22:50:32.499Z][QUERY]: COMMIT
[2020-05-24T22:50:32.503Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.504Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/keyuri85/128.jpg","bot.echo"]
[2020-05-24T22:50:32.508Z][QUERY]: COMMIT
[2020-05-24T22:50:32.511Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.513Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/mirfanqureshi/128.jpg","bot.reverse"]
[2020-05-24T22:50:32.515Z][QUERY]: COMMIT
[2020-05-24T22:50:32.517Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.519Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/imcoding/128.jpg","bot.ignor"]
[2020-05-24T22:50:32.521Z][QUERY]: COMMIT
[2020-05-24T22:50:32.523Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:32.524Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/petrangr/128.jpg","bot.spam"]
[2020-05-24T22:50:32.526Z][QUERY]: COMMIT
[2020-05-24T22:50:55.745Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:55.747Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed hic magni sunt illum odio dolore corrupti. Rerum non ad. Ut sapiente expedita ipsa. Inventore quia ad reprehenderit eum a eaque non. Inventore consequatur quidem recusandae consequuntur ut velit et aut et.\n \rEligendi molestias tenetur aspernatur odio voluptas tempora. Nihil voluptatem atque. Qui rerum numquam beatae reprehenderit.\n \rDebitis expedita suscipit sequi vel id. Magnam et eveniet debitis. Explicabo atque dolorum quae ducimus repudiandae aspernatur.",7,4]
[2020-05-24T22:50:55.759Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["Sed hic magni sunt illum odio dolore corrupti. Rerum non ad. Ut sapiente expedita ipsa. Inventore quia ad reprehenderit eum a eaque non. Inventore consequatur quidem recusandae consequuntur ut velit et aut et.\n \rEligendi molestias tenetur aspernatur odio voluptas tempora. Nihil voluptatem atque. Qui rerum numquam beatae reprehenderit.\n \rDebitis expedita suscipit sequi vel id. Magnam et eveniet debitis. Explicabo atque dolorum quae ducimus repudiandae aspernatur.",7,4]
[2020-05-24T22:50:55.759Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:50:55.764Z][QUERY]: ROLLBACK
[2020-05-24T22:50:57.118Z][QUERY]: START TRANSACTION
[2020-05-24T22:50:57.121Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["laudantium",6,4]
[2020-05-24T22:50:57.124Z][FAILED QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["laudantium",6,4]
[2020-05-24T22:50:57.124Z][QUERY ERROR]: error: INSERT или UPDATE в таблице "message" нарушает ограничение внешнего ключа "FK_71fb36906595c602056d936fc13"
[2020-05-24T22:50:57.125Z][QUERY]: ROLLBACK
[2020-05-24T22:51:23.541Z][QUERY]: START TRANSACTION
[2020-05-24T22:51:23.547Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:51:23.555Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:51:23.556Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:51:23.557Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:51:23.557Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:51:23.572Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:51:23.784Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:51:23.799Z][QUERY]: COMMIT
[2020-05-24T22:52:32.632Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:52:32.654Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:52:32.788Z][QUERY]: START TRANSACTION
[2020-05-24T22:52:32.798Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Deshaun.Veum","https://s3.amazonaws.com/uifaces/faces/twitter/lingeswaran/128.jpg","client"]
[2020-05-24T22:52:32.809Z][QUERY]: COMMIT
[2020-05-24T22:52:32.819Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:52:45.076Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:52:45.081Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:52:45.328Z][QUERY]: START TRANSACTION
[2020-05-24T22:52:45.331Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Emilio.Quitzon49","https://s3.amazonaws.com/uifaces/faces/twitter/elbuscainfo/128.jpg","client"]
[2020-05-24T22:52:45.344Z][QUERY]: COMMIT
[2020-05-24T22:52:45.406Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:00.056Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:00.756Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:00.964Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:09.322Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","5","6","5"]
[2020-05-24T22:53:19.289Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","6","5","6"]
[2020-05-24T22:53:23.874Z][QUERY]: START TRANSACTION
[2020-05-24T22:53:23.882Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",6]
[2020-05-24T22:53:23.899Z][QUERY]: UPDATE "message" SET "updatedAt" = CURRENT_TIMESTAMP WHERE "id" IN ($1) RETURNING "updatedAt" -- PARAMETERS: [4]
[2020-05-24T22:53:23.903Z][QUERY]: COMMIT
[2020-05-24T22:53:42.541Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:43.514Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:43.885Z][QUERY]: START TRANSACTION
[2020-05-24T22:53:43.887Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Lyla.Romaguera","https://s3.amazonaws.com/uifaces/faces/twitter/ralph_lam/128.jpg","client"]
[2020-05-24T22:53:43.894Z][QUERY]: COMMIT
[2020-05-24T22:53:44.083Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:44.193Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:53:53.284Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","7","5","7"]
[2020-05-24T22:53:57.524Z][QUERY]: START TRANSACTION
[2020-05-24T22:53:57.526Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",7]
[2020-05-24T22:53:57.531Z][QUERY]: UPDATE "message" SET "updatedAt" = CURRENT_TIMESTAMP WHERE "id" IN ($1) RETURNING "updatedAt" -- PARAMETERS: [5]
[2020-05-24T22:53:57.533Z][QUERY]: COMMIT
[2020-05-24T22:54:02.250Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["7","6","7","6"]
[2020-05-24T22:54:07.522Z][QUERY]: START TRANSACTION
[2020-05-24T22:54:07.524Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, $2) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",7]
[2020-05-24T22:54:07.527Z][QUERY]: COMMIT
[2020-05-24T22:54:10.833Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["7","1","7","1"]
[2020-05-24T22:54:14.278Z][QUERY]: START TRANSACTION
[2020-05-24T22:54:14.279Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",1,7]
[2020-05-24T22:54:14.283Z][QUERY]: COMMIT
[2020-05-24T22:54:14.287Z][QUERY]: START TRANSACTION
[2020-05-24T22:54:14.288Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",7,1]
[2020-05-24T22:54:14.292Z][QUERY]: COMMIT
[2020-05-24T22:54:27.364Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:28.015Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:28.161Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:41.256Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:41.725Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:41.876Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:53.392Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:54.900Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:55.088Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:54:59.536Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["7","5","7","5"]
[2020-05-24T22:55:02.082Z][QUERY]: START TRANSACTION
[2020-05-24T22:55:02.087Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",5,7]
[2020-05-24T22:55:02.091Z][QUERY]: COMMIT
[2020-05-24T22:55:04.556Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","7","5","7"]
[2020-05-24T22:55:07.179Z][QUERY]: START TRANSACTION
[2020-05-24T22:55:07.183Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["b",7,5]
[2020-05-24T22:55:07.191Z][QUERY]: COMMIT
[2020-05-24T22:55:41.634Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","3","5","3"]
[2020-05-24T22:55:44.996Z][QUERY]: START TRANSACTION
[2020-05-24T22:55:45.002Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["jj",3,5]
[2020-05-24T22:55:45.023Z][QUERY]: COMMIT
[2020-05-24T22:55:47.758Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","2","5","2"]
[2020-05-24T22:55:52.407Z][QUERY]: START TRANSACTION
[2020-05-24T22:55:52.415Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["lkj",2,5]
[2020-05-24T22:55:52.427Z][QUERY]: COMMIT
[2020-05-24T22:55:52.437Z][QUERY]: START TRANSACTION
[2020-05-24T22:55:52.445Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["jkl",5,2]
[2020-05-24T22:55:52.453Z][QUERY]: COMMIT
[2020-05-24T22:55:58.314Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","1","5","1"]
[2020-05-24T22:56:01.882Z][QUERY]: START TRANSACTION
[2020-05-24T22:56:01.890Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["j",1,5]
[2020-05-24T22:56:01.904Z][QUERY]: COMMIT
[2020-05-24T22:56:01.914Z][QUERY]: START TRANSACTION
[2020-05-24T22:56:01.922Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["j",5,1]
[2020-05-24T22:56:01.929Z][QUERY]: COMMIT
[2020-05-24T22:57:33.251Z][QUERY]: START TRANSACTION
[2020-05-24T22:57:33.257Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T22:57:33.266Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:57:33.267Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T22:57:33.268Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:57:33.268Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T22:57:33.269Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T22:57:33.410Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T22:57:33.419Z][QUERY]: COMMIT
[2020-05-24T22:57:33.782Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T22:57:33.866Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:00:31.113Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:00:33.103Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:00:33.762Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:00:36.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:04:37.870Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:04:38.600Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:04:44.932Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:04:50.325Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:05:31.066Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.073Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:05:31.081Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:05:31.083Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:05:31.083Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:05:31.084Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:05:31.086Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:05:31.270Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:05:31.289Z][QUERY]: COMMIT
[2020-05-24T23:05:31.294Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.296Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T23:05:31.303Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T23:05:31.316Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T23:05:31.318Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T23:05:31.355Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T23:05:31.365Z][QUERY]: COMMIT
[2020-05-24T23:05:31.414Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.416Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:05:31.417Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:05:31.418Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:05:31.419Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:05:31.420Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:05:31.421Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:05:31.441Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:05:31.447Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T23:05:31.539Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T23:05:31.602Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T23:05:31.622Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T23:05:31.628Z][QUERY]: COMMIT
[2020-05-24T23:05:31.671Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.682Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["test"]
[2020-05-24T23:05:31.700Z][QUERY]: COMMIT
[2020-05-24T23:05:31.705Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.708Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/hjartstrorn/128.jpg","bot.echo"]
[2020-05-24T23:05:31.713Z][QUERY]: COMMIT
[2020-05-24T23:05:31.716Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.718Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/mikaeljorhult/128.jpg","bot.reverse"]
[2020-05-24T23:05:31.721Z][QUERY]: COMMIT
[2020-05-24T23:05:31.723Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.725Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/jeremymouton/128.jpg","bot.ignor"]
[2020-05-24T23:05:31.728Z][QUERY]: COMMIT
[2020-05-24T23:05:31.730Z][QUERY]: START TRANSACTION
[2020-05-24T23:05:31.732Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/h1brd/128.jpg","bot.spam"]
[2020-05-24T23:05:31.735Z][QUERY]: COMMIT
[2020-05-24T23:06:27.474Z][QUERY]: START TRANSACTION
[2020-05-24T23:06:27.491Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:06:27.504Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:06:27.506Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:06:27.507Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:06:27.508Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:06:27.509Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:06:27.719Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:06:27.732Z][QUERY]: COMMIT
[2020-05-24T23:07:07.588Z][QUERY]: START TRANSACTION
[2020-05-24T23:07:07.598Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Arthur.Tromp","https://s3.amazonaws.com/uifaces/faces/twitter/leehambley/128.jpg","client"]
[2020-05-24T23:07:07.617Z][QUERY]: COMMIT
[2020-05-24T23:07:07.691Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:07:21.928Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:07:22.282Z][QUERY]: START TRANSACTION
[2020-05-24T23:07:22.284Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Nikolas42","https://s3.amazonaws.com/uifaces/faces/twitter/johndezember/128.jpg","client"]
[2020-05-24T23:07:22.375Z][QUERY]: COMMIT
[2020-05-24T23:07:43.413Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:07:44.486Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:07:53.759Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:07:55.014Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:08:00.765Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["5","6","5","6"]
[2020-05-24T23:08:05.863Z][QUERY]: START TRANSACTION
[2020-05-24T23:08:05.883Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hey",6,5]
[2020-05-24T23:08:05.895Z][QUERY]: COMMIT
[2020-05-24T23:08:07.785Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["6","5","6","5"]
[2020-05-24T23:08:15.887Z][QUERY]: START TRANSACTION
[2020-05-24T23:08:15.889Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hey",5,6]
[2020-05-24T23:08:15.893Z][QUERY]: COMMIT
[2020-05-24T23:11:05.261Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.268Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:11:05.290Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:11:05.291Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:11:05.292Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:11:05.293Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:11:05.294Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:11:05.408Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:11:05.416Z][QUERY]: COMMIT
[2020-05-24T23:11:05.419Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.420Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-24T23:11:05.423Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-24T23:11:05.429Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-24T23:11:05.431Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-24T23:11:05.461Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-24T23:11:05.470Z][QUERY]: COMMIT
[2020-05-24T23:11:05.498Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.499Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:11:05.501Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:11:05.502Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-24T23:11:05.502Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:11:05.503Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-24T23:11:05.503Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:11:05.519Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:11:05.523Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-24T23:11:05.589Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-24T23:11:05.640Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T23:11:05.650Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-24T23:11:05.653Z][QUERY]: COMMIT
[2020-05-24T23:11:05.676Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.686Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["test"]
[2020-05-24T23:11:05.701Z][QUERY]: COMMIT
[2020-05-24T23:11:05.705Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.707Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/kushsolitary/128.jpg","bot.echo"]
[2020-05-24T23:11:05.710Z][QUERY]: COMMIT
[2020-05-24T23:11:05.712Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.713Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/mgonto/128.jpg","bot.reverse"]
[2020-05-24T23:11:05.715Z][QUERY]: COMMIT
[2020-05-24T23:11:05.716Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.718Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/iqonicd/128.jpg","bot.ignor"]
[2020-05-24T23:11:05.720Z][QUERY]: COMMIT
[2020-05-24T23:11:05.721Z][QUERY]: START TRANSACTION
[2020-05-24T23:11:05.723Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/VMilescu/128.jpg","bot.spam"]
[2020-05-24T23:11:05.725Z][QUERY]: COMMIT
[2020-05-24T23:12:13.407Z][QUERY]: START TRANSACTION
[2020-05-24T23:12:13.416Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:12:13.424Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:12:13.425Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:12:13.426Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:12:13.426Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:12:13.427Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:12:13.549Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:12:13.565Z][QUERY]: COMMIT
[2020-05-24T23:12:26.989Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:12:26.993Z][QUERY]: START TRANSACTION
[2020-05-24T23:12:27.002Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Micheal35","https://s3.amazonaws.com/uifaces/faces/twitter/diesellaws/128.jpg","client"]
[2020-05-24T23:12:27.015Z][QUERY]: COMMIT
[2020-05-24T23:18:57.036Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:18:57.825Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:20:26.731Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:20:27.027Z][QUERY]: START TRANSACTION
[2020-05-24T23:20:27.037Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Madaline_Collier","https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg","client"]
[2020-05-24T23:20:27.058Z][QUERY]: COMMIT
[2020-05-24T23:20:39.192Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:20:40.358Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:22:30.491Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:22:30.668Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:22:31.573Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:22:32.331Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:16.029Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:16.039Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:18.041Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:18.656Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:18.916Z][QUERY]: START TRANSACTION
[2020-05-24T23:27:18.930Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Crystel27","https://s3.amazonaws.com/uifaces/faces/twitter/longlivemyword/128.jpg","client"]
[2020-05-24T23:27:18.952Z][QUERY]: COMMIT
[2020-05-24T23:27:50.409Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:50.642Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:51.875Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:27:52.614Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:30:33.236Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:30:33.634Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:30:34.545Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:30:38.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:32:15.932Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:32:16.058Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:32:19.686Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:32:20.679Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:33:11.466Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:33:12.018Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:33:13.869Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:33:14.308Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:41:44.825Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:41:45.215Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:41:46.508Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:41:47.296Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:41:49.938Z][QUERY]: START TRANSACTION
[2020-05-24T23:41:49.949Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Abdullah.Gerlach48","https://s3.amazonaws.com/uifaces/faces/twitter/lebinoclard/128.jpg","client"]
[2020-05-24T23:41:49.979Z][QUERY]: COMMIT
[2020-05-24T23:41:49.986Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:42:26.258Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:42:26.548Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:42:27.477Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:42:29.166Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:44:33.324Z][QUERY]: START TRANSACTION
[2020-05-24T23:44:33.331Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:44:33.341Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:44:33.342Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:44:33.343Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:44:33.344Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:44:33.344Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:44:33.555Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:44:33.564Z][QUERY]: COMMIT
[2020-05-24T23:44:33.979Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:44:34.702Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:45:32.382Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["8","1","8","1"]
[2020-05-24T23:45:35.539Z][QUERY]: START TRANSACTION
[2020-05-24T23:45:35.564Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",1,8]
[2020-05-24T23:45:35.577Z][QUERY]: COMMIT
[2020-05-24T23:45:35.581Z][QUERY]: START TRANSACTION
[2020-05-24T23:45:35.584Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",8,1]
[2020-05-24T23:45:35.587Z][QUERY]: COMMIT
[2020-05-24T23:45:45.504Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:45:48.852Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:46:30.540Z][QUERY]: START TRANSACTION
[2020-05-24T23:46:30.545Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:46:30.555Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:46:30.557Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:46:30.559Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:46:30.559Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:46:30.560Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:46:30.762Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:46:30.776Z][QUERY]: COMMIT
[2020-05-24T23:46:31.302Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:46:34.298Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:50:04.106Z][QUERY]: START TRANSACTION
[2020-05-24T23:50:04.113Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:50:04.123Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:50:04.124Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:50:04.125Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:50:04.126Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:50:04.127Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:50:04.313Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:50:04.322Z][QUERY]: COMMIT
[2020-05-24T23:50:06.925Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:50:50.708Z][QUERY]: START TRANSACTION
[2020-05-24T23:50:50.712Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:50:50.715Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:50:50.716Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:50:50.717Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:50:50.717Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:50:50.718Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:50:50.808Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:50:50.816Z][QUERY]: COMMIT
[2020-05-24T23:50:51.054Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:50:51.305Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:55:05.808Z][QUERY]: START TRANSACTION
[2020-05-24T23:55:05.813Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:55:05.819Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:55:05.820Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:55:05.821Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:55:05.821Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:55:05.822Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:55:05.923Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:55:05.937Z][QUERY]: COMMIT
[2020-05-24T23:55:06.195Z][QUERY]: START TRANSACTION
[2020-05-24T23:55:06.206Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Norma.Funk","https://s3.amazonaws.com/uifaces/faces/twitter/bobwassermann/128.jpg","client"]
[2020-05-24T23:55:06.260Z][QUERY]: COMMIT
[2020-05-24T23:55:06.290Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:55:06.483Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:56:15.366Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:56:16.943Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:56:35.766Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["9","5","9","5"]
[2020-05-24T23:56:42.368Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:56:42.997Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:56:48.805Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:56:50.617Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:58:20.353Z][QUERY]: START TRANSACTION
[2020-05-24T23:58:20.358Z][QUERY]: SELECT * FROM current_schema()
[2020-05-24T23:58:20.365Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:58:20.367Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-24T23:58:20.367Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:58:20.368Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-24T23:58:20.369Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-24T23:58:20.478Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-24T23:58:20.487Z][QUERY]: COMMIT
[2020-05-24T23:58:20.747Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:58:20.819Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:58:35.472Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:58:36.624Z][QUERY]: START TRANSACTION
[2020-05-24T23:58:36.636Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Burley54","https://s3.amazonaws.com/uifaces/faces/twitter/tur8le/128.jpg","client"]
[2020-05-24T23:58:36.649Z][QUERY]: COMMIT
[2020-05-24T23:58:36.653Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-24T23:58:36.659Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:00:02.676Z][QUERY]: START TRANSACTION
[2020-05-25T00:00:02.681Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:00:02.688Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:00:02.689Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:00:02.690Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:00:02.691Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:00:02.691Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:00:02.832Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:00:02.841Z][QUERY]: COMMIT
[2020-05-25T00:00:03.332Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:00:03.683Z][QUERY]: START TRANSACTION
[2020-05-25T00:00:03.692Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Efrain.Pfeffer","https://s3.amazonaws.com/uifaces/faces/twitter/hai_ninh_nguyen/128.jpg","client"]
[2020-05-25T00:00:03.713Z][QUERY]: COMMIT
[2020-05-25T00:00:03.720Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:07:18.931Z][QUERY]: START TRANSACTION
[2020-05-25T00:07:18.936Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:07:18.943Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:07:18.944Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:07:18.945Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:07:18.946Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:07:18.947Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:07:19.085Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:07:19.093Z][QUERY]: COMMIT
[2020-05-25T00:07:19.599Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:07:20.046Z][QUERY]: START TRANSACTION
[2020-05-25T00:07:20.056Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Bernard.Aufderhar85","https://s3.amazonaws.com/uifaces/faces/twitter/n_tassone/128.jpg","client"]
[2020-05-25T00:07:20.093Z][QUERY]: COMMIT
[2020-05-25T00:07:20.251Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:10:53.560Z][QUERY]: START TRANSACTION
[2020-05-25T00:10:53.564Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:10:53.570Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:10:53.571Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:10:53.572Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:10:53.573Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:10:53.573Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:10:53.709Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:10:53.718Z][QUERY]: COMMIT
[2020-05-25T00:10:54.559Z][QUERY]: START TRANSACTION
[2020-05-25T00:10:54.669Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Amiya.Bogisich55","https://s3.amazonaws.com/uifaces/faces/twitter/angelcreative/128.jpg","client"]
[2020-05-25T00:10:54.711Z][QUERY]: COMMIT
[2020-05-25T00:10:54.748Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:10:55.150Z][QUERY]: START TRANSACTION
[2020-05-25T00:10:55.152Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ellsworth64","https://s3.amazonaws.com/uifaces/faces/twitter/dmitriychuta/128.jpg","client"]
[2020-05-25T00:10:55.168Z][QUERY]: COMMIT
[2020-05-25T00:10:55.180Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:11:36.485Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:11:38.815Z][QUERY]: START TRANSACTION
[2020-05-25T00:11:38.820Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Elna.Murazik18","https://s3.amazonaws.com/uifaces/faces/twitter/popey/128.jpg","client"]
[2020-05-25T00:11:38.837Z][QUERY]: COMMIT
[2020-05-25T00:11:38.841Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:12:36.049Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:12:37.063Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:12:41.413Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["9","15","9","15"]
[2020-05-25T00:12:44.606Z][QUERY]: START TRANSACTION
[2020-05-25T00:12:44.619Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",15,9]
[2020-05-25T00:12:44.655Z][QUERY]: COMMIT
[2020-05-25T00:12:46.155Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["15","9","15","9"]
[2020-05-25T00:13:20.963Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:13:22.097Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:13:31.570Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:13:32.989Z][QUERY]: START TRANSACTION
[2020-05-25T00:13:32.992Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Sven.Stiedemann64","https://s3.amazonaws.com/uifaces/faces/twitter/ccinojasso1/128.jpg","client"]
[2020-05-25T00:13:33.006Z][QUERY]: COMMIT
[2020-05-25T00:13:33.064Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:15:37.678Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:15:37.693Z][QUERY]: START TRANSACTION
[2020-05-25T00:15:37.715Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Gabe2","https://s3.amazonaws.com/uifaces/faces/twitter/malgordon/128.jpg","client"]
[2020-05-25T00:15:37.754Z][QUERY]: COMMIT
[2020-05-25T00:15:37.769Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:15:38.811Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:15:41.241Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:17:19.582Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:17:22.414Z][QUERY]: START TRANSACTION
[2020-05-25T00:17:22.421Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Marjorie_Luettgen","https://s3.amazonaws.com/uifaces/faces/twitter/wintopia/128.jpg","client"]
[2020-05-25T00:17:22.441Z][QUERY]: COMMIT
[2020-05-25T00:17:22.447Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:17:52.622Z][QUERY]: START TRANSACTION
[2020-05-25T00:17:52.628Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Dillan99","https://s3.amazonaws.com/uifaces/faces/twitter/abovefunction/128.jpg","client"]
[2020-05-25T00:17:52.663Z][QUERY]: COMMIT
[2020-05-25T00:17:52.674Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:17:54.670Z][QUERY]: START TRANSACTION
[2020-05-25T00:17:54.701Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Devyn.Lynch","https://s3.amazonaws.com/uifaces/faces/twitter/ismail_biltagi/128.jpg","client"]
[2020-05-25T00:17:54.705Z][QUERY]: COMMIT
[2020-05-25T00:17:55.125Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:18:14.525Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:18:15.836Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:18:24.158Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:18:25.556Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:22.570Z][QUERY]: START TRANSACTION
[2020-05-25T00:21:22.576Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:21:22.585Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:21:22.586Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:21:22.586Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:21:22.587Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:21:22.588Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:21:22.748Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:21:22.756Z][QUERY]: COMMIT
[2020-05-25T00:21:23.060Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:23.473Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:23.506Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:23.603Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:44.228Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:46.607Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:46.787Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:55.619Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:56.761Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:21:57.233Z][QUERY]: START TRANSACTION
[2020-05-25T00:21:57.243Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Trudie.Grady","https://s3.amazonaws.com/uifaces/faces/twitter/gauravjassal/128.jpg","client"]
[2020-05-25T00:21:57.262Z][QUERY]: COMMIT
[2020-05-25T00:21:57.276Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:22:31.883Z][QUERY]: START TRANSACTION
[2020-05-25T00:22:31.887Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Simeon58","https://s3.amazonaws.com/uifaces/faces/twitter/jnmnrd/128.jpg","client"]
[2020-05-25T00:22:31.913Z][QUERY]: COMMIT
[2020-05-25T00:22:31.924Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:22:34.188Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:22:34.471Z][QUERY]: START TRANSACTION
[2020-05-25T00:22:34.474Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jordi.Wiegand","https://s3.amazonaws.com/uifaces/faces/twitter/tgerken/128.jpg","client"]
[2020-05-25T00:22:34.531Z][QUERY]: COMMIT
[2020-05-25T00:22:34.903Z][QUERY]: START TRANSACTION
[2020-05-25T00:22:34.909Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Johnson_Ferry","https://s3.amazonaws.com/uifaces/faces/twitter/charlesrpratt/128.jpg","client"]
[2020-05-25T00:22:34.918Z][QUERY]: COMMIT
[2020-05-25T00:22:34.924Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:22:50.379Z][QUERY]: START TRANSACTION
[2020-05-25T00:22:50.381Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ashlynn_Will","https://s3.amazonaws.com/uifaces/faces/twitter/bryan_topham/128.jpg","client"]
[2020-05-25T00:22:50.390Z][QUERY]: COMMIT
[2020-05-25T00:22:50.401Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:22:51.459Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:22:51.846Z][QUERY]: START TRANSACTION
[2020-05-25T00:22:51.849Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ray.Bernier","https://s3.amazonaws.com/uifaces/faces/twitter/abdulhyeuk/128.jpg","client"]
[2020-05-25T00:22:51.854Z][QUERY]: COMMIT
[2020-05-25T00:22:51.922Z][QUERY]: START TRANSACTION
[2020-05-25T00:22:51.924Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Chelsie.Lowe46","https://s3.amazonaws.com/uifaces/faces/twitter/reideiredale/128.jpg","client"]
[2020-05-25T00:22:51.966Z][QUERY]: COMMIT
[2020-05-25T00:22:51.988Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:23:04.846Z][QUERY]: START TRANSACTION
[2020-05-25T00:23:04.848Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Stanley.Legros37","https://s3.amazonaws.com/uifaces/faces/twitter/posterjob/128.jpg","client"]
[2020-05-25T00:23:04.880Z][QUERY]: COMMIT
[2020-05-25T00:23:04.885Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:23:05.933Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:23:06.372Z][QUERY]: START TRANSACTION
[2020-05-25T00:23:06.375Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Drew46","https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg","client"]
[2020-05-25T00:23:06.398Z][QUERY]: COMMIT
[2020-05-25T00:23:06.438Z][QUERY]: START TRANSACTION
[2020-05-25T00:23:06.444Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Mackenzie_Russel33","https://s3.amazonaws.com/uifaces/faces/twitter/soyjavi/128.jpg","client"]
[2020-05-25T00:23:06.464Z][QUERY]: COMMIT
[2020-05-25T00:23:06.477Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:00.560Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:00.568Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:24:00.580Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:24:00.581Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:24:00.582Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:24:00.583Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:24:00.584Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:24:00.768Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:24:00.777Z][QUERY]: COMMIT
[2020-05-25T00:24:01.096Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:01.294Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:01.307Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jaiden.Wilkinson","https://s3.amazonaws.com/uifaces/faces/twitter/j_drake_/128.jpg","client"]
[2020-05-25T00:24:01.320Z][QUERY]: COMMIT
[2020-05-25T00:24:01.326Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:02.157Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:02.160Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:02.195Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Eddie.Beer","https://s3.amazonaws.com/uifaces/faces/twitter/kurafire/128.jpg","client"]
[2020-05-25T00:24:02.198Z][QUERY]: COMMIT
[2020-05-25T00:24:02.410Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:02.413Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Joshuah69","https://s3.amazonaws.com/uifaces/faces/twitter/surgeonist/128.jpg","client"]
[2020-05-25T00:24:02.459Z][QUERY]: COMMIT
[2020-05-25T00:24:02.467Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:25.617Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:25.621Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jimmie_Green","https://s3.amazonaws.com/uifaces/faces/twitter/knilob/128.jpg","client"]
[2020-05-25T00:24:25.651Z][QUERY]: COMMIT
[2020-05-25T00:24:25.687Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:27.280Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:27.509Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:27.511Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kennedy.Shields35","https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg","client"]
[2020-05-25T00:24:27.525Z][QUERY]: COMMIT
[2020-05-25T00:24:27.530Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:43.869Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:45.224Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:45.607Z][QUERY]: START TRANSACTION
[2020-05-25T00:24:45.609Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Bonnie_Heidenreich3","https://s3.amazonaws.com/uifaces/faces/twitter/mfacchinello/128.jpg","client"]
[2020-05-25T00:24:45.616Z][QUERY]: COMMIT
[2020-05-25T00:24:45.621Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:53.731Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:55.210Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:24:55.211Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:25:57.384Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:26:07.242Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:26:08.529Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:26:08.894Z][QUERY]: START TRANSACTION
[2020-05-25T00:26:08.896Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kim.Reynolds","https://s3.amazonaws.com/uifaces/faces/twitter/sdidonato/128.jpg","client"]
[2020-05-25T00:26:08.932Z][QUERY]: COMMIT
[2020-05-25T00:26:08.943Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:26:23.723Z][QUERY]: START TRANSACTION
[2020-05-25T00:26:23.726Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Dedric57","https://s3.amazonaws.com/uifaces/faces/twitter/pyronite/128.jpg","client"]
[2020-05-25T00:26:23.750Z][QUERY]: COMMIT
[2020-05-25T00:26:23.759Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:26:23.906Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:26:49.842Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["38","36","38","36"]
[2020-05-25T00:26:53.117Z][QUERY]: START TRANSACTION
[2020-05-25T00:26:53.132Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["hi",36,38]
[2020-05-25T00:26:53.156Z][QUERY]: COMMIT
[2020-05-25T00:26:55.262Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["36","38","36","38"]
[2020-05-25T00:30:31.887Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:30:31.895Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:30:32.841Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:30:32.843Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:30:34.211Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:30:34.212Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:10.268Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:10.276Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:11.377Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:11.378Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:11.768Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:11.769Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:35.707Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:35.738Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:37.046Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:37.047Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:37.145Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:31:37.147Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:32:51.310Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:32:52.156Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:32:53.388Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:32:53.878Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:32:57.151Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:32:57.152Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:26.239Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:26.764Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:29.019Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:29.020Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:39.857Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:39.859Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:40.149Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:41.881Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:41.882Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:33:48.069Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["36","38","36","38"]
[2020-05-25T00:33:52.173Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["38","36","38","36"]
[2020-05-25T00:35:15.140Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:35:22.112Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:35:23.471Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:35:23.775Z][QUERY]: START TRANSACTION
[2020-05-25T00:35:23.788Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Erich47","https://s3.amazonaws.com/uifaces/faces/twitter/2fockus/128.jpg","client"]
[2020-05-25T00:35:23.809Z][QUERY]: COMMIT
[2020-05-25T00:35:23.813Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:35:58.359Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["39","1","39","1"]
[2020-05-25T00:36:02.319Z][QUERY]: START TRANSACTION
[2020-05-25T00:36:02.322Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",1,39]
[2020-05-25T00:36:02.328Z][QUERY]: COMMIT
[2020-05-25T00:36:02.337Z][QUERY]: START TRANSACTION
[2020-05-25T00:36:02.339Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["e",39,1]
[2020-05-25T00:36:02.342Z][QUERY]: COMMIT
[2020-05-25T00:36:14.387Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["39","2","39","2"]
[2020-05-25T00:36:20.105Z][QUERY]: START TRANSACTION
[2020-05-25T00:36:20.111Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rew",2,39]
[2020-05-25T00:36:20.128Z][QUERY]: COMMIT
[2020-05-25T00:36:20.145Z][QUERY]: START TRANSACTION
[2020-05-25T00:36:20.152Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["wer",39,2]
[2020-05-25T00:36:20.159Z][QUERY]: COMMIT
[2020-05-25T00:37:09.337Z][QUERY]: START TRANSACTION
[2020-05-25T00:37:09.343Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Lacey34","https://s3.amazonaws.com/uifaces/faces/twitter/karolkrakowiak_/128.jpg","client"]
[2020-05-25T00:37:09.382Z][QUERY]: COMMIT
[2020-05-25T00:37:09.396Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:37:09.484Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:37:43.088Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["36","4","36","4"]
[2020-05-25T00:37:46.237Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["36","40","36","40"]
[2020-05-25T00:37:49.546Z][QUERY]: START TRANSACTION
[2020-05-25T00:37:49.549Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",40,36]
[2020-05-25T00:37:49.555Z][QUERY]: COMMIT
[2020-05-25T00:37:54.170Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["40","40","40","40"]
[2020-05-25T00:38:00.197Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["40","36","40","36"]
[2020-05-25T00:38:31.353Z][QUERY]: START TRANSACTION
[2020-05-25T00:38:31.355Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Anabelle_Cronin","https://s3.amazonaws.com/uifaces/faces/twitter/joshuaraichur/128.jpg","client"]
[2020-05-25T00:38:31.364Z][QUERY]: COMMIT
[2020-05-25T00:38:31.367Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:38:34.855Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:38:35.059Z][QUERY]: START TRANSACTION
[2020-05-25T00:38:35.062Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Jamey43","https://s3.amazonaws.com/uifaces/faces/twitter/greenbes/128.jpg","client"]
[2020-05-25T00:38:35.067Z][QUERY]: COMMIT
[2020-05-25T00:38:35.080Z][QUERY]: START TRANSACTION
[2020-05-25T00:38:35.081Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Joanny18","https://s3.amazonaws.com/uifaces/faces/twitter/quailandquasar/128.jpg","client"]
[2020-05-25T00:38:35.086Z][QUERY]: COMMIT
[2020-05-25T00:38:35.090Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:10.714Z][QUERY]: START TRANSACTION
[2020-05-25T00:39:10.716Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Victoria_Lakin28","https://s3.amazonaws.com/uifaces/faces/twitter/davidcazalis/128.jpg","client"]
[2020-05-25T00:39:10.728Z][QUERY]: COMMIT
[2020-05-25T00:39:10.734Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:23.306Z][QUERY]: START TRANSACTION
[2020-05-25T00:39:23.309Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Eleonore.Reynolds","https://s3.amazonaws.com/uifaces/faces/twitter/zaki3d/128.jpg","client"]
[2020-05-25T00:39:23.314Z][QUERY]: COMMIT
[2020-05-25T00:39:23.319Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:23.430Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:36.380Z][QUERY]: START TRANSACTION
[2020-05-25T00:39:36.383Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Merlin.Turcotte","https://s3.amazonaws.com/uifaces/faces/twitter/marlinjayakody/128.jpg","client"]
[2020-05-25T00:39:36.390Z][QUERY]: COMMIT
[2020-05-25T00:39:36.394Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:43.907Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:45.398Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:45.757Z][QUERY]: START TRANSACTION
[2020-05-25T00:39:45.759Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Verda57","https://s3.amazonaws.com/uifaces/faces/twitter/pixage/128.jpg","client"]
[2020-05-25T00:39:45.805Z][QUERY]: COMMIT
[2020-05-25T00:39:45.816Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:54.677Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:39:54.680Z][QUERY]: START TRANSACTION
[2020-05-25T00:39:54.689Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Eloise_Littel72","https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg","client"]
[2020-05-25T00:39:54.694Z][QUERY]: COMMIT
[2020-05-25T00:39:54.836Z][QUERY]: START TRANSACTION
[2020-05-25T00:39:54.837Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ephraim.OHara45","https://s3.amazonaws.com/uifaces/faces/twitter/nathalie_fs/128.jpg","client"]
[2020-05-25T00:39:54.843Z][QUERY]: COMMIT
[2020-05-25T00:39:54.846Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:40:18.552Z][QUERY]: START TRANSACTION
[2020-05-25T00:40:18.555Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Maye.Fritsch","https://s3.amazonaws.com/uifaces/faces/twitter/itolmach/128.jpg","client"]
[2020-05-25T00:40:18.586Z][QUERY]: COMMIT
[2020-05-25T00:40:18.591Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:40:18.957Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:40:19.265Z][QUERY]: START TRANSACTION
[2020-05-25T00:40:19.272Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Lonzo.Davis","https://s3.amazonaws.com/uifaces/faces/twitter/adobi/128.jpg","client"]
[2020-05-25T00:40:19.298Z][QUERY]: COMMIT
[2020-05-25T00:40:19.311Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:40:21.959Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["49","51","49","51"]
[2020-05-25T00:41:40.544Z][QUERY]: START TRANSACTION
[2020-05-25T00:41:40.549Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:41:40.554Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:41:40.555Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:41:40.555Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:41:40.556Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:41:40.557Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:41:40.739Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:41:40.774Z][QUERY]: COMMIT
[2020-05-25T00:41:41.254Z][QUERY]: START TRANSACTION
[2020-05-25T00:41:41.273Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Alberta92","https://s3.amazonaws.com/uifaces/faces/twitter/woodsman001/128.jpg","client"]
[2020-05-25T00:41:41.289Z][QUERY]: COMMIT
[2020-05-25T00:41:41.301Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:41:42.420Z][QUERY]: START TRANSACTION
[2020-05-25T00:41:42.427Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Willow.Pfannerstill","https://s3.amazonaws.com/uifaces/faces/twitter/jarsen/128.jpg","client"]
[2020-05-25T00:41:42.433Z][QUERY]: COMMIT
[2020-05-25T00:41:42.438Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:05.209Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:06.651Z][QUERY]: START TRANSACTION
[2020-05-25T00:42:06.657Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ophelia_Mills","https://s3.amazonaws.com/uifaces/faces/twitter/victorDubugras/128.jpg","client"]
[2020-05-25T00:42:06.661Z][QUERY]: COMMIT
[2020-05-25T00:42:06.671Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:25.250Z][QUERY]: START TRANSACTION
[2020-05-25T00:42:25.252Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Deborah3","https://s3.amazonaws.com/uifaces/faces/twitter/mekal/128.jpg","client"]
[2020-05-25T00:42:25.259Z][QUERY]: COMMIT
[2020-05-25T00:42:25.265Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:41.706Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:42.870Z][QUERY]: START TRANSACTION
[2020-05-25T00:42:42.872Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Gordon.Kuhlman","https://s3.amazonaws.com/uifaces/faces/twitter/bereto/128.jpg","client"]
[2020-05-25T00:42:42.876Z][QUERY]: COMMIT
[2020-05-25T00:42:42.890Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:56.395Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:42:57.130Z][QUERY]: START TRANSACTION
[2020-05-25T00:42:57.132Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Greyson_Carroll81","https://s3.amazonaws.com/uifaces/faces/twitter/91bilal/128.jpg","client"]
[2020-05-25T00:42:57.135Z][QUERY]: COMMIT
[2020-05-25T00:42:57.141Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:46:04.387Z][QUERY]: START TRANSACTION
[2020-05-25T00:46:04.392Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:46:04.399Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:46:04.400Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:46:04.401Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:46:04.401Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:46:04.402Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:46:04.522Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:46:04.531Z][QUERY]: COMMIT
[2020-05-25T00:46:05.719Z][QUERY]: START TRANSACTION
[2020-05-25T00:46:05.731Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Fleta49","https://s3.amazonaws.com/uifaces/faces/twitter/silvanmuhlemann/128.jpg","client"]
[2020-05-25T00:46:05.753Z][QUERY]: COMMIT
[2020-05-25T00:46:05.766Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:46:29.606Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:46:31.029Z][QUERY]: START TRANSACTION
[2020-05-25T00:46:31.033Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Deanna_Glover","https://s3.amazonaws.com/uifaces/faces/twitter/haruintesettden/128.jpg","client"]
[2020-05-25T00:46:31.041Z][QUERY]: COMMIT
[2020-05-25T00:46:31.044Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:48:44.601Z][QUERY]: START TRANSACTION
[2020-05-25T00:48:44.608Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:48:44.623Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:48:44.624Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:48:44.625Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:48:44.626Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:48:44.627Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:48:44.739Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:48:44.747Z][QUERY]: COMMIT
[2020-05-25T00:48:45.281Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:48:46.088Z][QUERY]: START TRANSACTION
[2020-05-25T00:48:46.099Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Buck.Wilkinson71","https://s3.amazonaws.com/uifaces/faces/twitter/andrewofficer/128.jpg","client"]
[2020-05-25T00:48:46.109Z][QUERY]: COMMIT
[2020-05-25T00:49:20.202Z][QUERY]: START TRANSACTION
[2020-05-25T00:49:20.206Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Nona_Trantow","https://s3.amazonaws.com/uifaces/faces/twitter/wiljanslofstra/128.jpg","client"]
[2020-05-25T00:49:20.230Z][QUERY]: COMMIT
[2020-05-25T00:49:20.585Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:49:46.813Z][QUERY]: START TRANSACTION
[2020-05-25T00:49:46.819Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:49:46.825Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:49:46.826Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:49:46.827Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:49:46.828Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:49:46.828Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:49:46.983Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:49:46.995Z][QUERY]: COMMIT
[2020-05-25T00:49:47.329Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:49:47.474Z][QUERY]: START TRANSACTION
[2020-05-25T00:49:47.482Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Verona29","https://s3.amazonaws.com/uifaces/faces/twitter/cherif_b/128.jpg","client"]
[2020-05-25T00:49:47.498Z][QUERY]: COMMIT
[2020-05-25T00:49:47.503Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:51:05.012Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:51:06.683Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:51:06.955Z][QUERY]: START TRANSACTION
[2020-05-25T00:51:06.958Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Alvera_OConnell","https://s3.amazonaws.com/uifaces/faces/twitter/BryanHorsey/128.jpg","client"]
[2020-05-25T00:51:06.974Z][QUERY]: COMMIT
[2020-05-25T00:51:06.981Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:52:17.487Z][QUERY]: START TRANSACTION
[2020-05-25T00:52:17.491Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:52:17.498Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:52:17.499Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:52:17.500Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:52:17.500Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:52:17.501Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:52:17.623Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:52:17.634Z][QUERY]: COMMIT
[2020-05-25T00:52:20.849Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:52:21.538Z][QUERY]: START TRANSACTION
[2020-05-25T00:52:21.597Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Gia75","https://s3.amazonaws.com/uifaces/faces/twitter/BenouarradeM/128.jpg","client"]
[2020-05-25T00:52:21.822Z][QUERY]: COMMIT
[2020-05-25T00:52:21.859Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:52:33.529Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:52:35.316Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:52:35.574Z][QUERY]: START TRANSACTION
[2020-05-25T00:52:35.577Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Carole.Ruecker83","https://s3.amazonaws.com/uifaces/faces/twitter/coreyhaggard/128.jpg","client"]
[2020-05-25T00:52:35.595Z][QUERY]: COMMIT
[2020-05-25T00:52:35.600Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:57:34.366Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:57:35.680Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:57:36.057Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:57:47.355Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:57:48.359Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:57:48.599Z][QUERY]: START TRANSACTION
[2020-05-25T00:57:48.604Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kari.Barrows","https://s3.amazonaws.com/uifaces/faces/twitter/jordyvdboom/128.jpg","client"]
[2020-05-25T00:57:48.613Z][QUERY]: COMMIT
[2020-05-25T00:57:48.619Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:58:02.132Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:58:03.172Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:58:03.353Z][QUERY]: START TRANSACTION
[2020-05-25T00:58:03.357Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Claud4","https://s3.amazonaws.com/uifaces/faces/twitter/nilshelmersson/128.jpg","client"]
[2020-05-25T00:58:03.370Z][QUERY]: COMMIT
[2020-05-25T00:58:03.377Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:58:46.723Z][QUERY]: START TRANSACTION
[2020-05-25T00:58:46.729Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:58:46.745Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:58:46.746Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:58:46.747Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:58:46.748Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:58:46.748Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:58:46.874Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:58:46.884Z][QUERY]: COMMIT
[2020-05-25T00:58:48.296Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:58:48.472Z][QUERY]: START TRANSACTION
[2020-05-25T00:58:48.478Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ellie44","https://s3.amazonaws.com/uifaces/faces/twitter/overcloacked/128.jpg","client"]
[2020-05-25T00:58:48.488Z][QUERY]: COMMIT
[2020-05-25T00:58:48.492Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:59:57.477Z][QUERY]: START TRANSACTION
[2020-05-25T00:59:57.482Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T00:59:57.486Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:59:57.487Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T00:59:57.488Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:59:57.488Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T00:59:57.489Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T00:59:57.556Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T00:59:57.568Z][QUERY]: COMMIT
[2020-05-25T00:59:57.816Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T00:59:58.090Z][QUERY]: START TRANSACTION
[2020-05-25T00:59:58.100Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Elsie.Abshire","https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg","client"]
[2020-05-25T00:59:58.127Z][QUERY]: COMMIT
[2020-05-25T00:59:58.141Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:00:13.104Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:00:14.965Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:00:15.307Z][QUERY]: START TRANSACTION
[2020-05-25T01:00:15.311Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Lolita_Adams","https://s3.amazonaws.com/uifaces/faces/twitter/leehambley/128.jpg","client"]
[2020-05-25T01:00:15.318Z][QUERY]: COMMIT
[2020-05-25T01:00:15.323Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:00:42.241Z][QUERY]: START TRANSACTION
[2020-05-25T01:00:42.247Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T01:00:42.258Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T01:00:42.259Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T01:00:42.260Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T01:00:42.261Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T01:00:42.262Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T01:00:42.378Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T01:00:42.386Z][QUERY]: COMMIT
[2020-05-25T01:00:42.727Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:00:42.959Z][QUERY]: START TRANSACTION
[2020-05-25T01:00:42.977Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Vidal93","https://s3.amazonaws.com/uifaces/faces/twitter/adamsxu/128.jpg","client"]
[2020-05-25T01:00:43.001Z][QUERY]: COMMIT
[2020-05-25T01:00:43.007Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:02:25.874Z][QUERY]: START TRANSACTION
[2020-05-25T01:02:25.879Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T01:02:25.888Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T01:02:25.889Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T01:02:25.889Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T01:02:25.890Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T01:02:25.891Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T01:02:26.094Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T01:02:26.106Z][QUERY]: COMMIT
[2020-05-25T01:02:28.156Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:02:28.710Z][QUERY]: START TRANSACTION
[2020-05-25T01:02:28.721Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Trever_Koch24","https://s3.amazonaws.com/uifaces/faces/twitter/anaami/128.jpg","client"]
[2020-05-25T01:02:28.750Z][QUERY]: COMMIT
[2020-05-25T01:02:28.762Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:06:10.982Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:06:14.900Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:06:15.193Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:06:35.712Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:06:36.677Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:06:36.831Z][QUERY]: START TRANSACTION
[2020-05-25T01:06:36.852Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ellis_Kirlin19","https://s3.amazonaws.com/uifaces/faces/twitter/bcrad/128.jpg","client"]
[2020-05-25T01:06:36.881Z][QUERY]: COMMIT
[2020-05-25T01:06:36.887Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:12:21.004Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:12:22.772Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:12:23.028Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:12:47.640Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:12:48.620Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:12:48.919Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:13:18.790Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:13:20.097Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:13:20.410Z][QUERY]: START TRANSACTION
[2020-05-25T01:13:20.422Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Angelica22","https://s3.amazonaws.com/uifaces/faces/twitter/opnsrce/128.jpg","client"]
[2020-05-25T01:13:20.442Z][QUERY]: COMMIT
[2020-05-25T01:13:20.451Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:14:48.166Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:14:49.286Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:14:49.593Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:53:26.117Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:53:27.369Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:53:27.600Z][QUERY]: START TRANSACTION
[2020-05-25T01:53:27.618Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Lenny80","https://s3.amazonaws.com/uifaces/faces/twitter/aaroni/128.jpg","client"]
[2020-05-25T01:53:27.656Z][QUERY]: COMMIT
[2020-05-25T01:53:27.671Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:55:05.057Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:59:12.062Z][QUERY]: START TRANSACTION
[2020-05-25T01:59:12.078Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T01:59:12.096Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T01:59:12.098Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T01:59:12.100Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T01:59:12.102Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T01:59:12.104Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T01:59:12.796Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T01:59:12.813Z][QUERY]: COMMIT
[2020-05-25T01:59:58.511Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:59:58.537Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T01:59:58.538Z][QUERY]: START TRANSACTION
[2020-05-25T01:59:58.551Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Benny_Emard76","https://s3.amazonaws.com/uifaces/faces/twitter/mahdif/128.jpg","client"]
[2020-05-25T01:59:58.707Z][QUERY]: COMMIT
[2020-05-25T01:59:58.729Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:15.019Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:15.906Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:16.258Z][QUERY]: START TRANSACTION
[2020-05-25T02:00:16.260Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Camren92","https://s3.amazonaws.com/uifaces/faces/twitter/megdraws/128.jpg","client"]
[2020-05-25T02:00:16.317Z][QUERY]: COMMIT
[2020-05-25T02:00:16.451Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:16.595Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:38.652Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:39.779Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:40.495Z][QUERY]: START TRANSACTION
[2020-05-25T02:00:40.497Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["America_Mann27","https://s3.amazonaws.com/uifaces/faces/twitter/chrisstumph/128.jpg","client"]
[2020-05-25T02:00:40.592Z][QUERY]: COMMIT
[2020-05-25T02:00:40.635Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:00:40.950Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:18.920Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:18.943Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:19.111Z][QUERY]: START TRANSACTION
[2020-05-25T02:01:19.115Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kamren82","https://s3.amazonaws.com/uifaces/faces/twitter/mashaaaaal/128.jpg","client"]
[2020-05-25T02:01:19.130Z][QUERY]: COMMIT
[2020-05-25T02:01:19.154Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:37.703Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:38.639Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:39.016Z][QUERY]: START TRANSACTION
[2020-05-25T02:01:39.018Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Carlos_Abernathy16","https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg","client"]
[2020-05-25T02:01:39.025Z][QUERY]: COMMIT
[2020-05-25T02:01:39.048Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:39.146Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:51.193Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:52.250Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:01:52.529Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:05:37.064Z][QUERY]: START TRANSACTION
[2020-05-25T02:05:37.072Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:05:37.087Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:05:37.088Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:05:37.088Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:05:37.089Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:05:37.090Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:05:37.392Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:05:37.439Z][QUERY]: COMMIT
[2020-05-25T02:05:38.278Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:05:38.645Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:05:43.365Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:05:43.366Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:05:59.073Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:00.262Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:00.523Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:00.682Z][QUERY]: START TRANSACTION
[2020-05-25T02:06:00.691Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Marcus.Wuckert","https://s3.amazonaws.com/uifaces/faces/twitter/we_social/128.jpg","client"]
[2020-05-25T02:06:00.713Z][QUERY]: COMMIT
[2020-05-25T02:06:00.740Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:13.380Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:15.510Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:15.844Z][QUERY]: START TRANSACTION
[2020-05-25T02:06:15.848Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Oleta.Ward88","https://s3.amazonaws.com/uifaces/faces/twitter/lisovsky/128.jpg","client"]
[2020-05-25T02:06:15.912Z][QUERY]: COMMIT
[2020-05-25T02:06:15.964Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:16.482Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:31.853Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:33.030Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:33.203Z][QUERY]: START TRANSACTION
[2020-05-25T02:06:33.205Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Christian.Wuckert","https://s3.amazonaws.com/uifaces/faces/twitter/fronx/128.jpg","client"]
[2020-05-25T02:06:33.238Z][QUERY]: COMMIT
[2020-05-25T02:06:33.274Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:06:33.506Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:36.767Z][QUERY]: START TRANSACTION
[2020-05-25T02:07:36.774Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:07:36.784Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:07:36.785Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:07:36.785Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:07:36.786Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:07:36.787Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:07:36.957Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:07:36.973Z][QUERY]: COMMIT
[2020-05-25T02:07:37.351Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:37.634Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:37.984Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:38.044Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:57.551Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:59.102Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:59.337Z][QUERY]: START TRANSACTION
[2020-05-25T02:07:59.346Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Rodolfo32","https://s3.amazonaws.com/uifaces/faces/twitter/craigelimeliah/128.jpg","client"]
[2020-05-25T02:07:59.366Z][QUERY]: COMMIT
[2020-05-25T02:07:59.381Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:59.396Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:07:59.975Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:08:12.670Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:08:14.057Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:08:14.417Z][QUERY]: START TRANSACTION
[2020-05-25T02:08:14.419Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Amanda_Torp","https://s3.amazonaws.com/uifaces/faces/twitter/sprayaga/128.jpg","client"]
[2020-05-25T02:08:14.481Z][QUERY]: COMMIT
[2020-05-25T02:08:14.513Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:08:14.527Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:08:14.877Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:09:50.836Z][QUERY]: START TRANSACTION
[2020-05-25T02:09:50.841Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:09:50.850Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:09:50.852Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:09:50.852Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:09:50.853Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:09:50.854Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:09:50.990Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:09:50.999Z][QUERY]: COMMIT
[2020-05-25T02:09:51.257Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:09:51.305Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:09:52.249Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:09:52.353Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:07.403Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:08.661Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:08.865Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:17.477Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:18.972Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:19.138Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:36.134Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:37.460Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:37.642Z][QUERY]: START TRANSACTION
[2020-05-25T02:10:37.655Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Elinor8","https://s3.amazonaws.com/uifaces/faces/twitter/thewillbeard/128.jpg","client"]
[2020-05-25T02:10:37.690Z][QUERY]: COMMIT
[2020-05-25T02:10:37.695Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:37.758Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:38.029Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:55.157Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:56.208Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:56.450Z][QUERY]: START TRANSACTION
[2020-05-25T02:10:56.452Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Kennith66","https://s3.amazonaws.com/uifaces/faces/twitter/charliecwaite/128.jpg","client"]
[2020-05-25T02:10:56.481Z][QUERY]: COMMIT
[2020-05-25T02:10:56.482Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:56.492Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:10:57.231Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:11:31.883Z][QUERY]: START TRANSACTION
[2020-05-25T02:11:31.890Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:11:31.900Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:11:31.901Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:11:31.901Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:11:31.902Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:11:31.903Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:11:32.113Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:11:32.127Z][QUERY]: COMMIT
[2020-05-25T02:11:32.466Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:11:32.538Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:11:32.747Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:11:32.907Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:00.001Z][QUERY]: START TRANSACTION
[2020-05-25T02:12:00.008Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:12:00.023Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:12:00.023Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:12:00.024Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:12:00.025Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:12:00.026Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:12:00.212Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:12:00.232Z][QUERY]: COMMIT
[2020-05-25T02:12:00.502Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:00.577Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:00.789Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:00.944Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:35.203Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:37.243Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:37.810Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:52.017Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:52.958Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:53.075Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:12:53.235Z][QUERY]: START TRANSACTION
[2020-05-25T02:12:53.245Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Tyra.Wolff0","https://s3.amazonaws.com/uifaces/faces/twitter/vovkasolovev/128.jpg","client"]
[2020-05-25T02:12:53.260Z][QUERY]: COMMIT
[2020-05-25T02:12:53.276Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:28.272Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:30.660Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:31.033Z][QUERY]: START TRANSACTION
[2020-05-25T02:13:31.046Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Filiberto_Collins56","https://s3.amazonaws.com/uifaces/faces/twitter/joemdesign/128.jpg","client"]
[2020-05-25T02:13:31.105Z][QUERY]: COMMIT
[2020-05-25T02:13:31.120Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:31.204Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:52.358Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:53.427Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:53.557Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:13:53.802Z][QUERY]: START TRANSACTION
[2020-05-25T02:13:53.807Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Randal.Hahn70","https://s3.amazonaws.com/uifaces/faces/twitter/s4f1/128.jpg","client"]
[2020-05-25T02:13:53.829Z][QUERY]: COMMIT
[2020-05-25T02:13:53.856Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:14:37.114Z][QUERY]: START TRANSACTION
[2020-05-25T02:14:37.122Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:14:37.138Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:14:37.139Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:14:37.139Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:14:37.148Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:14:37.151Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:14:37.329Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:14:37.338Z][QUERY]: COMMIT
[2020-05-25T02:14:37.804Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:14:38.094Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:14:38.227Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:14:38.399Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:14:51.606Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:15:00.984Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:15:02.343Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:15:02.641Z][QUERY]: START TRANSACTION
[2020-05-25T02:15:02.651Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Cordie.Renner92","https://s3.amazonaws.com/uifaces/faces/twitter/stefanotirloni/128.jpg","client"]
[2020-05-25T02:15:02.689Z][QUERY]: COMMIT
[2020-05-25T02:15:02.717Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:15:02.811Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:01.822Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:04.832Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:05.674Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:41.701Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:42.988Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:43.189Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:16:52.680Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["91","2","91","2"]
[2020-05-25T02:16:58.358Z][QUERY]: START TRANSACTION
[2020-05-25T02:16:58.386Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["rev",2,91]
[2020-05-25T02:16:58.429Z][QUERY]: COMMIT
[2020-05-25T02:16:58.477Z][QUERY]: START TRANSACTION
[2020-05-25T02:16:58.480Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["ver",91,2]
[2020-05-25T02:16:58.484Z][QUERY]: COMMIT
[2020-05-25T02:17:03.361Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["91","4","91","4"]
[2020-05-25T02:17:48.127Z][QUERY]: START TRANSACTION
[2020-05-25T02:17:48.130Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["eveniet",91,4]
[2020-05-25T02:17:48.173Z][QUERY]: COMMIT
[2020-05-25T02:18:36.755Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:18:36.790Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:18:42.180Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["89","91","89","91"]
[2020-05-25T02:18:45.956Z][QUERY]: START TRANSACTION
[2020-05-25T02:18:45.966Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, $2, $3) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["a",91,89]
[2020-05-25T02:18:46.002Z][QUERY]: COMMIT
[2020-05-25T02:18:50.059Z][QUERY]: SELECT "Message"."id" AS "Message_id", "Message"."text" AS "Message_text", "Message"."createdAt" AS "Message_createdAt", "Message"."updatedAt" AS "Message_updatedAt", "Message"."receiverId" AS "Message_receiverId", "Message"."senderId" AS "Message_senderId", "Message__receiver"."id" AS "Message__receiver_id", "Message__receiver"."name" AS "Message__receiver_name", "Message__receiver"."avatar" AS "Message__receiver_avatar", "Message__receiver"."description" AS "Message__receiver_description", "Message__receiver"."type" AS "Message__receiver_type", "Message__receiver"."createdAt" AS "Message__receiver_createdAt", "Message__receiver"."updatedAt" AS "Message__receiver_updatedAt", "Message__sender"."id" AS "Message__sender_id", "Message__sender"."name" AS "Message__sender_name", "Message__sender"."avatar" AS "Message__sender_avatar", "Message__sender"."description" AS "Message__sender_description", "Message__sender"."type" AS "Message__sender_type", "Message__sender"."createdAt" AS "Message__sender_createdAt", "Message__sender"."updatedAt" AS "Message__sender_updatedAt" FROM "message" "Message" LEFT JOIN "users" "Message__receiver" ON "Message__receiver"."id"="Message"."receiverId"  LEFT JOIN "users" "Message__sender" ON "Message__sender"."id"="Message"."senderId" WHERE "Message"."receiverId" IN ($1, $2) AND "Message"."senderId" IN ($3, $4) -- PARAMETERS: ["91","89","91","89"]
[2020-05-25T02:24:27.748Z][QUERY]: START TRANSACTION
[2020-05-25T02:24:27.756Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:24:27.768Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:24:27.769Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:24:27.770Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:24:27.770Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:24:27.771Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:24:28.158Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:24:28.175Z][QUERY]: COMMIT
[2020-05-25T02:24:28.760Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:24:28.972Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:24:31.343Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:24:31.381Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:31:23.497Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:23.505Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:31:23.517Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-25T02:31:23.517Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-25T02:31:23.518Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-25T02:31:23.520Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-25T02:31:23.521Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:31:23.724Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:31:23.733Z][QUERY]: COMMIT
[2020-05-25T02:31:23.736Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:23.737Z][QUERY]: SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (current_schema()) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')
[2020-05-25T02:31:23.742Z][QUERY]: SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (current_schema()) AND "tablename" NOT IN ('spatial_ref_sys')
[2020-05-25T02:31:23.753Z][QUERY]: DROP TABLE IF EXISTS "public"."users" CASCADE;
[2020-05-25T02:31:23.753Z][QUERY]: DROP TABLE IF EXISTS "public"."message" CASCADE;
[2020-05-25T02:31:23.803Z][QUERY]: SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (current_schema()) GROUP BY "n"."nspname", "t"."typname"
[2020-05-25T02:31:23.817Z][QUERY]: COMMIT
[2020-05-25T02:31:23.885Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:23.887Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:31:23.889Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-25T02:31:23.890Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'users') OR ("table_schema" = 'public' AND "table_name" = 'message')
[2020-05-25T02:31:23.891Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-25T02:31:23.892Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'message'))
[2020-05-25T02:31:23.893Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'users') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'message')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:31:23.911Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:31:23.915Z][QUERY]: CREATE TABLE "users" ("id" SERIAL NOT NULL, "name" character varying NOT NULL DEFAULT '', "avatar" character varying NOT NULL DEFAULT '', "description" character varying NOT NULL DEFAULT '', "type" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))
[2020-05-25T02:31:24.008Z][QUERY]: CREATE TABLE "message" ("id" SERIAL NOT NULL, "text" character varying NOT NULL DEFAULT '', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "receiverId" integer, "senderId" integer, CONSTRAINT "PK_ba01f0a3e0123651915008bc578" PRIMARY KEY ("id"))
[2020-05-25T02:31:24.078Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_71fb36906595c602056d936fc13" FOREIGN KEY ("receiverId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-25T02:31:24.101Z][QUERY]: ALTER TABLE "message" ADD CONSTRAINT "FK_bc096b4e18b1f9508197cd98066" FOREIGN KEY ("senderId") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
[2020-05-25T02:31:24.109Z][QUERY]: COMMIT
[2020-05-25T02:31:24.136Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:24.146Z][QUERY]: INSERT INTO "message"("text", "createdAt", "updatedAt", "receiverId", "senderId") VALUES ($1, DEFAULT, DEFAULT, DEFAULT, DEFAULT) RETURNING "id", "text", "createdAt", "updatedAt" -- PARAMETERS: ["test"]
[2020-05-25T02:31:24.161Z][QUERY]: COMMIT
[2020-05-25T02:31:24.166Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:24.168Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Echo Bot","https://s3.amazonaws.com/uifaces/faces/twitter/psdesignuk/128.jpg","bot.echo"]
[2020-05-25T02:31:24.172Z][QUERY]: COMMIT
[2020-05-25T02:31:24.174Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:24.176Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Reverse Bot","https://s3.amazonaws.com/uifaces/faces/twitter/zforrester/128.jpg","bot.reverse"]
[2020-05-25T02:31:24.178Z][QUERY]: COMMIT
[2020-05-25T02:31:24.180Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:24.182Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Ignor Bot","https://s3.amazonaws.com/uifaces/faces/twitter/nyancecom/128.jpg","bot.ignor"]
[2020-05-25T02:31:24.184Z][QUERY]: COMMIT
[2020-05-25T02:31:24.186Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:24.188Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Spam Bot","https://s3.amazonaws.com/uifaces/faces/twitter/edhenderson/128.jpg","bot.spam"]
[2020-05-25T02:31:24.190Z][QUERY]: COMMIT
[2020-05-25T02:31:52.873Z][QUERY]: START TRANSACTION
[2020-05-25T02:31:52.878Z][QUERY]: SELECT * FROM current_schema()
[2020-05-25T02:31:52.886Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:31:52.887Z][QUERY]: SELECT *, ('"' || "udt_schema" || '"."' || "udt_name" || '"')::"regtype" AS "regtype" FROM "information_schema"."columns" WHERE ("table_schema" = 'public' AND "table_name" = 'message') OR ("table_schema" = 'public' AND "table_name" = 'users')
[2020-05-25T02:31:52.888Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" = 'r' AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:31:52.889Z][QUERY]: SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" = 'r' AND "cnst"."contype" IS NULL AND (("ns"."nspname" = 'public' AND "t"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "t"."relname" = 'users'))
[2020-05-25T02:31:52.889Z][QUERY]: SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (("ns"."nspname" = 'public' AND "cl"."relname" = 'message') OR ("ns"."nspname" = 'public' AND "cl"."relname" = 'users')) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"
[2020-05-25T02:31:52.965Z][QUERY]: SELECT * FROM "information_schema"."tables" WHERE "table_schema" = current_schema() AND "table_name" = 'typeorm_metadata'
[2020-05-25T02:31:52.975Z][QUERY]: COMMIT
[2020-05-25T02:31:53.218Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:31:53.450Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:31:53.469Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:31:53.484Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:23.634Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:24.812Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:25.504Z][QUERY]: START TRANSACTION
[2020-05-25T02:32:25.515Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Carmella.Ferry","https://s3.amazonaws.com/uifaces/faces/twitter/batsirai/128.jpg","client"]
[2020-05-25T02:32:25.542Z][QUERY]: COMMIT
[2020-05-25T02:32:25.634Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:25.747Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:53.775Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:55.415Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:55.555Z][QUERY]: START TRANSACTION
[2020-05-25T02:32:55.559Z][QUERY]: INSERT INTO "users"("name", "avatar", "description", "type", "createdAt", "updatedAt") VALUES ($1, $2, DEFAULT, $3, DEFAULT, DEFAULT) RETURNING "id", "name", "avatar", "description", "createdAt", "updatedAt" -- PARAMETERS: ["Cielo.Kreiger","https://s3.amazonaws.com/uifaces/faces/twitter/naupintos/128.jpg","client"]
[2020-05-25T02:32:55.576Z][QUERY]: COMMIT
[2020-05-25T02:32:55.579Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:32:55.838Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
[2020-05-25T02:33:18.419Z][QUERY]: SELECT "Users"."id" AS "Users_id", "Users"."name" AS "Users_name", "Users"."avatar" AS "Users_avatar", "Users"."description" AS "Users_description", "Users"."type" AS "Users_type", "Users"."createdAt" AS "Users_createdAt", "Users"."updatedAt" AS "Users_updatedAt" FROM "users" "Users"
